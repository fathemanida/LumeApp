<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>LUME Admin - Coupon Management</title>
    <link href="https://fonts.googleapis.com/css2?family=Aboreto&family=Jost:wght@300;400;500&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <link rel="stylesheet" href="/css/admin/admin.css">
    <link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css">
    <link rel="icon" href="/images/image.png" type="image/png">

    <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/toastify-js"></script>
</head>
<body>
    <div class="sidebar-overlay" id="sidebarOverlay"></div>
    <!-- Sidebar -->
<%-include('../partials/admin/sidebar.ejs',{currentPage:'Coupons'}) %>


    <!-- Main Content -->
    <main class="main-content">
        <div class="header">
            <div class="header-left">
                <button class="mobile-menu-btn" id="mobileMenuBtn">
                    <i class="fas fa-bars"></i>
                </button>
                <h1 class="page-title">Coupon Management</h1>
            </div>
            <a href="/admin/coupons/add" class="btn btn-primary">
                <i class="fas fa-plus"></i> Add New Coupon
            </a>
        </div>
        
        <div class="search-filter-section">
            <div class="search-box">
                <i class="fas fa-search search-icon"></i>
                <input type="text" class="search-input" id="searchInput" placeholder="Search coupons...">
            </div>
        </div>

        <div class="table-container">
                <table class="table">
                    <thead>
                        <tr>
                            <th>Code</th>
                            <th>Discount</th>
                            <th>Valid From</th>
                            <th>Valid To</th>
                            <th>Status</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% coupons.forEach(coupon => { %>
                        <tr>
                            <td><%= coupon.code %></td>
                            <td><%= coupon.discountType === 'PERCENTAGE' ? `${coupon.discountValue}%` : `$${coupon.discountValue}` %></td>
                            <td><%= new Date(coupon.createdAt).toLocaleDateString('en-US', { year: 'numeric', month: 'short', day: 'numeric' }) %></td>
                            <td class="<%= new Date(coupon.expiryDate) < new Date() ? 'text-danger' : '' %>">
                                <%= new Date(coupon.expiryDate).toLocaleDateString('en-US', { year: 'numeric', month: 'short', day: 'numeric' }) %>
                                <% if (new Date(coupon.expiryDate) < new Date()) { %>
                                    <br><small class="expired-badge">(Expired)</small>
                                <% } %>
                            </td>
                            <td>
                                <% if (new Date(coupon.expiryDate) < new Date()) { %>
                                    <span class="status-badge status-expired">
                                        Expired
                                    </span>
                                <% } else { %>
                                    <label class="switch">
                                        <input type="checkbox" 
                                               class="status-toggle" 
                                               data-coupon-id="<%= coupon._id %>"
                                               <%= coupon.isActive ? 'checked' : '' %>>
                                        <span class="slider round"></span>
                                    </label>
                                <% } %>
                            </td>
                            <td>
                                <a href="/admin/coupons/edit/<%= coupon._id %>" class="action-btn btn-edit" title="Edit Coupon">
                                    <i class="fas fa-edit"></i>
                                </a>
                                <button type="button" class="action-btn btn-delete" data-coupon-id="<%= coupon._id %>" title="Delete Coupon">
                                    <i class="fas fa-trash"></i>
                                </button>
                            </td>
                        </tr>
                        <% }); %>
                    </tbody>
                </table>
            </div>

        <!-- Pagination -->
        <div class="pagination">
            <% if (totalPages >= 1) { %>
                <% if (currentPage >= 1) { %>
                    <button class="pagination-btn" data-page="<%= currentPage - 1 %>">Previous</button>
                <% } %>
                
                <% for(let i = 1; i <= totalPages; i++) { %>
                    <button class="pagination-btn <%= currentPage === i ? 'active' : '' %>" data-page="<%= i %>">
                        <%= i %>
                    </button>
                <% } %>
                
                <% if (currentPage < totalPages) { %>
                    <button class="pagination-btn" data-page="<%= currentPage + 1 %>">Next</button>
                <% } %>
            <% } %>
            
            <span class="pagination-info">
                Showing <%= (currentPage - 1) * limit + 1 %> to <%= Math.min(currentPage * limit, totalItems) %> of <%= totalItems %> entries
            </span>
        </div>
    </main>

    <script>
        const searchInput = document.getElementById('searchInput');
        if (searchInput) {
            searchInput.addEventListener('input', function() {
                const searchTerm = this.value.trim();
                const url = new URL(window.location.href);
                
                if (searchTerm) {
                    url.searchParams.set('search', searchTerm);
                    url.searchParams.set('page', '1');
                } else {
                    url.searchParams.delete('search');
                }
                
                window.location.href = url.toString();
            });
        }

        // 
        const paginationButtons = document.querySelectorAll('.pagination-btn');
        if (paginationButtons.length > 0) {
            paginationButtons.forEach(btn => {
                btn.addEventListener('click', function() {
                    const page = this.dataset.page;
                    const url = new URL(window.location.href);
                    url.searchParams.set('page', page);
                    window.location.href = url.toString();
                });
            });
        }

        document.querySelectorAll('.status-toggle').forEach(toggle => {
            toggle.addEventListener('change', async function() {
                const couponId = this.dataset.couponId;
                const newStatus = this.checked;
                
                try {
                    const response = await fetch(`/admin/coupons/${couponId}/toggle-status`, {
                        method: 'PUT',
                        headers: {
                            'Content-Type': 'application/json',
                            'Accept': 'application/json'
                        },
                        body: JSON.stringify({ isActive: newStatus })
                    });
                    
                    const result = await response.json();
                    
                    if (response.ok) {
                        showToast(`Coupon ${newStatus ? 'activated' : 'deactivated'} successfully`);
                    } else {
                        this.checked = !newStatus;
                        showToast(result.message || 'Error updating coupon status', 'error');
                    }
                } catch (error) {
                    this.checked = !newStatus;
                    console.error('Error:', error);
                    showToast('Error updating coupon status', 'error');
                }
            });
        });
        
        document.querySelectorAll('.btn-delete').forEach(btn => {
            btn.addEventListener('click', async function() {
                const couponId = this.dataset.couponId;
                Swal.fire({
                    title: 'Are you sure?',
                    text: 'Do you really want to delete this coupon? This action cannot be undone.',
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#c62828',
                    cancelButtonColor: '#3085d6',
                    confirmButtonText: 'Yes, delete it!',
                    cancelButtonText: 'Cancel'
                }).then(async (result) => {
                    if (result.isConfirmed) {
                        try {
                            const response = await fetch(`/admin/coupons/${couponId}`, {
                                method: 'DELETE'
                            });
                            if (response.ok) {
                                btn.closest('tr').remove();
                                Swal.fire('Deleted!', 'Coupon deleted successfully.', 'success');
                            } else {
                                const result = await response.json();
                                Swal.fire('Error', result.message || 'Error deleting coupon', 'error');
                            }
                        } catch (error) {
                            console.error('Error:', error);
                            Swal.fire('Error', 'Error deleting coupon', 'error');
                        }
                    }
                });
            });
        });
        
        function showToast(message, type = 'success') {
            Toastify({
                text: message,
                duration: 3000,
                gravity: "top",
                position: "right",
                backgroundColor: type === 'success' ? "#2e7d32" : "#c62828",
                stopOnFocus: true
            }).showToast();
        }
    </script>

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <style>
        /* iOS Style Switch */
        .switch {
            position: relative;
            display: inline-block;
            width: 50px;
            height: 24px;
            margin: 0;
        }

        .switch input {
            opacity: 0;
            width: 0;
            height: 0;
            margin: 0;
            padding: 0;
        }

        .slider {
            position: absolute;
            cursor: pointer;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-color: #ccc;
            transition: .4s;
        }

        .slider:before {
            position: absolute;
            content: "";
            height: 16px;
            width: 16px;
            left: 4px;
            bottom: 4px;
            background-color: white;
            transition: .4s;
            border-radius: 50%;
        }
        
        .status-expired {
            background-color: #f5f5f5;
            color: #757575;
            border: 1px solid #e0e0e0;
            padding: 4px 8px;
            border-radius: 12px;
            font-size: 12px;
            font-weight: 500;
        }
        
        .expired-badge {
            color: #f44336;
            font-weight: 500;
            font-size: 0.8em;
        }
        
        .text-danger {
            color: #f44336;
        }

        input:checked + .slider {
            background-color: #2e7d32;
        }

        input:focus + .slider {
            box-shadow: 0 0 1px #2e7d32;
        }

        input:checked + .slider:before {
            transform: translateX(26px);
        }

        .slider.round {
            border-radius: 24px;
        }

        .slider.round:before {
            border-radius: 50%;
        }

        /* Toastify Custom Styles */
        .toastify {
            padding: 12px 20px;
            color: #fff;
            display: inline-block;
            box-shadow: 0 3px 6px -1px rgba(0, 0, 0, 0.12), 0 10px 36px -4px rgba(77, 171, 247, 0.3);
            background: -webkit-linear-gradient(315deg, #73a5ff, #5477f5);
            background: linear-gradient(135deg, #73a5ff, #5477f5);
            position: fixed;
            top: -150px;
            right: 15px;
            opacity: 0;
            transition: all 0.4s cubic-bezier(0.215, 0.61, 0.355, 1);
            border-radius: 2px;
            cursor: pointer;
            text-decoration: none;
            max-width: calc(50% - 20px);
            z-index: 2147483647;
        }

        .toastify.on {
            opacity: 1;
        }

        .toast-close {
            background: transparent;
            border: 0;
            color: #fff;
            cursor: pointer;
            font-family: inherit;
            font-size: 1em;
            opacity: 0.4;
            padding: 0 5px;
        }

        .toastify-right {
            right: 15px;
        }

        .toastify-left {
            left: 15px;
        }

        .toastify-top {
            top: -150px;
        }

        .toastify-bottom {
            bottom: -150px;
        }

        .toastify-rounded {
            border-radius: 25px;
        }

        .toastify-avatar {
            width: 1.5em;
            height: 1.5em;
            margin: -7px 5px;
            border-radius: 2px;
        }

        .toastify-center {
            margin-left: auto;
            margin-right: auto;
            left: 0;
            right: 0;
            max-width: fit-content;
            max-width: -moz-fit-content;
        }

        @media only screen and (max-width: 360px) {
            .toastify-right, .toastify-left {
                margin-left: auto;
                margin-right: auto;
                left: 0;
                right: 0;
                max-width: fit-content;
            }
        }

        .action-btn {
            padding: 6px;
            border-radius: 4px;
            border: none;
            cursor: pointer;
            margin: 0 2px;
            transition: all 0.3s ease;
            display: inline-flex;
            align-items: center;
            justify-content: center;
            width: 32px;
            height: 32px;
        }

        .action-btn.btn-edit {
            background-color: #1976d2;
            color: white;
        }

        .action-btn.btn-delete {
            background-color: #c62828;
            color: white;
        }

        .action-btn:hover {
            opacity: 0.9;
            transform: translateY(-1px);
        }

        .table td {
            vertical-align: middle;
        }
         .nav-menu ul {
    list-style: none;
}.nav-menu {
    list-style: none;
}
    </style>
</body>
</html>