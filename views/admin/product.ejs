<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Product Management | LUME Admin</title>
  <link href="https://fonts.googleapis.com/css2?family=Aboreto&family=Jost&display=swap" rel="stylesheet">
  <link rel="stylesheet" href="/css/admin/product.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">

   <link rel="icon" href="/images/image.png" type="image/png">


</head>

<body class="dashboard">
  <div class="sidebar-overlay" id="sidebarOverlay"></div>
<%-include('../partials/admin/sidebar.ejs',{currentPage:'product'}) %>


  <div class="main-content">
    <header class="main-header">
      <div class="header-left">
        <button class="mobile-menu-btn" id="mobileMenuBtn">
          <i class="fas fa-bars"></i>
        </button>
        <h2 class="page-title">PRODUCT</h2>
      </div>
      <div class="header-right">
        <div class="search-container">
          <form id="searchForm" action="/admin/product" method="GET">
            <input type="text" class="search-bar" placeholder="Search products..." name="search"
              value="<%= typeof search !== 'undefined' ? search : '' %>">
            <button type="button" class="clear-search">
              <i class="fas fa-times"></i>
            </button>
            <button type="submit" class="search-btn">
              <i class="fas fa-search"></i>
            </button>
          </form>
        </div>
        <button class="notification-btn">
          <i class="fas fa-bell"></i>
          <span class="notification-badge">3</span>
        </button>
        <div class="profile-dropdown">
          <img src="https://i.pravatar.cc/80" alt="Profile" class="profile-img">
          <span class="profile-name">Admin</span>
          <div class="profile-dropdown-menu">
            <a href="#" class="dropdown-item"><i class="fas fa-user"></i> Profile</a>
            <a href="#" class="dropdown-item"><i class="fas fa-cog"></i> Settings</a>
            <a href="/admin/logout" class="dropdown-item"><i class="fas fa-sign-out-alt"></i> Logout</a>
          </div>
        </div>
      </div>
    </header>

    <div class="content-area">
      <div class="action-bar">
        <h2 class="section-title">Product</h2>
        <button class="add-product-btn" onclick="window.location.href='/admin/add-product'">
          <i class="fas fa-plus"></i> ADD PRODUCT
        </button>
      </div>

      <div class="table-container">
        <table>
          <thead>
            <tr>
              <th>Image</th>
              <th>Name</th>
              <th>Category</th>
              <th>Price</th>
              <th>Offer</th>
              <th>Discount</th>
              <th>Valid Until</th>
              <th>Stock</th>
              <th>Status</th>
              <th>Actions</th>
            </tr>
          </thead>
          <tbody>
            <% for (let i = 0; i < data.length; i++) { %>
              <tr data-product-id="<%= data[i]._id %>">
                <td>
                  <img src="/uploads/product/<%= data[i].productImage[0] %>" alt="Product Image" style="height: 54px;" />
                </td>
                <td>
                  <%= data[i].productName %>
                </td>
                <td>
                  <%= data[i].category ? data[i].category.name : 'No Category' %>
                </td>
                <td>
                  <% if (data[i].salePrice && data[i].salePrice < data[i].regularPrice) { %>
                    <span style="text-decoration: line-through; color: var(--text-secondary);">₹<%= data[i].regularPrice.toFixed(2) %></span>
                    <br>
                    <span style="color: var(--accent-color);">₹<%= data[i].salePrice.toFixed(2) %></span>
                  <% } else { %>
                    ₹<%= data[i].regularPrice.toFixed(2) %>
                  <% } %>
                </td>
                <td>
                  <% if (data[i] && data[i].productOffer && data[i].productOffer.active) { %>
                    <span class="badge badge-success">Active</span>
                  <% } else if (data[i] && data[i].offer && data[i].offer.isActive) { %>
                    <span class="badge badge-success">Active</span>
                  <% } else { %>
                    <span class="badge badge-secondary">Inactive</span>
                  <% } %>
                </td>
                <td>
                  <% if (data[i] && data[i].productOffer && data[i].productOffer.active) { %>
                    <% if (data[i].productOffer.discountType === 'percentage') { %>
                      <%= data[i].productOffer.discountValue %>%
                    <% } else { %>
                      ₹<%= data[i].productOffer.discountValue.toFixed(2) %>
                    <% } %>
                  <% } else if (data[i] && data[i].offer && data[i].offer.isActive) { %>
                    <% if (data[i].offer.discountType === 'percentage') { %>
                      <%= data[i].offer.discountValue %>%
                    <% } else { %>
                      ₹<%= data[i].offer.discountValue.toFixed(2) %>
                    <% } %>
                  <% } else { %>
                    -
                  <% } %>
                </td>
                <td>
                  <% if (data[i] && data[i].productOffer && data[i].productOffer.active) { %>
                    <%= new Date(data[i].productOffer.endDate).toLocaleDateString() %>
                  <% } else if (data[i] && data[i].offer && data[i].offer.isActive) { %>
                    <%= new Date(data[i].offer.endDate).toLocaleDateString() %>
                  <% } else { %>
                    -
                  <% } %>
                </td>
                <td>
                  <%= data[i].quantity || data[i].productStock || 0 %>
                </td>
                <td>
                  <% if (data[i].isListed) { %>
                    <span class="status-listed">Listed</span>
                  <% } else { %>
                    <span class="status-unlisted">Unlisted</span>
                  <% } %>
                </td>
                <td>
                  <div class="action-buttons">
                    <a href="/admin/edit-product/<%= data[i]._id %>" class="action-btn edit-btn">
                      <i class="fas fa-edit"></i>
                    </a>
                    <% if (data[i].isListed) { %>
                      <button onclick="toggleListing('<%= data[i]._id %>', false)" class="action-btn unlist-btn">
                        <i class="fas fa-eye-slash"></i>
                      </button>
                    <% } else { %>
                      <button onclick="toggleListing('<%= data[i]._id %>', true)" class="action-btn list-btn">
                        <i class="fas fa-eye"></i>
                      </button>
                    <% } %>
                  </div>
                </td>
              </tr>
            <% } %>
          </tbody>
        </table>

        <div class="pagination">
          <span style="margin-right: 1rem; align-self: center;">
            Showing <%= currentPage %> of <%= totalPages %>
          </span>

          <% if (currentPage> 1) { %>
            <a href="?page=<%= currentPage - 1 %>" class="page-btn">&lt;</a>
          <% } else { %>
            <span class="page-btn" style="opacity: 0.5; pointer-events: none;">&lt;</span>
          <% } %>

          <% for (let i=1; i <=totalPages; i++) { %>
            <% if (i===currentPage) { %>
              <span class="page-btn active">
                <%= i %>
              </span>
            <% } else { %>
              <a href="?page=<%= i %>" class="page-btn">
                <%= i %>
              </a>
            <% } %>
          <% } %>

          <% if (currentPage < totalPages) { %>
            <a href="?page=<%= currentPage + 1 %>" class="page-btn">&gt;</a>
          <% } else { %>
            <span class="page-btn" style="opacity: 0.5; pointer-events: none;">&gt;</span>
          <% } %>
        </div>
      </div>
    </div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <script>
    // Sidebar toggle functionality
    const mobileMenuBtn = document.getElementById('mobileMenuBtn');
    const sidebar = document.querySelector('.sidebar');
    const sidebarOverlay = document.getElementById('sidebarOverlay');

    function toggleSidebar() {
      sidebar.classList.toggle('active');
      sidebarOverlay.style.display = sidebar.classList.contains('active') ? 'block' : 'none';
      document.body.classList.toggle('sidebar-open', sidebar.classList.contains('active'));
    }

    mobileMenuBtn.addEventListener('click', toggleSidebar);

    // Close sidebar when clicking outside (overlay)
    sidebarOverlay.addEventListener('click', toggleSidebar);

    // Close sidebar when clicking anywhere on body (mobile/tablet only)
    document.body.addEventListener('click', function(e) {
      if (window.innerWidth <= 991 && sidebar.classList.contains('active')) {
        if (!sidebar.contains(e.target) && e.target !== mobileMenuBtn && !mobileMenuBtn.contains(e.target)) {
          sidebar.classList.remove('active');
          sidebarOverlay.style.display = 'none';
          document.body.classList.remove('sidebar-open');
        }
      }
    });
    // Prevent sidebar click from closing itself
    sidebar.addEventListener('click', function(e) {
      e.stopPropagation();
    });

    // Close sidebar when clicking on a nav link (for mobile)
    document.querySelectorAll('.nav-link').forEach(link => {
      link.addEventListener('click', () => {
        if (window.innerWidth <= 768) {
          toggleSidebar();
        }
      });
    });

    const searchForm = document.getElementById('searchForm');
    const searchInput = document.querySelector('.search-bar');
    const clearSearch = document.querySelector('.clear-search');

    searchForm.addEventListener('submit', function(e) {
      e.preventDefault();
      const searchTerm = searchInput.value.trim();
      const url = new URL(window.location.href);
      
      if(searchTerm) {
        url.searchParams.set('search', searchTerm);
        url.searchParams.set('page', '1');
      } else {
        url.searchParams.delete('search');
      }
      
      window.location.href = url.toString();
    });

    if(clearSearch) {
      clearSearch.addEventListener('click', function() {
        searchInput.value = '';
        const url = new URL(window.location.href);
        url.searchParams.delete('search');
        window.location.href = url.toString();
      });
    }

    async function toggleListing(productId, shouldList) {
      try {
        const action = shouldList ? 'list-product' : 'unlist-product';
        const url = `/admin/${action}/${productId}`;

        const response = await fetch(url, {
          method: 'GET',
          headers: {
            'Cache-Control': 'no-cache',
          },
        });

        const data = await response.json();

        if (!response.ok) {
          throw new Error(data.message || 'Failed to update product listing status');
        }

        // Find the row containing the product
        const row = document.querySelector(`tr[data-product-id="${productId}"]`);
        if (!row) {
          throw new Error('Product row not found in the table');
        }

        // Update the status badge
        const statusCell = row.querySelector('td:nth-last-child(2)');
        if (statusCell) {
          const newStatus = document.createElement('span');
          newStatus.className = shouldList ? 'status-listed' : 'status-unlisted';
          newStatus.textContent = shouldList ? 'Listed' : 'Unlisted';
          statusCell.innerHTML = '';
          statusCell.appendChild(newStatus);
        }

        // Update the action buttons
        const actionButtons = row.querySelector('.action-buttons');
        if (actionButtons) {
          const newButton = document.createElement('button');
          newButton.onclick = () => toggleListing(productId, !shouldList);
          newButton.className = `action-btn ${shouldList ? 'unlist-btn' : 'list-btn'}`;
          newButton.innerHTML = `<i class="fas fa-${shouldList ? 'eye-slash' : 'eye'}"></i>`;
          
          // Replace the old button
          const oldButton = actionButtons.querySelector(`button[onclick*="toggleListing('${productId}'"]`);
          if (oldButton) {
            oldButton.replaceWith(newButton);
          }
        }

        Swal.fire({
          icon: 'success',
          title: 'Success',
          text: data.message,
          timer: 2000,
          showConfirmButton: false,
        });
      } catch (error) {
        console.error('Error toggling product listing:', error);
        Swal.fire({
          icon: 'error',
          title: 'Error',
          text: error.message,
        });
      }
    }

    document.querySelectorAll('.delete-btn').forEach(btn => {
      btn.addEventListener('click', function (e) {
        e.preventDefault();
        Swal.fire({
          title: 'Are you Sure?',
          text: "You won't be be able to revert this!",
          icon: 'warning',
          showCancelButton: true,
          confirmButtonColor: '#3085d6',
          cancelButtonColor: '#d33',
          confirmButtonText: 'Delete'
        }).then((result) => {
          if (result.isConfirmed) {
            window.location.href = e.target.closest('a').href;
          }
        });
      });
    });

    // Close sidebar when window is resized to desktop size
    window.addEventListener('resize', () => {
      if (window.innerWidth > 768) {
        sidebar.classList.remove('active');
        sidebarOverlay.style.display = 'none';
      }
    });
  </script>
</body>

</html>