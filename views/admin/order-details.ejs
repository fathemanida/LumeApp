<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>
        <%= title || 'Order Details' %> | Admin Dashboard
    </title>
    <link href="https://fonts.googleapis.com/css2?family=Jost:wght@400;500&family=Aboreto&display=swap"
        rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="/css/admin/orders.css">
    <style>
        .order-details-container {
            background: var(--bg-secondary);
            border-radius: 8px;
            box-shadow: 0 0 10px var(--shadow-color);
            padding: 2rem;
            margin: 1.5rem 0;
            color: var(--text-primary);
        }

        .order-header {
            border-bottom: 1px solid var(--border-color);
            padding-bottom: 1rem;
            margin-bottom: 2rem;
        }

        .order-section {
            margin-bottom: 2.5rem;
        }

        .section-title {
            font-size: 1.1rem;
            font-weight: 600;
            color: var(--text-primary);
            margin-bottom: 1rem;
            padding-bottom: 0.5rem;
            border-bottom: 2px solid var(--border-color);
        }

        .order-item {
            display: flex;
            align-items: center;
            padding: 1rem 0;
            border-bottom: 1px solid var(--border-color);
        }

        .order-item:last-child {
            border-bottom: none;
        }

        .item-image {
            width: 80px;
            height: 80px;
            object-fit: cover;
            border-radius: 4px;
            margin-right: 1.5rem;
        }

        .item-details {
            flex: 1;
        }

        .item-name {
            font-weight: 500;
            margin-bottom: 0.25rem;
            color: var(--text-primary);
        }

        .item-meta {
            font-size: 0.85rem;
            color: var(--text-secondary);
        }

        .status-badge {
            display: inline-block;
            padding: 0.35em 0.65em;
            font-size: 0.75em;
            font-weight: 700;
            line-height: 1;
            text-align: center;
            white-space: nowrap;
            vertical-align: baseline;
            border-radius: 0.25rem;
        }

        .badge-placed {
            background-color: var(--status-processing-bg);
            color: var(--status-processing-text);
        }

        .badge-shipped {
            background-color: var(--status-shipped-bg);
            color: var(--status-shipped-text);
        }

        .badge-delivered {
            background-color: var(--status-delivered-bg);
            color: var(--status-delivered-text);
        }

        .badge-cancelled {
            background-color: var(--status-cancelled-bg);
            color: var(--status-cancelled-text);
        }

        .badge-return-requested {
            background-color: var(--status-pending-bg);
            color: var(--status-pending-text);
        }

        .action-buttons .btn {
            margin-right: 0.5rem;
            margin-bottom: 0.5rem;
            background-color: var(--accent-color);
            color: var(--bg-primary);
            border: none;
            padding: 0.5rem 1rem;
            border-radius: 4px;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .action-buttons .btn:hover {
            background-color: #c5b393;
            transform: translateY(-2px);
        }
    </style>
</head>

<body class="dashboard">
    <div class="sidebar-overlay" id="sidebarOverlay"></div>
    <%-include('../partials/admin/sidebar.ejs',{currentPage:'orders'}) %>

        <!-- Main Content -->
        <div class="main-content">
            <header class="main-header">
                <div class="header-left">
                    <button class="mobile-menu-btn" id="mobileMenuBtn">
                        <i class="fas fa-bars"></i>
                    </button>
                    <h2 class="page-title">ORDER DETAILS</h2>
                </div>
                <div class="header-right">
                    <a href="/admin/orders" class="btn btn-outline-secondary btn-sm">
                        <i class="fas fa-arrow-left me-1"></i> Back to Orders
                    </a>
                </div>
            </header>

            <div class="container-fluid">
                <% if (order) { %>
                    <div class="order-details-container">
                        <!-- Order Header -->
                        <div class="order-header d-flex justify-content-between align-items-center">
                            <div>
                                <h3 class="mb-1 text-white">Order #<%= order.orderNumber %>
                                </h3>
                                <p class="text-muted mb-0 text-white-50">Placed on <%= order.createdOn %>
                                </p>
                            </div>

                            <div class="d-flex align-items-center">
                                <div class="me-3">
                                    <span
                                        class="status-badge badge-<%= order.status.toLowerCase().replace(' ', '-') %>">
                                        <%= order.status %>
                                    </span>
                                </div>
                                <div class="dropdown">
                                    <button class="btn btn-sm btn-outline-secondary dropdown-toggle" type="button"
                                        id="statusDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                                        Update Status
                                    </button>
                                    <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="statusDropdown">
                                        <li><a class="dropdown-item" href="#" data-status="Processing">Processing</a>
                                        </li>
                                        <li><a class="dropdown-item" href="#" data-status="Shipped">Shipped</a></li>
                                        <li><a class="dropdown-item" href="#" data-status="Delivered">Delivered</a></li>
                                        <li><a class="dropdown-item" href="#" data-status="Cancelled">Cancelled</a></li>
                                    </ul>
                                </div>
                            </div>
                        </div>

                        <!-- Order Info -->
                        <div class="row">
                            <!-- Customer Info -->
                            <div class="col-md-4">
                                <div class="order-section">
                                    <h5 class="section-title">Customer Information</h5>
                                    <p class="mb-1"><strong>
                                            <%= order.userId.name %>
                                        </strong></p>
                                    <p class="mb-1">
                                        <%= order.userId.email %>
                                    </p>
                                    <% if (order.userId.phone) { %>
                                        <p class="mb-0">
                                            <%= order.userId.phone %>
                                        </p>
                                        <% } %>
                                </div>
                            </div>

                            <!-- Shipping Address -->
                            <div class="col-md-4">
                                <div class="order-section">
                                    <h5 class="section-title">Shipping Address</h5>
                                    <% if (order.address) { %>
                                        <p class="mb-1">
                                            <%= order.address.name %>
                                        </p>
                                        <p class="mb-1">
                                            CITY: <%= order.address.city %>, STATE: <%= order.address.state %>, PIN: <%=
                                                        order.address.pincode %>
                                        </p>
                                        <% if (order.address.roadArea) { %>
                                            <p class="mb-0">Road Area: <%= order.address.roadArea %>
                                            </p>
                                            <% } %>
                                                <% if (order.address.landMark) { %>
                                                    <p class="mb-0">Land Mark: <%= order.address.landMark %>
                                                    </p>
                                                    <% } %>
                                                        <% if (order.address.addressType) { %>
                                                            <p class="mb-0">Address Type: <%= order.address.addressType
                                                                    %>
                                                            </p>
                                                            <% } %>
                                                                <p class="mb-0">Phone: <%= order.address.phone %>
                                                                </p>
                                                                <% } else { %>
                                                                    <p>No shipping address provided</p>
                                                                    <% } %>
                                </div>
                            </div>

                        </div>

                        <!-- Payment Info -->
                        <div class="col-md-4">
                            <div class="order-section">
                                <h5 class="section-title">Payment Information</h5>
                                <p class="mb-1"><strong>Payment Method:</strong>
                                    <%= order.payment && order.paymentMethod ? order.paymentMethod : 'N/A' %>
                                </p>
                                <p class="mb-1"><strong>Payment Status:</strong>
                                    <span
                                        class="badge <%= order.payment && order.payment.status === 'Paid' ? 'bg-success' : 'bg-warning' %>">
                                        <%= order.payment && order.payment.status || 'Pending' %>
                                    </span>
                                </p>
                                <p class="mb-0"><strong>Total Amount:</strong> ₹<%= order.totalAmount.toFixed(2) %>
                                </p>
                            </div>
                        </div>
                    </div>

                    <!-- Order Items -->
                    <div class="order-section">
                        <h5 class="section-title">Order Items</h5>
                        <div class="table-responsive">
                            <table class="table table-dark table-hover align-middle"
                                style="--bs-table-bg: #1a1d20; --bs-table-striped-bg: #1e2124; --bs-table-hover-bg: #2c3034;">
                                <thead class="table-dark">
                                    <tr style="--bs-table-bg: #141619;">
                                        <th>Product</th>
                                        <th>Price</th>
                                        <th>Quantity</th>
                                        <th>Discount</th>
                                        <th>Total</th>
                                        <th>Status</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <% order.items.forEach((item, index)=> { %>
                                        <tr style="--bs-table-bg: #1a1d20;">
                                            <td>
                                                <div class="d-flex align-items-center">
                                                    <img src="/uploads/product/<%= item.productId.productImage[0]  %>"
                                                        alt="<%= item.productId.productName %>"
                                                        class="img-thumbnail me-3"
                                                        style="width: 60px; height: 60px; object-fit: cover;">
                                                    <div>
                                                        <h6 class="mb-0">
                                                            <%= item.productId.productName %>
                                                        </h6>
                                                        <% if (item.appliedOffer) { %>
                                                            <small class="text-muted">Offer: <%=
                                                                    item.appliedOffer.offerName %></small>
                                                            <% } %>
                                                    </div>
                                                </div>
                                            </td>
                                            <td>₹<%= item.price.toFixed(2) %>
                                            </td>
                                            <td>
                                                <%= item.quantity %>
                                            </td>
                                            <td>
                                                <% if (item.appliedOffer) { %>
                                                    <% if (item.appliedOffer.discountType==='percentage' ) { %>
                                                        <%= item.appliedOffer.discountValue %>%
                                                            <% } else { %>
                                                                ₹<%= item.appliedOffer.discountValue.toFixed(2) %>
                                                                    <% } %>
                                                                        <% } else { %>
                                                                            -
                                                                            <% } %>
                                            </td>
                                            <td>₹<%= (item.finalPrice * item.quantity).toFixed(2) %>
                                            </td>
                                            <td>
                                                <span
                                                    class="status-badge badge-<%= item.status.toLowerCase().replace(' ', '-') %>">
                                                    <%= item.status %>
                                                </span>
                                            </td>
                                            <td class="action-buttons">
                                                <% if (item.status==='Return Requested' ) { %>
                                                    <button class="btn btn-sm btn-success"
                                                        onclick="handleReturnAction('<%= order._id %>', '<%= item._id %>', 'approve')">
                                                        Approve Return
                                                    </button>
                                                    <button class="btn btn-sm btn-danger"
                                                        onclick="handleReturnAction('<%= order._id %>', '<%= item._id %>', 'reject')">
                                                        Reject
                                                    </button>
                                                    <% } else if (item.status==='Active' || item.status==='Processing' )
                                                        { %>
                                                        <select class="form-select form-select-sm"
                                                            onchange="updateItemStatus('<%= order._id %>', '<%= item._id %>', this.value)">
                                                            <option value="Processing" <%=item.status==='Processing'
                                                                ? 'selected' : '' %>>Processing</option>
                                                            <option value="Shipped" <%=item.status==='Shipped'
                                                                ? 'selected' : '' %>>Shipped</option>
                                                            <option value="Delivered" <%=item.status==='Delivered'
                                                                ? 'selected' : '' %>>Delivered</option>
                                                            <option value="Cancelled" <%=item.status==='Cancelled'
                                                                ? 'selected' : '' %>>Cancel</option>
                                                        </select>
                                                        <% } %>
                                            </td>
                                        </tr>
                                        <% }) %>
                                </tbody>
                                <tfoot>
                                    <tr class="table-active" style="--bs-table-bg: #141619;">
                                        <td colspan="4" class="text-end"><strong>Subtotal:</strong></td>
                                        <td colspan="3">₹<%= order.subtotal ? order.subtotal.toFixed(2) :
                                                order.totalAmount.toFixed(2) %>
                                        </td>
                                    </tr>
                                    <% if (order.offerDiscount> 0) { %>
                                        <tr style="--bs-table-bg: #1a1d20;">
                                            <td colspan="4" class="text-end"><strong>Offer Discount:</strong></td>
                                            <td colspan="3">-₹<%= order.offerDiscount.toFixed(2) %>
                                            </td>
                                        </tr>
                                        <% } %>
                                            <tr>
                                                <% if (order.couponDiscount> 0) { %>
                                            <tr style="--bs-table-bg: #1a1d20;">
                                                <td colspan="4" class="text-end"><strong>Coupon Discount:</strong></td>
                                                <td colspan="3">-₹<%= order.couponDiscount.toFixed(2) %>
                                                </td>
                                            </tr>
                                            <% } %>
                                                <td colspan="4" class="text-end"><strong>Shipping:</strong></td>
                                                <td colspan="3">
                                                    <% if (order.shippingCharge===0) { %>
                                                        Free
                                                        <% } else { %>
                                                            ₹<%= (order.shippingCharge || 0).toFixed(2) %>
                                                                <% } %>
                                                </td>
                                                </tr>
                                                <tr class="table-active">
                                                    <td colspan="4" class="text-end"><strong>Total:</strong></td>
                                                    <td colspan="3"><strong>₹<%= order.totalAmount.toFixed(2) %>
                                                                </strong></td>
                                                </tr>
                                </tfoot>
                            </table>
                        </div>
                    </div>

                    <!-- Order Notes -->
                    <% if (order.notes) { %>
                        <div class="order-section">
                            <h5 class="section-title">Order Notes</h5>
                            <p class="mb-0">
                                <%= order.notes %>
                            </p>
                        </div>
                        <% } %>

                            <!-- Admin Actions -->
                            <div class="order-section">
                                <h5 class="section-title">Order Actions</h5>
                                <div class="d-flex flex-wrap gap-2">
                                    <% if (order.status==='Processing' ) { %>
                                        <button class="btn btn-primary"
                                            onclick="updateOrderStatus('<%= order._id %>', 'Shipped')">
                                            <i class="fas fa-truck me-1"></i> Mark as Shipped
                                        </button>
                                        <button class="btn btn-danger"
                                            onclick="updateOrderStatus('<%= order._id %>', 'Cancelled')">
                                            <i class="fas fa-times me-1"></i> Cancel Order
                                        </button>
                                        <% } else if (order.status==='Shipped' ) { %>
                                            <button class="btn btn-success"
                                                onclick="updateOrderStatus('<%= order._id %>', 'Delivered')">
                                                <i class="fas fa-check-circle me-1"></i> Mark as Delivered
                                            </button>
                                            <% } %>

                                                <% if (order.returnStatus==='Requested' ) { %>
                                                    <button class="btn btn-success"
                                                        onclick="handleReturnAction('<%= order._id %>', null, 'approve')">
                                                        <i class="fas fa-check me-1"></i> Approve Return
                                                    </button>
                                                    <button class="btn btn-danger"
                                                        onclick="handleReturnAction('<%= order._id %>', null, 'reject')">
                                                        <i class="fas fa-times me-1"></i> Reject Return
                                                    </button>
                                                    <% } %>

                                                        <a href="/admin/orders/print/<%= order._id %>"
                                                            class="btn btn-outline-secondary" target="_blank">
                                                            <i class="fas fa-print me-1"></i> Print Invoice
                                                        </a>
                                </div>
                            </div>
            </div>
            <% } else { %>
                <div class="alert alert-warning">Order not found.</div>
                <% } %>
        </div>
        </div>

        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
        <!-- Include SweetAlert2 for notifications -->
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

        <script>
            // Handle return action (approve/reject)
            async function handleReturnAction(orderId, itemId, action) {
                try {
                    const result = await Swal.fire({
                        title: `Are you sure you want to ${action} this return?`,
                        text: `This action will ${action} the return request for this item.`,
                        icon: 'question',
                        showCancelButton: true,
                        confirmButtonText: `Yes, ${action}`,
                        cancelButtonText: 'Cancel',
                        confirmButtonColor: action === 'approve' ? '#28a745' : '#dc3545',
                        cancelButtonColor: '#6c757d',
                        reverseButtons: true
                    });

                    if (result.isConfirmed) {
                        const response = await fetch(`/admin/orders/${orderId}/items/${itemId}/return`, {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                            },
                            body: JSON.stringify({ action })
                        });

                        const data = await response.json();

                        if (response.ok) {
                            Swal.fire({
                                title: 'Success!',
                                text: data.message || 'Return request processed successfully',
                                icon: 'success',
                                confirmButtonText: 'OK'
                            }).then(() => {
                                window.location.reload();
                            });
                        } else {
                            throw new Error(data.message || 'Failed to process return request');
                        }
                    }
                } catch (error) {
                    console.error('Error processing return:', error);
                    Swal.fire({
                        title: 'Error!',
                        text: error.message || 'An error occurred while processing the return',
                        icon: 'error',
                        confirmButtonText: 'OK'
                    });
                }
            }

            // Handle order status update
            document.addEventListener('DOMContentLoaded', function () {
                // Status update handler
                document.querySelectorAll('[data-status]').forEach(item => {
                    item.addEventListener('click', function (e) {
                        e.preventDefault();
                        const newStatus = this.getAttribute('data-status');
                        const orderId = '<%= order._id %>';

                        Swal.fire({
                            title: 'Update Order Status',
                            text: `Are you sure you want to update the order status to "${newStatus}"?`,
                            icon: 'question',
                            showCancelButton: true,
                            confirmButtonText: 'Yes, update it!',
                            cancelButtonText: 'No, cancel',
                            confirmButtonColor: '#6c5ce7',
                            cancelButtonColor: '#dc3545',
                            reverseButtons: true
                        }).then((result) => {
                            if (result.isConfirmed) {
                                updateOrderStatus(orderId, newStatus);
                            }
                        });
                    });
                });
            });

            // Function to update order status via API
            async function updateOrderStatus(orderId, newStatus) {
                try {
                    const response = await fetch(`/admin/orders/${orderId}/status`, {
                        method: 'PUT',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ status: newStatus })
                    });

                    const data = await response.json();

                    if (data.success) {
                        // Show success message
                        Swal.fire({
                            title: 'Success!',
                            text: `Order status has been updated to "${newStatus}"`,
                            icon: 'success',
                            confirmButtonColor: '#6c5ce7',
                            timer: 2000,
                            timerProgressBar: true
                        }).then(() => {
                            // Reload the page to reflect changes
                            window.location.reload();
                        });
                    } else {
                        throw new Error(data.message || 'Failed to update order status');
                    }
                } catch (error) {
                    console.error('Error updating order status:', error);
                    Swal.fire({
                        title: 'Error!',
                        text: error.message || 'Failed to update order status. Please try again.',
                        icon: 'error',
                        confirmButtonColor: '#6c5ce7'
                    });
                }
            }

            // Mobile menu toggle
            document.getElementById('mobileMenuBtn').addEventListener('click', function () {
                document.body.classList.toggle('sidebar-open');
                document.getElementById('sidebarOverlay').classList.toggle('show');
            });

            document.getElementById('sidebarOverlay').addEventListener('click', function () {
                document.body.classList.remove('sidebar-open');
                this.classList.remove('show');
            });

            // Update order status (duplicate function - keeping both for now but they should be consolidated)
            async function updateOrderStatus(orderId, status) {
                const result = await Swal.fire({
                    title: 'Update Order Status',
                    text: `Are you sure you want to mark this order as ${status}?`,
                    icon: 'question',
                    showCancelButton: true,
                    confirmButtonText: 'Yes, update it!',
                    cancelButtonText: 'No, cancel',
                    confirmButtonColor: '#6c5ce7',
                    cancelButtonColor: '#dc3545',
                    reverseButtons: true
                });

                if (result.isConfirmed) {
                    try {
                        const response = await fetch(`/admin/orders/${orderId}/status`, {
                            method: 'PUT',
                            headers: {
                                'Content-Type': 'application/json',
                            },
                            body: JSON.stringify({ status })
                        });

                        const data = await response.json();

                        if (data.success) {
                            await Swal.fire({
                                title: 'Success!',
                                text: `Order status updated to ${status}`,
                                icon: 'success',
                                confirmButtonColor: '#6c5ce7',
                                timer: 2000,
                                timerProgressBar: true
                            });
                            location.reload();
                        } else {
                            throw new Error(data.message || 'Failed to update order status');
                        }
                    } catch (error) {
                        console.error('Error:', error);
                        await Swal.fire({
                            title: 'Error!',
                            text: error.message || 'Error updating order status',
                            icon: 'error',
                            confirmButtonColor: '#6c5ce7'
                        });
                    }
                }
            }

            // Update item status
            async function updateItemStatus(orderId, itemId, status) {
                const result = await Swal.fire({
                    title: 'Update Item Status',
                    text: `Are you sure you want to update this item status to ${status}?`,
                    icon: 'question',
                    showCancelButton: true,
                    confirmButtonText: 'Yes, update it!',
                    cancelButtonText: 'No, cancel',
                    confirmButtonColor: '#6c5ce7',
                    cancelButtonColor: '#dc3545',
                    reverseButtons: true
                });

                if (result.isConfirmed) {
                    try {
                        const response = await fetch(`/admin/orders/${orderId}/items/${itemId}/status`, {
                            method: 'PUT',
                            headers: {
                                'Content-Type': 'application/json',
                            },
                            body: JSON.stringify({ status })
                        });

                        const data = await response.json();

                        if (data.success) {
                            await Swal.fire({
                                title: 'Success!',
                                text: `Item status updated to ${status}`,
                                icon: 'success',
                                confirmButtonColor: '#6c5ce7',
                                timer: 2000,
                                timerProgressBar: true
                            });
                            location.reload();
                        } else {
                            throw new Error(data.message || 'Failed to update item status');
                        }
                    } catch (error) {
                        console.error('Error:', error);
                        await Swal.fire({
                            title: 'Error!',
                            text: error.message || 'Error updating item status',
                            icon: 'error',
                            confirmButtonColor: '#6c5ce7'
                        });
                    }
                }
            }

            // Handle return actions (approve/reject) - duplicate function, consider removing
            async function handleReturnAction(orderId, itemId, action) {
                const actionText = action === 'approve' ? 'approve' : 'reject';
                const confirmText = itemId
                    ? `Are you sure you want to ${actionText} return for this item?`
                    : `Are you sure you want to ${actionText} return for the entire order?`;

                const result = await Swal.fire({
                    title: `${actionText.charAt(0).toUpperCase() + actionText.slice(1)} Return`,
                    text: confirmText,
                    icon: 'question',
                    showCancelButton: true,
                    confirmButtonText: `Yes, ${actionText} it!`,
                    cancelButtonText: 'No, cancel',
                    confirmButtonColor: action === 'approve' ? '#28a745' : '#dc3545',
                    cancelButtonColor: '#6c757d',
                    reverseButtons: true
                });

                if (result.isConfirmed) {
                    try {
                        const url = itemId
                            ? `/admin/orders/${orderId}/items/${itemId}/return`
                            : `/admin/orders/${orderId}/return`;

                        const response = await fetch(url, {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                            },
                            body: JSON.stringify({ action })
                        });

                        const data = await response.json();

                        if (data.success) {
                            await Swal.fire({
                                title: 'Success!',
                                text: `Return request ${actionText}d successfully`,
                                icon: 'success',
                                confirmButtonColor: '#6c5ce7',
                                timer: 2000,
                                timerProgressBar: true
                            });
                            location.reload();
                        } else {
                            throw new Error(data.message || `Failed to ${actionText} return`);
                        }
                    } catch (error) {
                        console.error('Error:', error);
                        await Swal.fire({
                            title: 'Error!',
                            text: error.message || `Error ${actionText}ing return`,
                            icon: 'error',
                            confirmButtonColor: '#6c5ce7'
                        });
                    }
                }
            }
        </script>
</body>

</html>