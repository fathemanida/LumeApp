<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Order Details - Lume</title>
  <link href="https://fonts.googleapis.com/css2?family=Aboreto&family=Jost:wght@300;400;500&display=swap"
    rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
  <style>
    :root {
      --soft-beige: #D4B996;
      --muted-green: #58674e;
      --light-bg: #f8f5f2;
      --border-color: #e0d8cc;
      --offer-red: #e63946;
      --dark-text: #2c1810;
      --darker-text: #1a0f0a;
      --card-bg: #ffffff;
      --success-color: #4caf50;
      --error-color: #f44336;
    }

    body {
      font-family: 'Jost', sans-serif;
      background-color: #f0e9e0;
      margin: 0;
      padding: 0;
      min-height: 100vh;
      color: var(--dark-text);
      display: flex;
      flex-direction: column;
      width: 100vw;
      overflow-x: hidden;
      box-sizing: border-box;
    }

    /* Navbar styles */
    .navbar {
      background: white;
      border-bottom: 1px solid var(--border-color);
      padding: 1rem 2rem;
      display: flex;
      align-items: center;
      justify-content: space-between;
      flex-wrap: nowrap;
      position: fixed;
      top: 0;
      left: 0;
      right: 0;
      z-index: 1000;
      width: 100%;
      box-sizing: border-box;
    }

    .brand {
      font-family: 'Aboreto', cursive;
      font-size: 1.5rem;
      letter-spacing: 1.5px;
      text-transform: uppercase;
      color: var(--darker-text);
      cursor: pointer;
      transition: color 0.3s ease;
    }

    .brand:hover {
      color: var(--muted-green);
    }

    .nav-links {
      display: flex;
      list-style: none;
      margin: 0;
      padding: 0;
      flex: 1;
      justify-content: center;
    }

    .nav-link {
      color: var(--darker-text);
      font-family: 'Jost', sans-serif;
      font-size: 0.9rem;
      text-decoration: none;
      padding: 0.5rem 1rem;
      transition: all 0.3s ease;
    }

    .nav-link:hover {
      color: var(--muted-green);
      font-weight: 500;
    }

    .icon-links {
      display: flex;
      align-items: center;
      list-style: none;
      margin: 0;
      padding: 0;
    }

    .icon-link {
      color: var(--darker-text);
      font-size: 1.1rem;
      padding: 0.5rem;
      transition: all 0.3s ease;
    }

    .icon-link:hover {
      color: var(--muted-green);
    }

    .search-container {
      position: relative;
      display: flex;
      align-items: center;
    }

    .search-input {
      border: 1px solid var(--border-color);
      border-radius: 20px;
      padding: 0.5rem 1rem;
      padding-right: 2.5rem;
      width: 200px;
      background-color: var(--light-bg);
      color: var(--dark-text);
      transition: all 0.3s ease;
    }

    .search-input:focus {
      width: 250px;
      border-color: var(--soft-beige);
      box-shadow: none;
      outline: none;
    }

    .search-button {
      position: absolute;
      right: 10px;
      background: none;
      border: none;
      color: var(--dark-text);
      cursor: pointer;
    }

    /* Profile Dropdown */
    .profile-dropdown {
      position: relative;
      display: inline-block;
    }

    .profile-dropdown-content {
      display: none;
      position: absolute;
      right: 0;
      background-color: white;
      min-width: 160px;
      box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1);
      z-index: 1000;
      border-radius: 4px;
      padding: 0.5rem 0;
      border: 1px solid var(--border-color);
    }

    .profile-dropdown:hover .profile-dropdown-content {
      display: block;
    }

    .profile-dropdown-content a {
      color: var(--dark-text);
      padding: 0.75rem 1rem;
      text-decoration: none;
      display: block;
      font-size: 0.9rem;
      transition: all 0.3s ease;
    }

    .profile-dropdown-content a:hover {
      background-color: var(--light-bg);
      color: var(--muted-green);
    }

    .profile-dropdown-content a i {
      margin-right: 0.5rem;
      width: 20px;
      text-align: center;
    }

    /* Main Container */
    .main-container {
      display: flex;
      flex: 1;
      margin-top: 70px;
    }

    /* Elegant Sidebar */
    .sidebar {
      width: 280px;
      background-color: white;
      padding: 2rem 1.5rem;
      border-right: 1px solid var(--border-color);
      display: flex;
      flex-direction: column;
    }

    .sidebar-title {
      font-family: 'Aboreto', cursive;
      font-size: 1.5rem;
      color: var(--muted-green);
      margin-bottom: 2rem;
      padding-bottom: 1rem;
      border-bottom: 1px solid var(--border-color);
      letter-spacing: 1px;
    }

    .sidebar-nav {
      display: flex;
      flex-direction: column;
      gap: 0.5rem;
      flex: 1;
    }

    .sidebar-nav a {
      color: var(--dark-text);
      text-decoration: none;
      padding: 0.75rem 1rem;
      border-radius: 4px;
      transition: all 0.3s ease;
      display: flex;
      align-items: center;
      gap: 0.75rem;
      font-size: 0.95rem;
    }

    .sidebar-nav a i {
      width: 20px;
      text-align: center;
      color: var(--muted-green);
    }

    .sidebar-nav a:hover {
      background-color: rgba(169, 186, 157, 0.1);
      color: var(--muted-green);
      transform: translateX(4px);
    }

    .sidebar-nav a.active {
      background-color: rgba(169, 186, 157, 0.2);
      color: var(--muted-green);
      font-weight: 500;
      border-left: 3px solid var(--muted-green);
    }

    .sidebar-actions {
      margin-top: auto;
      padding-top: 1.5rem;
      border-top: 1px solid var(--border-color);
      display: flex;
      flex-direction: column;
      gap: 0.75rem;
    }

    .sidebar-actions button {
      padding: 0.75rem;
      border-radius: 4px;
      border: none;
      cursor: pointer;
      transition: all 0.3s ease;
      font-family: 'Jost', sans-serif;
      font-size: 0.9rem;
      display: flex;
      align-items: center;
      justify-content: center;
      gap: 0.5rem;
    }

    .logout-btn {
      background-color: rgba(169, 186, 157, 0.1);
      color: var(--dark-text);
      border: 1px solid var(--border-color);
    }

    .logout-btn:hover {
      background-color: rgba(169, 186, 157, 0.2);
      border-color: var(--muted-green);
    }

    .delete-btn {
      background-color: transparent;
      color: #ff6b6b;
      border: 1px solid #ff6b6b;
    }

    .delete-btn:hover {
      background-color: rgba(255, 107, 107, 0.1);
    }

    /* Content Area */
    .content-area {
      flex: 1;
      padding: 2rem 3rem;
      width: 100%;
      box-sizing: border-box;
    }

    .page-title {
      font-family: 'Aboreto', cursive;
      font-size: 2rem;
      color: var(--muted-green);
      margin-bottom: 2rem;
    }

    .order-details-container {
      background: transparent;
      border-radius: 8px;
      box-shadow: none;
      padding: 2rem;
      margin-bottom: 2rem;
      border: none;
    }

    .order-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 2rem;
      padding-bottom: 1rem;
      border-bottom: 1px solid var(--border-color);
    }

    .order-number {
      font-size: 1.2rem;
      font-weight: 500;
      color: var(--dark-text);
    }

    .order-status {
      padding: 0.5rem 1rem;
      border-radius: 20px;
      font-size: 0.9rem;
      font-weight: 500;
    }

    .status-pending {
      background-color: #fff3cd;
      color: #856404;
    }

    .status-delivered {
      background-color: #d4edda;
      color: #155724;
    }

    .status-processing {
      background-color: #cce5ff;
      color: #004085;
    }

    .status-cancelled {
      background-color: #f8d7da;
      color: #721c24;
    }

    .order-info-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
      gap: 2rem;
      margin-bottom: 2rem;
    }

    .info-section {
      background: var(--light-bg);
      padding: 1.5rem;
      border-radius: 8px;
      border: 1px solid var(--border-color);
    }

    .info-section h3 {
      font-family: 'Aboreto', cursive;
      font-size: 1.2rem;
      margin-bottom: 1rem;
      color: var(--muted-green);
    }

    .info-item {
      margin-bottom: 0.75rem;
    }

    .info-label {
      font-weight: 500;
      color: var(--dark-text);
      margin-bottom: 0.25rem;
    }

    .info-value {
      color: #666;
    }

    .order-items {
      margin-top: 2rem;
    }

    .order-items h3 {
      font-family: 'Aboreto', cursive;
      font-size: 1.2rem;
      margin-bottom: 1rem;
      color: var(--muted-green);
    }

    .items-table {
      width: 100%;
      border-collapse: collapse;
      background: transparent;
      border: none;
      border-radius: 5px;
      overflow-x: auto;
    }

    .items-table th {
      background-color: var(--light-bg);
      padding: 1rem;
      text-align: left;
      font-weight: 500;
      color: var(--dark-text);
    }

    .items-table td {
      padding: 1rem;
      border-bottom: 1px solid var(--border-color);
      color: #666;
      background: transparent;
    }

    .item-image {
      width: 50px;
      height: 50px;
      object-fit: cover;
      border-radius: 4px;
    }

    .order-summary {
      margin-top: 2rem;
      padding-top: 1rem;
      border-top: 1px solid var(--border-color);
    }

    .summary-row {
      display: flex;
      justify-content: space-between;
      margin-bottom: 0.75rem;
      color: #666;
    }

    .summary-row.total {
      font-weight: 600;
      font-size: 1.1rem;
      margin-top: 1rem;
      padding-top: 1rem;
      border-top: 1px solid var(--border-color);
      color: var(--dark-text);
    }

    .back-btn {
      display: inline-block;
      padding: 0.75rem 1.5rem;
      background-color: var(--muted-green);
      color: white;
      text-decoration: none;
      border-radius: 4px;
      margin-top: 1rem;
      transition: all 0.3s ease;
      font-weight: 500;
      border: none;
      cursor: pointer;
    }

    .back-btn:hover {
      background-color: var(--soft-beige);
      transform: translateY(-2px);
    }

    .order-actions {
      margin-bottom: 2rem;
      display: flex;
      justify-content: flex-end;
      gap: 1rem;
      padding: 1rem;
      background: var(--light-bg);
      border-radius: 8px;
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
      border: 1px solid var(--border-color);
    }

    .cancel-btn,
    .back-btn,
    .return-btn {
      margin-top: 2rem;
      padding: 1rem 2rem;
      background: var(--muted-green);
      border-radius: 4px;
      border: none;
      color: white;
      font-weight: bold;
      text-align: center;
      cursor: pointer;
      font-size: 1rem;
      font-family: 'Aboreto', cursive;
      transition: all 0.3s ease;
    }

    .cancel-btn:hover,
    .back-btn:hover {
      background-color: var(--soft-beige);
      transform: translateY(-2px);
    }

    .return-btn {
      background: var(--muted-green);
    }

    .return-btn:hover {
      background-color: var(--soft-beige);
      transform: translateY(-2px);
    }

    .modal {
      display: none;
      position: fixed;
      top: 0;
      left: 0;
      width: 100vw;
      height: 100vh;
      background-color: rgba(0, 0, 0, 0.5);
      z-index: 1000;
      backdrop-filter: blur(4px);
      overflow-y: auto;
      padding: 0;
      box-sizing: border-box;
    }

    .modal.show {
      display: flex;
      align-items: center;
      justify-content: center;
    }

    .modal-content {
      position: relative;
      background-color: white;
      margin: 20px auto;
      padding: 0;
      width: 90%;
      max-width: 600px;
      border-radius: 8px;
      box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1);
      animation: modalSlideIn 0.3s ease-out;
      display: flex;
      flex-direction: column;
      max-height: 90vh;
      box-sizing: border-box;
      border: 1px solid var(--border-color);
    }

    .form-group {
      margin-bottom: 1.5rem;
    }

    .form-group label {
      display: block;
      margin-bottom: 0.5rem;
      font-weight: 500;
      color: var(--dark-text);
    }

    .form-control {
      width: 100%;
      padding: 0.75rem;
      border: 1px solid var(--border-color);
      border-radius: 8px;
      font-family: 'Jost', sans-serif;
      font-size: 1rem;
      transition: all 0.3s ease;
      background-color: var(--light-bg);
      color: var(--dark-text);
    }

    .form-control:focus {
      outline: none;
      border-color: var(--muted-green);
      box-shadow: 0 0 0 3px rgba(169, 186, 157, 0.1);
    }

    select.form-control {
      appearance: none;
      background-image: url("data:image/svg+xml;charset=UTF-8,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='none' stroke='%23666' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3e%3cpolyline points='6 9 12 15 18 9'%3e%3c/polyline%3e%3c/svg%3e");
      background-repeat: no-repeat;
      background-position: right 1rem center;
      background-size: 1em;
      padding-right: 2.5rem;
      cursor: pointer;
    }

    select.form-control option {
      padding: 0.5rem;
      font-size: 1rem;
      background-color: white;
      color: var(--dark-text);
    }

    select.form-control option:checked {
      background-color: var(--muted-green);
      color: white;
    }

    @keyframes modalSlideIn {
      from {
        transform: translateY(-20px);
        opacity: 0;
      }

      to {
        transform: translateY(0);
        opacity: 1;
      }
    }

    .modal-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 1.5rem 2.5rem;
      border-bottom: 1px solid var(--border-color);
      background: white;
      border-radius: 8px 8px 0 0;
      position: sticky;
      top: 0;
      z-index: 1;
    }

    .modal-header h3 {
      font-family: 'Aboreto', cursive;
      font-size: 1.2rem;
      color: var(--muted-green);
      margin: 0;
    }

    .modal-body {
      padding: 2.5rem;
      overflow-y: auto;
      flex: 1;
      color: #666;
    }

    .modal-actions {
      display: flex;
      justify-content: flex-end;
      gap: 1rem;
      padding: 1.5rem 2.5rem;
      border-top: 1px solid var(--border-color);
      background: white;
      border-radius: 0 0 8px 8px;
      position: sticky;
      bottom: 0;
      z-index: 1;
    }

    .return-items-list {
      max-height: 200px;
      overflow-y: auto;
      border: 1px solid var(--border-color);
      border-radius: 8px;
      padding: 1.5rem;
      background-color: var(--light-bg);
      margin-bottom: 1rem;
    }

    .return-item {
      display: flex;
      align-items: center;
      gap: 1rem;
      padding: 1rem 0;
      border-bottom: 1px solid var(--border-color);
    }

    .return-item:last-child {
      border-bottom: none;
    }

    .return-item input[type="checkbox"] {
      width: 20px;
      height: 20px;
      border: 1px solid var(--border-color);
      border-radius: 4px;
      cursor: pointer;
      transition: all 0.3s ease;
      background-color: white;
    }

    .return-item input[type="checkbox"]:checked {
      background-color: var(--muted-green);
      border-color: var(--muted-green);
    }

    .return-item label {
      font-size: 1rem;
      color: var(--dark-text);
      cursor: pointer;
      flex: 1;
    }

    .cancel-modal-btn,
    .confirm-return-btn,
    .confirm-cancel-btn {
      padding: 0.75rem 1.5rem;
      border: none;
      border-radius: 4px;
      cursor: pointer;
      font-family: 'Jost', sans-serif;
      font-size: 0.9rem;
      font-weight: 500;
      text-transform: uppercase;
      letter-spacing: 0.5px;
      transition: all 0.3s ease;
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

    .cancel-modal-btn {
      background-color: #6c757d;
      color: white;
    }

    .cancel-modal-btn:hover {
      background-color: #5a6268;
      transform: translateY(-2px);
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }

    .confirm-return-btn,
    .confirm-cancel-btn {
      background-color: var(--muted-green);
      color: white;
    }

    .confirm-return-btn:hover,
    .confirm-cancel-btn:hover {
      background-color: var(--soft-beige);
      transform: translateY(-2px);
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }

    textarea {
      width: 100%;
      min-height: 120px;
      padding: 1rem;
      border: 1px solid var(--border-color);
      border-radius: 8px;
      font-family: 'Jost', sans-serif;
      font-size: 1rem;
      resize: vertical;
      transition: all 0.3s ease;
      background-color: var(--light-bg);
      color: var(--dark-text);
    }

    textarea:focus {
      outline: none;
      border-color: var(--muted-green);
      box-shadow: 0 0 0 3px rgba(169, 186, 157, 0.1);
    }

    .return-policy {
      margin-top: 2rem;
      padding: 1rem 2rem;
      background: var(--light-bg);
      border-radius: 8px;
      border: 1px solid var(--border-color);
      color: var(--dark-text);
      text-align: center;
      font-size: 1rem;
      font-family: 'Aboreto', cursive;
    }

    .policy-content {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
      gap: 1.5rem;
    }

    .policy-item {
      display: flex;
      align-items: flex-start;
      gap: 1rem;
      padding: 1rem;
      background: white;
      border-radius: 8px;
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
      border: 1px solid var(--border-color);
    }

    .policy-item i {
      font-size: 1.5rem;
      color: var(--muted-green);
      margin-top: 0.25rem;
    }

    .policy-text h4 {
      font-size: 1rem;
      margin-bottom: 0.5rem;
      color: var(--dark-text);
    }

    .policy-text p {
      font-size: 0.9rem;
      color: #666;
      line-height: 1.4;
    }

    .toast-container {
      position: fixed;
      top: 20px;
      right: 10px;
      z-index: 9999;
      width: calc(100% - 20px);
      max-width: 400px;
    }

    .toast {
      background: white;
      border-radius: 8px;
      padding: 16px 24px;
      margin-bottom: 10px;
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
      display: flex;
      align-items: center;
      gap: 12px;
      min-width: 250px;
      max-width: 100%;
      transform: translateX(120%);
      transition: transform 0.3s ease-in-out;
      animation: slideIn 0.3s ease-in-out forwards;
      box-sizing: border-box;
      border: 1px solid var(--border-color);
    }

    .toast.success {
      border-left: 4px solid var(--success-color);
    }

    .toast.error {
      border-left: 4px solid var(--error-color);
    }

    .toast.warning {
      border-left: 4px solid #ffc107;
    }

    .toast-icon {
      font-size: 20px;
    }

    .toast.success .toast-icon {
      color: var(--success-color);
    }

    .toast.error .toast-icon {
      color: var(--error-color);
    }

    .toast.warning .toast-icon {
      color: #ffc107;
    }

    .toast-content {
      flex: 1;
    }

    .toast-title {
      font-weight: 600;
      margin-bottom: 4px;
      color: var(--dark-text);
    }

    .toast-message {
      color: #666;
      font-size: 0.9rem;
    }

    .toast-close {
      color: #666;
      cursor: pointer;
      padding: 4px;
      font-size: 18px;
      transition: color 0.3s ease;
    }

    .toast-close:hover {
      color: var(--dark-text);
    }

    @keyframes slideIn {
      from {
        transform: translateX(120%);
      }

      to {
        transform: translateX(0);
      }
    }

    @keyframes slideOut {
      from {
        transform: translateX(0);
      }

      to {
        transform: translateX(120%);
      }
    }

    .no-order {
      text-align: center;
      padding: 3rem;
      background: white;
      border-radius: 8px;
      border: 1px solid var(--border-color);
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

    .no-order h2 {
      color: var(--dark-text);
      margin-bottom: 1rem;
    }

    .no-order p {
      color: #666;
      margin-bottom: 1.5rem;
    }

    .login-btn {
      background-color: var(--muted-green);
      color: white;
      padding: 0.75rem 1.5rem;
      border-radius: 4px;
      font-size: 1rem;
      font-weight: 500;
      border: none;
      cursor: pointer;
      transition: all 0.3s ease;
      font-family: 'Jost', sans-serif;
      text-decoration: none;
      display: inline-block;
    }

    .login-btn:hover {
      background-color: var(--soft-beige);
      transform: translateY(-2px);
    }

    /* Responsive */
    @media (max-width: 768px) {
      .content-area {
        padding: 1.5rem;
      }

      .order-details-container {
        padding: 1rem;
        margin: 0 0.5rem 2rem;
      }

      .order-header {
        flex-direction: column;
        align-items: flex-start;
        gap: 1rem;
      }

      .order-info-grid {
        grid-template-columns: 1fr;
      }

      .modal {
        padding: 0;
      }

      .modal-content {
        margin: 10px 5px;
        width: calc(100% - 10px);
      }

      .modal-header,
      .modal-body,
      .modal-actions {
        padding: 1rem;
      }

      .return-btn {
        width: 100%;
        justify-content: center;
      }

      .policy-content {
        grid-template-columns: 1fr;
      }

      .main-container {
        flex-direction: column;
      }

      .sidebar {
        width: 100%;
        padding: 1rem;
        height: auto;
        border-right: none;
        border-bottom: 1px solid var(--border-color);
      }

      .nav-links {
        display: none;
      }
    }

    tbody tr:hover {
      background-color: var(--light-bg);
      transition: background-color 0.3s ease;
    }

    tbody tr {
      transition: background-color 0.3s ease;
    }

    /* Footer */
    footer {
      background-color: var(--soft-beige);
      color: white;
      padding: 40px 0;
      font-family: 'Jost', sans-serif;
      line-height: 1.6;
    }

    .footer-container {
      display: flex;
      justify-content: center;
      gap: 120px;
      padding: 0 20px;
      max-width: 1200px;
      margin: 0 auto;
    }

    .footer-column h3 {
      font-family: 'Aboreto', cursive;
      font-size: 1rem;
      margin-bottom: 15px;
      letter-spacing: 1px;
      text-transform: uppercase;
    }

    .footer-column ul {
      list-style: none;
      padding: 0;
      font-size: 0.9rem;
    }

    .footer-column li {
      margin-bottom: 8px;
    }

    .footer-column a {
      color: white;
      text-decoration: none;
      transition: color 0.3s ease;
    }

    .footer-column a:hover {
      color: var(--light-bg);
    }

    .footer-bottom {
      text-align: center;
      font-size: 0.8rem;
      padding-top: 30px;
      margin-top: 30px;
      border-top: 1px solid rgba(255, 255, 255, 0.2);
      color: rgba(255, 255, 255, 0.7);
    }



    @media (max-width: 600px) {
      .stepper-vertical-content {
        padding: 0.7rem 1rem;
        min-width: 120px;
      }

      .stepper-vertical-icon {
        width: 36px;
        height: 36px;
        font-size: 1.1rem;
      }

      .stepper-vertical-line {
        left: 18px;
      }
    }

    /* Badges */
    .badge {
      display: inline-block;
      padding: 0.3em 0.9em;
      border-radius: 12px;
      font-size: 0.9em;
      font-weight: 500;
      margin-right: 0.2em;
    }

    .badge-pending {
      background: #fff3cd;
      color: #856404;
    }

    .badge-cancelled {
      background: #f8d7da;
      color: #721c24;
    }

    .badge-other {
      background: #e2e3e5;
      color: #383d41;
    }

    .order-bottom-section {
      display: flex;
      gap: 2rem;
      margin-top: 2rem;
    }

    .order-address,
    .order-status-payment {
      background: var(--light-bg);
      border-radius: 8px;
      border: 1px solid var(--border-color);
      padding: 1.2rem 1.5rem;
      min-width: 260px;
    }

    .order-total-amount {
      text-align: right;
      margin-top: 1.5rem;
      font-size: 1.15rem;
      font-weight: 600;
      color: var(--dark-text);
    }

    .order-actions-bottom {
      display: flex;
      justify-content: flex-end;
      gap: 1rem;
      margin-top: 2rem;
    }

    .download-btn,
    .back-btn,
    .cancel-btn,
    .return-btn,
    .confirm-cancel-btn,
    .confirm-return-btn,
    .cancel-modal-btn {
      border-radius: 0 !important;
      min-width: 180px;
      height: 44px;
      display: inline-flex;
      align-items: center;
      justify-content: center;
      font-size: 1rem;
      padding: 0 1.5rem;
    }

    .download-btn {
      background: white;
      color: var(--muted-green);
      border: 1px solid var(--muted-green);
      font-weight: 500;
      text-decoration: none;
      transition: all 0.3s;
    }

    .download-btn:hover {
      background: var(--muted-green);
      color: #fff;
    }

    .back-btn {
      background: white;
      color: var(--muted-green);
      border: 1px solid var(--muted-green);
      font-weight: 500;
      text-decoration: none;
      transition: all 0.3s;
    }

    .back-btn:hover {
      background: var(--muted-green);
      color: #fff;
    }

    .cancel-btn,
    .return-btn {
      font-family: 'Aboreto', cursive;
      font-weight: bold;
      font-size: 1rem;
      border: 1px solid var(--error-color);
      color: var(--error-color);
      background: white;
      transition: all 0.3s;
    }

    .cancel-btn:hover,
    .return-btn:hover {
      background: var(--soft-beige);
      color: var(--dark-text);
    }

    .confirm-cancel-btn,
    .confirm-return-btn,
    .cancel-modal-btn {
      font-family: 'Jost', sans-serif;
      font-weight: 500;
      font-size: 0.9rem;
      text-transform: uppercase;
      letter-spacing: 0.5px;
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
      border: none;
      transition: all 0.3s;
    }

    @media (max-width: 900px) {
      .order-bottom-section {
        flex-direction: column;
        gap: 1rem;
      }

      .order-address,
      .order-status-payment {
        min-width: unset;
      }

      .order-total-amount {
        text-align: left;
      }

      .order-actions-bottom {
        flex-direction: column;
        align-items: stretch;
      }

      .download-btn,
      .back-btn,
      .cancel-btn,
      .return-btn,
      .confirm-cancel-btn,
      .confirm-return-btn,
      .cancel-modal-btn {
        min-width: 100%;
        width: 100%;
      }
    }
  </style>
</head>

<body>
  <!-- Toast Container -->
  <div class="toast-container" id="toastContainer"></div>

  <!-- Navbar -->
  <%-include('../partials/user/header.ejs') %>

    <% if (locals.user) { %>
      <div class="main-container">


        <div class="content-area">
          <h1 class="page-title">Order Details</h1>

          <div class="order-tracking-stepper" style="margin-bottom:2.5rem;">
            <div class="stepper-row">
              <% 
                const allStatuses = ['Pending', 'Processing', 'Shipped', 'Delivered', 'Cancelled', 'Returned', 'Return Requested', 'Return Rejected', 'Failed'];
                const statusIcons = {
                  'Pending': 'fa-clock',
                  'Processing': 'fa-cogs',
                  'Shipped': 'fa-truck',
                  'Delivered': 'fa-box-open',
                  'Cancelled': 'fa-times-circle',
                  'Returned': 'fa-undo',
                  'Return Requested': 'fa-undo-alt',
                  'Return Rejected': 'fa-ban',
                  'Failed': 'fa-exclamation-triangle'
                };
                
                let statusPath = [];
                if (order.status === 'Pending') {
                  statusPath = ['Pending'];
                } else if (order.status === 'Processing') {
                  statusPath = ['Pending', 'Processing'];
                } else if (order.status === 'Shipped') {
                  statusPath = ['Pending', 'Processing', 'Shipped'];
                } else if (order.status === 'Delivered') {
                  statusPath = ['Pending', 'Processing', 'Shipped', 'Delivered'];
                } else if (order.status === 'Cancelled') {
                  statusPath = ['Pending', 'Processing', 'Cancelled'];
                } else if (order.status === 'Return Requested') {
                  statusPath = ['Pending', 'Processing', 'Shipped', 'Delivered', 'Return Requested'];
                } else if (order.status === 'Return Rejected') {
                  statusPath = ['Pending', 'Processing', 'Shipped', 'Delivered', 'Return Requested', 'Return Rejected'];
                } else if (order.status === 'Returned') {
                  statusPath = ['Pending', 'Processing', 'Shipped', 'Delivered', 'Returned'];
                } else if (order.status === 'Failed') {
                  statusPath = ['Pending', 'Failed'];
                }
                const currentIndex = statusPath.length - 1;
              %>
                <% statusPath.forEach((status, idx)=> { %>
                  <div class="stepper-step <%= idx < currentIndex ? 'done' : (idx === currentIndex ? 'active' : '') %>">
                    <div class="stepper-icon">
                      <i class="fas <%= statusIcons[status] %>"></i>
                    </div>
                    <div class="stepper-label">
                      <%= status %>
                    </div>
                    <% if (idx < statusPath.length - 1) { %>
                      <div
                        class="stepper-line <%= idx < currentIndex ? 'stepper-line-done' : (idx === currentIndex ? 'stepper-line-active' : '') %>">
                      </div>
                      <% } %>
                  </div>
                  <% }) %>
            </div>
          </div>
          <style>
            .order-tracking-stepper {
              width: 100%;
              overflow-x: auto;
            }

            .stepper-row {
              display: flex;
              align-items: center;
              justify-content: flex-start;
              gap: 0;
              min-width: 700px;
            }

            .stepper-step {
              display: flex;
              flex-direction: column;
              align-items: center;
              position: relative;
              min-width: 90px;
              flex-shrink: 0;
            }

            .stepper-icon {
              width: 36px;
              height: 36px;
              border-radius: 50%;
              background: #e0d8cc;
              display: flex;
              align-items: center;
              justify-content: center;
              font-size: 1.2rem;
              color: #b0a08a;
              margin-bottom: 0.3rem;
              border: 2px solid #e0d8cc;
              transition: all 0.3s;
            }

            .stepper-step.done .stepper-icon {
              background: var(--muted-green);
              color: #fff;
              border-color: var(--muted-green);
            }

            .stepper-step.active .stepper-icon {
              background: var(--soft-beige);
              color: var(--muted-green);
              border-color: var(--soft-beige);
            }

            .stepper-label {
              font-size: 0.85rem;
              color: #888;
              text-align: center;
              margin-bottom: 0.2rem;
              min-width: 70px;
            }

            .stepper-step.done .stepper-label {
              color: var(--muted-green);
              font-weight: 500;
            }

            .stepper-step.active .stepper-label {
              color: var(--soft-beige);
              font-weight: 600;
            }

            .stepper-line {
              position: absolute;
              top: 18px;
              left: 100%;
              width: 48px;
              height: 4px;
              background: #e0d8cc;
              z-index: 0;
              margin-left: 0.5rem;
              transition: background 0.3s;
            }

            .stepper-line-done {
              background: var(--muted-green) !important;
            }

            .stepper-line-active {
              background: var(--muted-green) !important;
            }

            @media (max-width: 900px) {
              .order-tracking-stepper {
                min-width: 100vw;
                padding-bottom: 1rem;
              }

              .stepper-row {
                min-width: 600px;
              }
            }

            @media (max-width: 600px) {
              .stepper-row {
                min-width: 400px;
              }

              .stepper-label {
                font-size: 0.7rem;
                min-width: 50px;
              }

              .stepper-icon {
                width: 28px;
                height: 28px;
                font-size: 1rem;
              }
            }
          </style>

          <!-- Ordered Items Table -->
          <div class="order-details-container" style="margin-top:2rem;">
            <h3 style="font-size:1.1rem; color:var(--muted-green); margin-bottom:1rem;">Ordered Items</h3>
            <div class="table-responsive-order-items" style="width:100%;overflow-x:auto;">
              <table class="items-table">
                <thead>
                  <tr>
                    <th>Product</th>
                    <th>Size</th>
                    <th>Quantity</th>
                    <th>Unit Price</th>
                    <th>Total</th>
                    <th>Status</th>
                    <th>Action</th>
                  </tr>
                </thead>
                <tbody>
                  <% order.items.forEach(item=> { %>
                    <tr>
                      <td>
                        <div style="display: flex; align-items: center; gap: 1rem;">
                          <img src="/uploads/product/<%= item.image %>" alt="<%= item.name %>" class="item-image">
                          <span>
                            <%= item.name %>
                          </span>
                        </div>
                      </td>
                      <td>
                        <%= item.size || '-' %>
                      </td>
                      <td>
                        <%= item.quantity %>
                      </td>
                      <td>₹<%= item.price?.toFixed(2) %>
                      </td>
                      <td>₹<%= item.total?.toFixed(2) %>
                      </td>
                      <td>
                        <% if (item.status==='Pending' ) { %>
                          <span class="badge badge-pending">Pending</span>
                          <% } else if (item.status==='Cancelled' ) { %>
                            <span class="badge badge-cancelled">Cancelled</span>
                            <% } else { %>
                              <% let statusClass='' ; switch (item.status) { case 'Cancelled' :
                                statusClass='badge-danger' ; break; case 'Pending' : statusClass='badge-warning' ;
                                break; case 'Shipped' : statusClass='badge-info' ; break; case 'Delivered' :
                                statusClass='badge-success' ; break; case 'Returned' : statusClass='badge-danger' ;
                                break; default: statusClass='badge-secondary' ; } %>

                                <span class="badge <%= statusClass %>">
                                  <%= item.status %>
                                </span>
                                <% } %>
                      </td>
                      <td>
                        <% if (item.status !=='Cancelled' &&
                          !['Delivered','Cancelled','Returned'].includes(order.status)) { %>
                          <button class="cancel-btn"
                            onclick="openItemCancelModal('<%= order._id %>','<%= item.productId %>')"
                            style="padding: 0.5rem 1rem; font-size: 0.9rem;">
                            <i class="fas fa-times"></i> Cancel Item
                          </button>
                          <% } %>
                      </td>
                    </tr>
                    <% }) %>

                </tbody>
              </table>
            </div>
            <!-- Order Summary, Address, and Status/Payment Details -->
            <div class="order-bottom-section"
              style="display:flex; justify-content:space-between; gap:2rem; margin-top:2rem;">
              <div class="order-address" style="flex:1;">
                <h3 style="font-size:1rem; color:var(--muted-green);">Shipping Address</h3>
                <% if (order.address) { %>
                  <div style="color:#444; font-size:0.98rem;">
                    <%= order.address.name %><br>
                      <%= order.address.roadArea ? order.address.roadArea + ', ' : '' %>
                        <%= order.address.city %>, <%= order.address.state %><br>
                            <%= order.address.pincode %><br>
                              Mobile: <%= order.address.phone %><br>
                                <% if (order.address.altPhone) { %>Alternate Mobile: <%= order.address.altPhone %>
                                    <% } %>
                  </div>
                  <% } else { %>
                    <div>Address not available</div>
                    <% } %>
              </div>
              <div class="order-status-payment" style="flex:1;">
                <h3 style="font-size:1rem; color:var(--muted-green);">Order Status</h3>
                <div style="color:#444; font-size:0.98rem;">Current Status: <%= order.status %><br>Last Updated: <%=
                      order.updatedAt ? order.updatedAt : order.createdOn %>
                </div>
                <h3 style="font-size:1rem; color:var(--muted-green); margin-top:1.5rem;">Payment Details</h3>
                <div style="color:#444; font-size:0.98rem;">Payment Method: <%= order.paymentMethod %><br>Status: <%=
                      order.paymentStatus || 'Paid' %><br>Paid At: <%= order.paidAt ? order.paidAt : order.createdOn %>
                </div>
              </div>
            </div>
            <div class="order-total-amount"
              style="text-align:right; margin-top:1.5rem; font-size:1.15rem; font-weight:600; color:var(--dark-text);">
              <div style="font-weight:400; color:#666; font-size:1rem;">
                <div>Subtotal: ₹<%= order.subtotal?.toFixed(2) %>
                </div>
                <% if (order.offerDiscount> 0) { %>
                  <div>Offer Discount: -₹<%= order.offerDiscount?.toFixed(2) %>
                  </div>
                  <% } %>
                    <% if (order.couponDiscount> 0) { %>
                      <div>Coupon Discount: -₹<%= order.couponDiscount?.toFixed(2) %>
                      </div>
                      <% } %>
              </div>
              <div style="margin-top:0.5rem; font-weight:600; color:var(--dark-text); font-size:1.15rem;">
                Total Amount: ₹<%= order.totalAmount?.toFixed(2) %>
              </div>
            </div>
            <!-- Action Buttons -->
            <div class="order-actions-bottom"
              style="display:flex; justify-content:center; align-items:center; gap:1rem; margin-top:2rem;">
              <% if (order.status==='Pending' || order.status==='Processing' ) { %>
                <button class="cancel-btn" onclick="openCancelModal()"> <i class="fas fa-times"></i> Cancel Order
                </button>
                <% } %>
                  <a href="/orders" class="back-btn">Back to Orders</a>
                  <a href="/orders/<%= order._id %>/invoice" class="download-btn"> <i class="fas fa-file-invoice"></i>
                    Download Invoice</a>
            </div>
          </div>
        </div>
        <% } else { %>
          <div class="content-area">
            <div class="no-order">
              <h2>Welcome to LUME</h2>
              <p>Please log in to view your order details.</p>
              <a href="/login" class="login-btn">Login Now</a>
            </div>
          </div>
          <% } %>

            <!-- Cancel Order Modal -->
            <div id="cancelModal" class="modal">
              <div class="modal-content">
                <div class="modal-header">
                  <h3>Cancel Order</h3>
                  <span class="close" onclick="closeCancelModal()">×</span>
                </div>
                <div class="modal-body">
                  <p>Please provide a reason for cancelling this order:</p>
                  <form id="cancelOrderForm" onsubmit="submitCancelOrder(event)">
                    <input type="hidden" id="orderId" value="<%= order._id %>">
                    <textarea id="cancelReason" required placeholder="Enter your reason for cancellation..."
                      class="form-control"></textarea>
                    <div class="modal-actions">
                      <button type="button" class="cancel-modal-btn" onclick="closeCancelModal()">Close</button>
                      <button type="submit" class="confirm-cancel-btn">Confirm Cancellation</button>
                    </div>
                  </form>
                </div>
              </div>
            </div>

            <!-- Return Request Modal -->
            <div id="returnModal" class="modal">
              <div class="modal-content">
                <div class="modal-header">
                  <h3>Request Return</h3>
                  <span class="close" onclick="closeReturnModal()">×</span>
                </div>
                <div class="modal-body">
                  <p>Please provide details for your return request:</p>
                  <form id="returnRequestForm" onsubmit="submitReturnRequest(event)">
                    <input type="hidden" id="returnOrderId" value="<%= order._id %>">
                    <div class="form-group">
                      <label for="returnReason">Reason for Return:</label>
                      <select id="returnReason" required class="form-control">
                        <option value="">Select a reason</option>
                        <option value="wrong_size">Wrong Size</option>
                        <option value="defective">Defective Product</option>
                        <option value="not_as_described">Not as Described</option>
                        <option value="quality_issues">Quality Issues</option>
                        <option value="other">Other</option>
                      </select>
                    </div>
                    <div class="form-group">
                      <label for="returnDescription">Additional Details:</label>
                      <textarea id="returnDescription" name="returnDescription"
                        placeholder="Please provide more details about your return request..."
                        class="form-control"></textarea>
                    </div>
                    <div class="form-group">
                      <label for="returnItems">Select Items to Return:</label>
                      <div class="return-items-list">
                        <% order.items.forEach(item=> { %>
                          <div class="return-item">
                            <input type="checkbox" id="item_<%= item.productId %>" name="returnItems"
                              value="<%= item.productId %>" class="return-item-checkbox">
                            <label for="item_<%= item.productId %>">
                              <%= item.name %> (Quantity: <%= item.quantity %>)
                            </label>
                          </div>
                          <% }) %>
                      </div>
                    </div>
                    <div class="modal-actions">
                      <button type="button" class="cancel-modal-btn" onclick="closeReturnModal()">Close</button>
                      <button type="submit" class="confirm-return-btn">Submit Return Request</button>
                    </div>
                  </form>
                </div>
              </div>
            </div>

            <!-- Item Cancel Modal -->
            <div id="itemCancelModal" class="modal">
              <div class="modal-content">
                <div class="modal-header">
                  <h3>Cancel Item</h3>
                  <span class="close" onclick="closeItemCancelModal()">×</span>
                </div>
                <div class="modal-body">
                  <p>Please provide a reason for cancelling this item:</p>
                  <form id="itemCancelForm" onsubmit="submitItemCancel(event)">
                    <input type="hidden" id="itemCancelOrderId">
                    <input type="hidden" id="itemCancelItemId">
                    <textarea id="itemCancelReason" required placeholder="Enter your reason for cancellation..."
                      class="form-control"></textarea>
                    <div class="modal-actions">
                      <button type="button" class="cancel-modal-btn" onclick="closeItemCancelModal()">Close</button>
                      <button type="submit" class="confirm-cancel-btn">Confirm Cancellation</button>
                    </div>
                  </form>
                </div>
              </div>
            </div>

            <!-- Footer -->
            <%-include('../partials/user/fooret.ejs') %>
         

              <script>
                // Sidebar button functionality
                document.querySelector('.logout-btn').addEventListener('click', function () {
                  window.location.href = '/logout';
                });

                document.querySelector('.delete-btn').addEventListener('click', function () {
                  if (confirm('Are you sure you want to delete your account? This action cannot be undone.')) {
                    window.location.href = '/profile/delete';
                  }
                });

                // Toast Notification Function
                function showToast(type, title, message) {
                  const toastContainer = document.getElementById('toastContainer');
                  const toast = document.createElement('div');
                  toast.className = `toast ${type}`;

                  const icon = type === 'success' ? 'check-circle' :
                    type === 'error' ? 'times-circle' : 'exclamation-circle';

                  toast.innerHTML = `
                <i class="fas fa-${icon} toast-icon"></i>
                <div class="toast-content">
                    <div class="toast-title">${title}</div>
                    <div class="toast-message">${message}</div>
                </div>
                <i class="fas fa-times toast-close" onclick="this.parentElement.remove()"></i>
            `;

                  toastContainer.appendChild(toast);

                  setTimeout(() => {
                    toast.style.animation = 'slideOut 0.3s ease-in-out forwards';
                    setTimeout(() => toast.remove(), 300);
                  }, 5000);
                }

                function openCancelModal() {
                  const orderId = '<%= order._id %>';
                  if (!orderId) {
                    showToast('error', 'Error', 'Order ID is missing');
                    return;
                  }
                  document.getElementById('orderId').value = orderId;
                  document.getElementById('cancelReason').value = '';
                  document.getElementById('cancelModal').classList.add('show');
                }

                function closeCancelModal() {
                  document.getElementById('cancelModal').classList.remove('show');
                  document.getElementById('cancelReason').value = '';
                }

                async function submitCancelOrder(event) {
                  event.preventDefault();

                  const orderId = document.getElementById('orderId').value;
                  const reason = document.getElementById('cancelReason').value;

                  if (!orderId) {
                    showToast('error', 'Error', 'Order ID is missing');
                    return;
                  }

                  if (!reason.trim()) {
                    showToast('warning', 'Warning', 'Please provide a reason for cancellation');
                    return;
                  }

                  try {
                    const response = await fetch(`/orders/${orderId}/cancel`, {
                      method: 'POST',
                      headers: { 'Content-Type': 'application/json' },
                      body: JSON.stringify({ reason })
                    });

                    const data = await response.json();
                    if (data.success) {
                      showToast('success', 'Success', 'Order cancelled successfully');
                      setTimeout(() => window.location.reload(), 1500);
                    } else {
                      showToast('error', 'Error', data.message || 'Failed to cancel order');
                    }
                  } catch (error) {
                    showToast('error', 'Error', 'An error occurred while cancelling the order');
                  }
                }

                function openReturnModal() {
                  document.getElementById('returnModal').classList.add('show');
                }

                function closeReturnModal() {
                  document.getElementById('returnModal').classList.remove('show');
                }

                async function submitReturnRequest(event) {
                  event.preventDefault();

                  const orderId = document.getElementById('returnOrderId').value;
                  const reason = document.getElementById('returnReason').value;
                  const description = document.getElementById('returnDescription').value.trim();
                  const selectedItems = Array.from(document.querySelectorAll('input[name="returnItems"]:checked'))
                    .map(checkbox => checkbox.value);

                  if (!selectedItems.length) {
                    showToast('warning', 'Warning', 'Please select at least one item to return');
                    return;
                  }

                  if (!description) {
                    showToast('warning', 'Warning', 'Please provide additional details for your return request');
                    return;
                  }

                  try {
                    const response = await fetch(`/orders/${orderId}/return`, {
                      method: 'POST',
                      headers: { 'Content-Type': 'application/json' },
                      body: JSON.stringify({ reason, description, items: selectedItems })
                    });

                    const data = await response.json();
                    if (data.success) {
                      showToast('success', 'Success', 'Return request submitted successfully');
                      setTimeout(() => window.location.reload(), 1500);
                    } else {
                      showToast('error', 'Error', data.message || 'Failed to submit return request');
                    }
                  } catch (error) {
                    showToast('error', 'Error', 'An error occurred while submitting the return request');
                  }
                }

                document.addEventListener('DOMContentLoaded', function () {
                  document.querySelectorAll('.return-item-checkbox').forEach(checkbox => {
                    checkbox.addEventListener('change', function () {
                      const selectedItems = Array.from(document.querySelectorAll('input[name="returnItems"]:checked'))
                        .map(checkbox => checkbox.value);
                      if (!selectedItems.length) {
                        showToast('warning', 'Warning', 'Please select at least one item to return');
                      }
                    });
                  });
                });

                window.onclick = function (event) {
                  const cancelModal = document.getElementById('cancelModal');
                  const returnModal = document.getElementById('returnModal');
                  if (event.target === cancelModal) closeCancelModal();
                  if (event.target === returnModal) closeReturnModal();
                }

                function openItemCancelModal(orderId, itemId) {
                  document.getElementById('itemCancelOrderId').value = orderId;
                  document.getElementById('itemCancelItemId').value = itemId;
                  document.getElementById('itemCancelReason').value = '';
                  document.getElementById('itemCancelModal').classList.add('show');
                }

                function closeItemCancelModal() {
                  document.getElementById('itemCancelModal').classList.remove('show');
                  document.getElementById('itemCancelReason').value = '';
                }

                async function submitItemCancel(event) {
                  event.preventDefault();
                  const orderId = document.getElementById('itemCancelOrderId').value;
                  const itemId = document.getElementById('itemCancelItemId').value;
                  const reason = document.getElementById('itemCancelReason').value;
                  if (!orderId || !itemId) {
                    showToast('error', 'Error', 'Order or Item ID is missing');
                    return;
                  }
                  if (!reason.trim()) {
                    showToast('warning', 'Warning', 'Please provide a reason for cancellation');
                    return;
                  }
                  try {
                    const response = await fetch(`/orders/${orderId}/items/${itemId}/cancel`, {
                      method: 'POST',
                      headers: { 'Content-Type': 'application/json' },
                      body: JSON.stringify({ reason })
                    });
                    const data = await response.json();
                    if (data.success) {
                      showToast('success', 'Success', 'Item cancelled successfully');
                      setTimeout(() => window.location.reload(), 1500);
                    } else {
                      showToast('error', 'Error', data.message || 'Failed to cancel item');
                    }
                  } catch (error) {
                    showToast('error', 'Error', 'An error occurred while cancelling the item');
                  }
                }
              </script>
</body>

</html>