<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Order Details - Lume</title>
  <link href="https://fonts.googleapis.com/css2?family=Aboreto&family=Jost:wght@300;400;500&display=swap"
    rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
  <style>
    :root {
      --soft-beige: #D4B996;
      --muted-green: #58674e;
      --light-bg: #f8f5f2;
      --border-color: #e0d8cc;
      --offer-red: #e63946;
      --dark-text: #2c1810;
      --darker-text: #1a0f0a;
      --card-bg: #ffffff;
      --success-color: #4caf50;
      --error-color: #f44336;
    }

    body {
      font-family: 'Jost', sans-serif;
      background-color: #f0e9e0;
      margin: 0;
      padding: 0;
      min-height: 100vh;
      color: var(--dark-text);
      display: flex;
      flex-direction: column;
      width: 100vw;
      overflow-x: hidden;
      box-sizing: border-box;
    }

    /* Navbar styles */
    .navbar {
      background: white;
      border-bottom: 1px solid var(--border-color);
      padding: 1rem 2rem;
      display: flex;
      align-items: center;
      justify-content: space-between;
      flex-wrap: nowrap;
      position: fixed;
      top: 0;
      left: 0;
      right: 0;
      z-index: 1000;
      width: 100%;
      box-sizing: border-box;
    }

    .brand {
      font-family: 'Aboreto', cursive;
      font-size: 1.5rem;
      letter-spacing: 1.5px;
      text-transform: uppercase;
      color: var(--darker-text);
      cursor: pointer;
      transition: color 0.3s ease;
    }

    .brand:hover {
      color: var(--muted-green);
    }

    .nav-links {
      display: flex;
      list-style: none;
      margin: 0;
      padding: 0;
      flex: 1;
      justify-content: center;
    }

    .nav-link {
      color: var(--darker-text);
      font-family: 'Jost', sans-serif;
      font-size: 0.9rem;
      text-decoration: none;
      padding: 0.5rem 1rem;
      transition: all 0.3s ease;
    }

    .nav-link:hover {
      color: var(--muted-green);
      font-weight: 500;
    }

    .icon-links {
      display: flex;
      align-items: center;
      list-style: none;
      margin: 0;
      padding: 0;
    }

    .icon-link {
      color: var(--darker-text);
      font-size: 1.1rem;
      padding: 0.5rem;
      transition: all 0.3s ease;
    }

    .icon-link:hover {
      color: var(--muted-green);
    }

    .search-container {
      position: relative;
      display: flex;
      align-items: center;
    }

    .search-input {
      border: 1px solid var(--border-color);
      border-radius: 20px;
      padding: 0.5rem 1rem;
      padding-right: 2.5rem;
      width: 200px;
      background-color: var(--light-bg);
      color: var(--dark-text);
      transition: all 0.3s ease;
    }

    .search-input:focus {
      width: 250px;
      border-color: var(--soft-beige);
      box-shadow: none;
      outline: none;
    }

    .search-button {
      position: absolute;
      right: 10px;
      background: none;
      border: none;
      color: var(--dark-text);
      cursor: pointer;
    }

    /* Profile Dropdown */
    .profile-dropdown {
      position: relative;
      display: inline-block;
    }

    .profile-dropdown-content {
      display: none;
      position: absolute;
      right: 0;
      background-color: white;
      min-width: 160px;
      box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1);
      z-index: 1000;
      border-radius: 4px;
      padding: 0.5rem 0;
      border: 1px solid var(--border-color);
    }

    .profile-dropdown:hover .profile-dropdown-content {
      display: block;
    }

    .profile-dropdown-content a {
      color: var(--dark-text);
      padding: 0.75rem 1rem;
      text-decoration: none;
      display: block;
      font-size: 0.9rem;
      transition: all 0.3s ease;
    }

    .profile-dropdown-content a:hover {
      background-color: var(--light-bg);
      color: var(--muted-green);
    }

    .profile-dropdown-content a i {
      margin-right: 0.5rem;
      width: 20px;
      text-align: center;
    }

    /* Main Container */
    .main-container {
      display: flex;
      flex: 1;
      margin-top: 70px;
      position: relative;
      width: 100%;
    }

    /* Elegant Sidebar */
    .sidebar {
      width: 280px;
      background-color: white;
      padding: 2rem 1.5rem;
      border-right: 1px solid var(--border-color);
      display: flex;
      flex-direction: column;
      position: fixed;
      height: calc(100vh - 70px);
      overflow-y: auto;
      z-index: 900;
      transition: transform 0.3s ease-in-out;
    }

    
    /* Content Area */
    .content-area {
      flex: 1;
      margin-left: 280px;
      padding: 2rem 3rem;
      width: calc(100% - 280px);
      box-sizing: border-box;
      transition: margin-left 0.3s ease-in-out, width 0.3s ease-in-out;
    }

    .page-title {
      font-family: 'Aboreto', cursive;
      font-size: 2rem;
      color: var(--muted-green);
      margin-bottom: 2rem;
    }

    .order-details-container {
      background: transparent;
      border-radius: 8px;
      box-shadow: none;
      padding: 2rem;
      margin-bottom: 2rem;
      border: none;
    }

    .order-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 2rem;
      padding-bottom: 1rem;
      border-bottom: 1px solid var(--border-color);
    }

    .order-number {
      font-size: 1.2rem;
      font-weight: 500;
      color: var(--dark-text);
    }

    .order-status {
      padding: 0.5rem 1rem;
      border-radius: 20px;
      font-size: 0.9rem;
      font-weight: 500;
    }

    .status-pending {
      background-color: #fff3cd;
      color: #856404;
    }

    .status-delivered {
      background-color: #d4edda;
      color: #155724;
    }

    .status-processing {
      background-color: #cce5ff;
      color: #004085;
    }

    .status-cancelled {
      background-color: #f8d7da;
      color: #721c24;
    }

    .order-info-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
      gap: 2rem;
      margin-bottom: 2rem;
    }

    .info-section {
      background: var(--light-bg);
      padding: 1.5rem;
      border-radius: 8px;
      border: 1px solid var(--border-color);
    }

    .info-section h3 {
      font-family: 'Aboreto', cursive;
      font-size: 1.2rem;
      margin-bottom: 1rem;
      color: var(--muted-green);
    }

    .info-item {
      margin-bottom: 0.75rem;
    }

    .info-label {
      font-weight: 500;
      color: var(--dark-text);
      margin-bottom: 0.25rem;
    }

    .info-value {
      color: #666;
    }

    .order-items {
      margin-top: 2rem;
    }

    .order-items h3 {
      font-family: 'Aboreto', cursive;
      font-size: 1.2rem;
      margin-bottom: 1rem;
      color: var(--muted-green);
    }

    .items-table {
      width: 100%;
      border-collapse: collapse;
      background: transparent;
      border: none;
      border-radius: 5px;
      overflow-x: auto;
    }

    .items-table th {
      background-color: var(--light-bg);
      padding: 1rem;
      text-align: left;
      font-weight: 500;
      color: var(--dark-text);
    }

    .items-table td {
      padding: 1rem;
      border-bottom: 1px solid var(--border-color);
      color: #666;
      background: transparent;
    }

    .item-image {
      width: 50px;
      height: 50px;
      object-fit: cover;
      border-radius: 4px;
    }

    .order-summary {
      margin-top: 2rem;
      padding-top: 1rem;
      border-top: 1px solid var(--border-color);
    }

    .summary-row {
      display: flex;
      justify-content: space-between;
      margin-bottom: 0.75rem;
      color: #666;
    }

    .summary-row.total {
      font-weight: 600;
      font-size: 1.1rem;
      margin-top: 1rem;
      padding-top: 1rem;
      border-top: 1px solid var(--border-color);
      color: var(--dark-text);
    }

    .back-btn {
      display: inline-block;
      padding: 0.75rem 1.5rem;
      background-color: black;
      color: white;
      text-decoration: none;
      border-radius: 4px;
      margin-top: 1rem;
      transition: all 0.3s ease;
      font-weight: 500;
      border: none;
      cursor: pointer;
    }

    .back-btn:hover {
      background-color: var(--soft-beige);
      transform: translateY(-2px);
    }

    .order-actions {
      margin-bottom: 2rem;
      display: flex;
      justify-content: flex-end;
      gap: 1rem;
      padding: 1rem;
      background: var(--light-bg);
      border-radius: 8px;
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
      border: 1px solid var(--border-color);
    }

    .cancel-btn {
      background-color: rgb(96, 61, 61);
      color: white;
    }

    .back-btn {
      margin-top: 2rem;
      padding: 1rem 2rem;
      background: black;
      border-radius: 4px;
      border: none;
      color: white;
      font-weight: bold;
      text-align: center;
      cursor: pointer;
      font-size: 1rem;
      font-family: 'Aboreto', cursive;
      transition: all 0.3s ease;
    }

    .cancel-btn:hover,
    .back-btn:hover {
      background-color: var(--soft-beige);
      transform: translateY(-2px);
    }

    .return-btn {
      background: var(--muted-green);
    }

    .return-btn:hover {
      background-color: var(--soft-beige);
      transform: translateY(-2px);
    }

    .modal {
      display: none;
      position: fixed;
      top: 0;
      left: 0;
      width: 100vw;
      height: 100vh;
      background-color: rgba(0, 0, 0, 0.5);
      z-index: 1000;
      backdrop-filter: blur(4px);
      overflow-y: auto;
      padding: 0;
      box-sizing: border-box;
    }

    .modal.show {
      display: flex;
      align-items: center;
      justify-content: center;
    }

    .modal-content {
      position: relative;
      background-color: white;
      margin: 20px auto;
      padding: 0;
      width: 90%;
      max-width: 600px;
      border-radius: 8px;
      box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1);
      animation: modalSlideIn 0.3s ease-out;
      display: flex;
      flex-direction: column;
      max-height: 90vh;
      box-sizing: border-box;
      border: 1px solid var(--border-color);
    }

    .form-group {
      margin-bottom: 1.5rem;
    }

    .form-group label {
      display: block;
      margin-bottom: 0.5rem;
      font-weight: 500;
      color: var(--dark-text);
    }

    .form-control {
      width: 100%;
      padding: 0.75rem;
      border: 1px solid var(--border-color);
      border-radius: 8px;
      font-family: 'Jost', sans-serif;
      font-size: 1rem;
      transition: all 0.3s ease;
      background-color: var(--light-bg);
      color: var(--dark-text);
    }

    .form-control:focus {
      outline: none;
      border-color: var(--muted-green);
      box-shadow: 0 0 0 3px rgba(169, 186, 157, 0.1);
    }

    select.form-control {
      appearance: none;
      background-image: url("data:image/svg+xml;charset=UTF-8,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='none' stroke='%23666' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3e%3cpolyline points='6 9 12 15 18 9'%3e%3c/polyline%3e%3c/svg%3e");
      background-repeat: no-repeat;
      background-position: right 1rem center;
      background-size: 1em;
      padding-right: 2.5rem;
      cursor: pointer;
    }

    select.form-control option {
      padding: 0.5rem;
      font-size: 1rem;
      background-color: white;
      color: var(--dark-text);
    }

    select.form-control option:checked {
      background-color: var(--muted-green);
      color: white;
    }

    @keyframes modalSlideIn {
      from {
        transform: translateY(-20px);
        opacity: 0;
      }

      to {
        transform: translateY(0);
        opacity: 1;
      }
    }

    .modal-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 1.5rem 2.5rem;
      border-bottom: 1px solid var(--border-color);
      background: white;
      border-radius: 8px 8px 0 0;
      position: sticky;
      top: 0;
      z-index: 1;
    }

    .modal-header h3 {
      font-family: 'Aboreto', cursive;
      font-size: 1.2rem;
      color: var(--muted-green);
      margin: 0;
    }

    .modal-body {
      padding: 2.5rem;
      overflow-y: auto;
      flex: 1;
      color: #666;
    }

    .modal-actions {
      display: flex;
      justify-content: flex-end;
      gap: 1rem;
      padding: 1.5rem 2.5rem;
      border-top: 1px solid var(--border-color);
      background: white;
      border-radius: 0 0 8px 8px;
      position: sticky;
      bottom: 0;
      z-index: 1;
    }

    .return-items-list {
      max-height: 200px;
      overflow-y: auto;
      border: 1px solid var(--border-color);
      border-radius: 8px;
      padding: 1.5rem;
      background-color: var(--light-bg);
      margin-bottom: 1rem;
    }

    .return-item {
      display: flex;
      align-items: center;
      gap: 1rem;
      padding: 1rem 0;
      border-bottom: 1px solid var(--border-color);
    }

    .return-item:last-child {
      border-bottom: none;
    }

    .return-item input[type="checkbox"] {
      width: 20px;
      height: 20px;
      border: 1px solid var(--border-color);
      border-radius: 4px;
      cursor: pointer;
      transition: all 0.3s ease;
      background-color: white;
    }

    .return-item input[type="checkbox"]:checked {
      background-color: var(--muted-green);
      border-color: var(--muted-green);
    }

    .return-item label {
      font-size: 1rem;
      color: var(--dark-text);
      cursor: pointer;
      flex: 1;
    }

    .toast-container {
      position: fixed;
      top: 20px;
      right: 10px;
      z-index: 9999;
      width: calc(100% - 20px);
      max-width: 400px;
    }

    .toast {
      background: white;
      border-radius: 8px;
      padding: 16px 24px;
      margin-bottom: 10px;
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
      display: flex;
      align-items: center;
      gap: 12px;
      min-width: 250px;
      max-width: 100%;
      transform: translateX(120%);
      transition: transform 0.3s ease-in-out;
      animation: slideIn 0.3s ease-in-out forwards;
      box-sizing: border-box;
      border: 1px solid var(--border-color);
    }

    .toast.success {
      border-left: 4px solid var(--success-color);
    }

    .toast.error {
      border-left: 4px solid var(--error-color);
    }

    .toast.warning {
      border-left: 4px solid #ffc107;
    }

    .toast-icon {
      font-size: 20px;
    }

    .toast.success .toast-icon {
      color: var(--success-color);
    }

    .toast.error .toast-icon {
      color: var(--error-color);
    }

    .toast.warning .toast-icon {
      color: #ffc107;
    }

    .toast-content {
      flex: 1;
    }

    .toast-title {
      font-weight: 600;
      margin-bottom: 4px;
      color: var(--dark-text);
    }

    .toast-message {
      color: #666;
      font-size: 0.9rem;
    }

    .toast-close {
      color: #666;
      cursor: pointer;
      padding: 4px;
      font-size: 18px;
      transition: color 0.3s ease;
    }

    .toast-close:hover {
      color: var(--dark-text);
    }

    @keyframes slideIn {
      from {
        transform: translateX(120%);
      }

      to {
        transform: translateX(0);
      }
    }

    @keyframes slideOut {
      from {
        transform: translateX(0);
      }

      to {
        transform: translateX(120%);
      }
    }

    .no-order {
      text-align: center;
      padding: 3rem;
      background: white;
      border-radius: 8px;
      border: 1px solid var(--border-color);
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

    .no-order h2 {
      color: var(--dark-text);
      margin-bottom: 1rem;
    }

    .no-order p {
      color: #666;
      margin-bottom: 1.5rem;
    }

    .login-btn {
      background-color: var(--muted-green);
      color: white;
      padding: 0.75rem 1.5rem;
      border-radius: 4px;
      font-size: 1rem;
      font-weight: 500;
      border: none;
      cursor: pointer;
      transition: all 0.3s ease;
      font-family: 'Jost', sans-serif;
      text-decoration: none;
      display: inline-block;
    }

    .login-btn:hover {
      background-color: var(--soft-beige);
      transform: translateY(-2px);
    }

    /* Responsive Styles */
    @media (max-width: 1200px) {
      .content-area {
        padding: 1.5rem;
      }
    }

    @media (max-width: 992px) {
    
      .content-area {
        margin-left: 0;
        width: 100%;
      }


      
    }

    @media (max-width: 768px) {
      .content-area {
        padding: 1.5rem;
      }

      .order-details-container {
        padding: 1rem;
        margin: 0 0.5rem 2rem;
      }

      .order-header {
        flex-direction: column;
        align-items: flex-start;
        gap: 1rem;
      }

      .order-info-grid {
        grid-template-columns: 1fr;
      }

      .modal {
        padding: 0;
      }

      .modal-content {
        margin: 10px 5px;
        width: calc(100% - 10px);
      }

      .modal-header,
      .modal-body,
      .modal-actions {
        padding: 1rem;
      }

      .return-btn {
        width: 100%;
        justify-content: center;
      }

      .policy-content {
        grid-template-columns: 1fr;
      }

      .main-container {
        flex-direction: column;
      }

      .sidebar {
        width: 100%;
        padding: 1rem;
        height: auto;
        border-right: none;
        border-bottom: 1px solid var(--border-color);
      }

      .nav-links {
        display: none;
      }
    }

    tbody tr:hover {
      background-color: var(--light-bg);
      transition: background-color 0.3s ease;
    }

    tbody tr {
      transition: background-color 0.3s ease;
    }

  



    @media (max-width: 600px) {
      .stepper-vertical-content {
        padding: 0.7rem 1rem;
        min-width: 120px;
      }

      .stepper-vertical-icon {
        width: 36px;
        height: 36px;
        font-size: 1.1rem;
      }

      .stepper-vertical-line {
        left: 18px;
      }
    }

    /* Badges */
    .badge {
      display: inline-block;
      padding: 0.3em 0.9em;
      border-radius: 12px;
      font-size: 0.9em;
      font-weight: 500;
      margin-right: 0.2em;
    }

    .badge-pending {
      background: #fff3cd;
      color: #856404;
    }

    .badge-cancelled {
      background: #f8d7da;
      color: #721c24;
    }

    .badge-other {
      background: #e2e3e5;
      color: #383d41;
    }

    .order-bottom-section {
      display: flex;
      gap: 2rem;
      margin-top: 2rem;
    }

    .order-address,
    .order-status-payment {
      background: var(--light-bg);
      border-radius: 8px;
      border: 1px solid var(--border-color);
      padding: 1.2rem 1.5rem;
      min-width: 260px;
    }

    .order-total-amount {
      text-align: right;
      margin-top: 1.5rem;
      font-size: 1.15rem;
      font-weight: 600;
      color: var(--dark-text);
    }

    .order-actions-bottom {
      display: flex;
      justify-content: flex-end;
      gap: 1rem;
      margin-top: 2rem;
    }

    .download-btn,
    .back-btn,
    .cancel-btn,
    .return-btn,
    .confirm-cancel-btn,
    .confirm-return-btn,
    .cancel-modal-btn {
      border-radius: 0 !important;
      min-width: 180px;
      height: 44px;
      display: inline-flex;
      align-items: center;
      justify-content: center;
      font-size: 1rem;
      padding: 0 1.5rem;
    }

    .download-btn {
      background: white;
      color: var(--muted-green);
      border: 1px solid var(--muted-green);
      font-weight: 500;
      text-decoration: none;
      transition: all 0.3s;
    }

    .download-btn:hover {
      background: var(--muted-green);
      color: #fff;
    }

    .back-btn {
      background: white;
      color: var(--muted-green);
      border: 1px solid var(--muted-green);
      font-weight: 500;
      text-decoration: none;
      transition: all 0.3s;
    }

    .back-btn:hover {
      background: var(--muted-green);
      color: #fff;
    }

    .cancel-btn,
    .return-btn {
      font-family: 'Aboreto', cursive;
      font-weight: bold;
      font-size: 1rem;
      border: 1px solid var(--error-color);
      color: var(--error-color);
      background: white;
      transition: all 0.3s;
    }

    .cancel-btn:hover,
    .return-btn:hover {
      background: var(--soft-beige);
      color: var(--dark-text);
    }

    .confirm-cancel-btn,
    .confirm-return-btn,
    .cancel-modal-btn {
      font-family: 'Jost', sans-serif;
      font-weight: 500;
      font-size: 0.9rem;
      text-transform: uppercase;
      letter-spacing: 0.5px;
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
      border: none;
      transition: all 0.3s;
    }

    @media (max-width: 900px) {
      .order-bottom-section {
        flex-direction: column;
        gap: 1rem;
      }

      .order-address,
      .order-status-payment {
        min-width: unset;
      }

      .order-total-amount {
        text-align: left;
      }

      .order-actions-bottom {
        flex-direction: column;
        align-items: stretch;
      }

      .download-btn,
      .back-btn,
      .cancel-btn,
      .return-btn,
      .confirm-cancel-btn,
      .confirm-return-btn,
      .cancel-modal-btn {
        min-width: 100%;
        width: 100%;
      }
    }
  </style>
</head>

<body>
  <!-- Toast Container -->
  <div class="toast-container" id="toastContainer"></div>

  <!-- Navbar -->

 



    <% if (locals.user) { %>
      <div class="main-container">


        <div class="content-area">
          <h1 class="page-title">Order Details</h1>

          <div class="order-tracking-stepper" style="margin-bottom:2.5rem;">
            <div class="stepper-row">
              <% const allStatuses=['Pending', 'Processing' , 'Shipped' , 'Delivered' , 'Cancelled' , 'Returned'
                , 'Return Requested' , 'Return Rejected' , 'Failed' ]; const statusIcons={ 'Pending' : 'fa-clock'
                , 'Processing' : 'fa-cogs' , 'Shipped' : 'fa-truck' , 'Delivered' : 'fa-box-open' , 'Cancelled'
                : 'fa-times-circle' , 'Returned' : 'fa-undo' , 'Return Requested' : 'fa-undo-alt' , 'Return Rejected'
                : 'fa-ban' , 'Failed' : 'fa-exclamation-triangle' }; let statusPath=[]; if (order.status==='Pending' ) {
                statusPath=['Pending']; } else if (order.status==='Processing' ) { statusPath=['Pending', 'Processing'
                ]; } else if (order.status==='Shipped' ) { statusPath=['Pending', 'Processing' , 'Shipped' ]; } else if
                (order.status==='Delivered' ) { statusPath=['Pending', 'Processing' , 'Shipped' , 'Delivered' ]; } else
                if (order.status==='Cancelled' ) { statusPath=['Pending', 'Processing' , 'Cancelled' ]; } else if
                (order.status==='Return Requested' ) { statusPath=['Pending', 'Processing' , 'Shipped' , 'Delivered'
                , 'Return Requested' ]; } else if (order.status==='Return Rejected' ) {
                statusPath=['Pending', 'Processing' , 'Shipped' , 'Delivered' , 'Return Requested' , 'Return Rejected'
                ]; } else if (order.status==='Returned' ) { statusPath=['Pending', 'Processing' , 'Shipped'
                , 'Delivered' , 'Returned' ]; } else if (order.status==='Failed' ) { statusPath=['Pending', 'Failed' ];
                } const currentIndex=statusPath.length - 1; %>
                <% statusPath.forEach((status, idx)=> { %>
                  <div class="stepper-step <%= idx < currentIndex ? 'done' : (idx === currentIndex ? 'active' : '') %>">
                    <div class="stepper-icon">
                      <i class="fas <%= statusIcons[status] %>"></i>
                    </div>
                    <div class="stepper-label">
                      <%= status %>
                    </div>
                    <% if (idx < statusPath.length - 1) { %>
                      <div
                        class="stepper-line <%= idx < currentIndex ? 'stepper-line-done' : (idx === currentIndex ? 'stepper-line-active' : '') %>">
                      </div>
                      <% } %>
                  </div>
                  <% }) %>
            </div>
          </div>
          <style>
            .order-tracking-stepper {
              width: 100%;
              overflow-x: auto;
            }

            .stepper-row {
              display: flex;
              align-items: center;
              justify-content: flex-start;
              gap: 0;
              min-width: 700px;
            }

            .stepper-step {
              display: flex;
              flex-direction: column;
              align-items: center;
              position: relative;
              min-width: 90px;
              flex-shrink: 0;
            }

            .stepper-icon {
              width: 36px;
              height: 36px;
              border-radius: 50%;
              background: #e0d8cc;
              display: flex;
              align-items: center;
              justify-content: center;
              font-size: 1.2rem;
              color: #b0a08a;
              margin-bottom: 0.3rem;
              border: 2px solid #e0d8cc;
              transition: all 0.3s;
            }

            .stepper-step.done .stepper-icon {
              background: var(--muted-green);
              color: #fff;
              border-color: var(--muted-green);
            }

            .stepper-step.active .stepper-icon {
              background: var(--soft-beige);
              color: var(--muted-green);
              border-color: var(--soft-beige);
            }

            .stepper-label {
              font-size: 0.85rem;
              color: #888;
              text-align: center;
              margin-bottom: 0.2rem;
              min-width: 70px;
            }

            .stepper-step.done .stepper-label {
              color: var(--muted-green);
              font-weight: 500;
            }

            .stepper-step.active .stepper-label {
              color: var(--soft-beige);
              font-weight: 600;
            }

            .stepper-line {
              position: absolute;
              top: 18px;
              left: 100%;
              width: 48px;
              height: 4px;
              background: #e0d8cc;
              z-index: 0;
              margin-left: 0.5rem;
              transition: background 0.3s;
            }

            .stepper-line-done {
              background: var(--muted-green) !important;
            }

            .stepper-line-active {
              background: var(--muted-green) !important;
            }

            @media (max-width: 900px) {
              .order-tracking-stepper {
                min-width: 100vw;
                padding-bottom: 1rem;
              }

              .stepper-row {
                min-width: 600px;
              }
            }

            @media (max-width: 600px) {
              .stepper-row {
                min-width: 400px;
              }

              .stepper-label {
                font-size: 0.7rem;
                min-width: 50px;
              }

              .stepper-icon {
                width: 28px;
                height: 28px;
                font-size: 1rem;
              }
            }
          </style>

          <!-- Ordered Items Table -->
          <div class="order-details-container" style="margin-top:2rem;">
            <h3 style="font-size:1.1rem; color:var(--muted-green); margin-bottom:1rem;">Ordered Items</h3>
            <div class="table-responsive-order-items" style="width:100%;overflow-x:auto;">
              <table class="items-table">
                <thead>
                  <tr>
                    <th>Product</th>
                    <th>Size</th>
                    <th>Qty</th>
                    <th>Price</th>
                    <th>Total</th>
                    <th>Status</th>
                    <th>Action</th>
                  </tr>
                </thead>
                <tbody>
                  <% order.items.forEach(item=> { %>
                    <tr>
                      <td>
                        <div style="display: flex; align-items: center; gap: 1rem;">
                          <img src="/uploads/product/<%= item.image %>" alt="<%= item.name %>" class="item-image">
                          <span>
                            <%= item.name %>
                          </span>
                        </div>
                      </td>
                      <td>
                        <%= item.size || '-' %>
                      </td>
                      <td>
                        <%= item.quantity %>
                      </td>
                      <td>
                        <span style="<%= item.discountedPrice ? 'text-decoration: line-through; color: #999;' : '' %>">
                          ₹<%= item.price?.toFixed(2) %>
                        </span>
                      </td>

                      <td>
                        <% const itemTotal=item.discountedPrice ? (item.discountedPrice * item.quantity) : item.total;
                          %>
                          ₹<%= itemTotal.toFixed(2) %>
                      </td>
                      <td>
                        <% const status=item.status || 'Active' ; const statusClass={ 'Active' : 'status-active'
                          , 'Cancelled' : 'status-cancelled' , 'Returned' : 'status-returned' , 'Return Requested'
                          : 'status-requested' , 'Delivered' : 'status-delivered' }[status] || 'status-other' ; %>
                          <span class="status-badge <%= statusClass %>">
                            <%= status %>
                          </span>
                      </td>
                      <td>
                        <div class="item-actions">
                          <button class="action-btn cancel-btn"
                            onclick="openCancelModal('<%= order._id %>', '<%= item._id %>')" title="Cancel this item"
                            <%=item.status==='Cancelled' ? 'disabled' : '' %>
                            style="<%= item.status==='Cancelled' ? 'opacity: 0.6; cursor: not-allowed;' : '' %>">
                              <i class="fas fa-times"></i>
                              <%= item.status==='Cancelled' ? 'Cancelled' : 'Cancel' %>
                          </button>

                          <button class="action-btn return-btn"
                            onclick="openReturnModal('<%= order._id %>', '<%= item.productId %>')"
                            title="Request Return">
                            <i class="fas fa-undo"></i> Return
                          </button>
                        </div>


                      </td>
                    </tr>
                    <% }) %>
                </tbody>
              </table>

              <style>
                .status-badge {
                  display: inline-block;
                  padding: 0.25rem 0.75rem;
                  border-radius: 20px;
                  font-size: 0.8rem;
                  font-weight: 500;
                  text-transform: capitalize;
                  white-space: nowrap;
                }

                .status-active {
                  background-color: #e3f2fd;
                  color: #1976d2;
                }

                .status-cancelled {
                  background-color: #ffebee;
                  color: #d32f2f;
                }

                .status-returned {
                  background-color: #e8f5e9;
                  color: #388e3c;
                }

                .status-requested {
                  background-color: #fff3e0;
                  color: #f57c00;
                }

                .status-delivered {
                  background-color: #e3f2fd;
                  color: #1976d2;
                }

                .item-actions {
                  display: flex;
                  flex-direction: column;
                  gap: 0.5rem;
                  align-items: center;
                  min-width: 120px;
                }

                .action-btn {
                  padding: 0.4rem 0.8rem;
                  border-radius: 4px;
                  font-size: 0.85rem;
                  font-weight: 500;
                  cursor: pointer;
                  display: inline-flex;
                  align-items: center;
                  gap: 0.4rem;
                  transition: all 0.2s;
                  border: 1px solid transparent;
                  width: 100%;
                  justify-content: center;
                }

                .cancel-btn {
                  background-color: #623838;
                  color: #fefdfd;
                }

                .cancel-btn:hover {
                  background-color: #ffebee;
                }

                .return-btn {
                  background-color: #010a13;
                  color: white;
                  border: none;
                }

                .return-btn:hover {
                  background-color: #929eac;
                }

                .status-message {
                  font-size: 0.8rem;
                  color: #666;
                  display: flex;
                  align-items: center;
                  gap: 0.3rem;
                  white-space: nowrap;
                }

                .status-message.success {
                  color: #388e3c;
                }

                .status-message i {
                  font-size: 0.9rem;
                }

                @media (max-width: 768px) {
                  .items-table {
                    display: block;
                    overflow-x: auto;
                    white-space: nowrap;
                  }

                  .item-actions {
                    min-width: 100px;
                  }

                  .action-btn {
                    padding: 0.3rem 0.6rem;
                    font-size: 0.8rem;
                  }
                }
              </style>
            </div>
            <!-- Order Summary, Address, and Status/Payment Details -->
            <div class="order-bottom-section"
              style="display:flex; justify-content:space-between; gap:2rem; margin-top:2rem;">
              <div class="order-address" style="flex:1;">
                <h3 style="font-size:1rem; color:var(--muted-green);">Shipping Address</h3>
                <% if (order.address) { %>
                  <div style="color:#444; font-size:0.98rem;">
                    <%= order.address.name %><br>
                      <%= order.address.roadArea ? order.address.roadArea + ', ' : '' %>
                        <%= order.address.city %>, <%= order.address.state %><br>
                            <%= order.address.pincode %><br>
                              Mobile: <%= order.address.phone %><br>
                                <% if (order.address.altPhone) { %>Alternate Mobile: <%= order.address.altPhone %>
                                    <% } %>
                  </div>
                  <% } else { %>
                    <div>Address not available</div>
                    <% } %>
              </div>
              <div class="order-status-payment" style="flex:1;">
                <h3 style="font-size:1rem; color:var(--muted-green);">Order Status</h3>
                <div style="color:#444; font-size:0.98rem;">Current Status: <%= order.status %><br>Order Created At: <%=
                      order.createdOn %>
                </div>
                <h3 style="font-size:1rem; color:var(--muted-green); margin-top:1.5rem;">Payment Details</h3>
                <div style="color:#444; font-size:0.98rem;">Payment Method: <%= order.paymentMethod %><br>
                    <% let paymentStatus='Paid' ; let paymentDate=order.paidAt || order.createdOn; let
                      showPaymentDate=true; if (order.paymentMethod==='COD' ) { paymentStatus='Pending' ;
                      showPaymentDate=false; } else if (['Returned', 'Cancelled' ].includes(order.status) &&
                      ['Razorpay', 'Wallet' ].includes(order.paymentMethod)) { paymentStatus='Refunded' ; if
                      (order.walletTransaction && order.walletTransaction.type==='CREDIT' ) {
                      paymentDate=order.walletTransaction.createdAt; } } else if (order.walletTransaction) {
                      paymentStatus=order.walletTransaction.status==='COMPLETED' ? 'Paid' :
                      order.walletTransaction.status; paymentDate=order.walletTransaction.createdAt; } else {
                      paymentStatus=order.paymentStatus || 'Paid' ; } %>
                      Status: <%= paymentStatus %>
                        <% if (showPaymentDate) { %><br>
                          <%= paymentStatus==='Refunded' ? 'Refunded At' : 'Paid At' %>: <%= paymentDate %>
                              <% } %>
                                <% if (order.walletTransaction && order.walletTransaction.description) { %><br>Details:
                                  <%= order.walletTransaction.description %>
                                    <% } %>
                </div>
              </div>
            </div>
            <div class="order-total-amount"
              style="text-align:right; margin-top:1.5rem; font-size:1.15rem; font-weight:600; color:var(--dark-text);">
              <div style="font-weight:400; color:#666; font-size:1rem;">
                <div>Subtotal: ₹<%= order.subtotal?.toFixed(2) %>
                </div>
                <% if (order.offerDiscount> 0) { %>
                  <div>Offer Discount: -₹<%= order.offerDiscount?.toFixed(2) %>
                  </div>
                  <% } %>
                    <% if (order.couponDiscount> 0) { %>
                      <div>Coupon Discount: -₹<%= order.couponDiscount?.toFixed(2) %>
                      </div>
                      <% } %>
              </div>
              <div style="margin-top:0.5rem; font-weight:600; color:var(--dark-text); font-size:1.15rem;">
                Total Amount: ₹<%= order.totalAmount?.toFixed(2) %>
              </div>
            </div>
            <!-- Action Buttons -->
            <div class="order-actions-bottom"
              style="display:flex; justify-content:center; align-items:center; gap:1rem; margin-top:2rem;">
              <% if (order.status==='Pending' || order.status==='Processing' ) { %>
                </button>
                <% } %>
                  <a href="/orders" class="back-btn">Back to Orders</a>
                  <a href="/orders/<%= order._id %>/invoice" class="download-btn"> <i class="fas fa-file-invoice"></i>
                    Download Invoice</a>
            </div>
          </div>
        </div>
        <% } else { %>
          <div class="content-area">
            <div class="no-order">
              <h2>Welcome to LUME</h2>
              <p>Please log in to view your order details.</p>
              <a href="/login" class="login-btn">Login Now</a>
            </div>
          </div>
          <% } %>
      </div>

      <!-- Footer -->


        <!-- Return Request Modal -->
        <div id="returnModal" class="modal">
          <div class="modal-content">
            <div class="modal-header">
              <h3>Request Return</h3>
              <span class="close" onclick="closeReturnModal()">×</span>
            </div>
            <div class="modal-body">
              <p>Please provide details for your return request:</p>
              <form id="returnRequestForm" onsubmit="submitReturnRequest(event)">
                <input type="hidden" id="returnOrderId" value="<%= order._id %>">
                <div class="form-group">
                  <label for="returnReason">Reason for Return:</label>
                  <select id="returnReason" required class="form-control">
                    <option value="">Select a reason</option>
                    <option value="wrong_size">Wrong Size</option>
                    <option value="defective">Defective Product</option>
                    <option value="not_as_described">Not as Described</option>
                    <option value="quality_issues">Quality Issues</option>
                    <option value="other">Other</option>
                  </select>
                </div>
                <div class="form-group">
                  <label for="returnDescription">Additional Details:</label>
                  <textarea id="returnDescription" name="returnDescription"
                    placeholder="Please provide more details about your return request..."
                    class="form-control"></textarea>
                </div>
                <div class="form-group">
                  <label for="returnItems">Select Items to Return:</label>
                  <div class="return-items-list">
                    <% order.items.forEach(item=> { %>
                      <div class="return-item">
                        <input type="checkbox" id="item_<%= item.productId %>" name="returnItems"
                          value="<%= item.productId %>" class="return-item-checkbox">
                        <label for="item_<%= item.productId %>">
                          <%= item.name %> (Quantity: <%= item.quantity %>)
                        </label>
                      </div>
                      <% }) %>
                  </div>
                </div>
                <div class="modal-actions">
                  <button type="button" class="cancel-modal-btn" onclick="">Close</button>
                  <button type="submit" class="confirm-return-btn">Submit Return Request</button>
                </div>
              </form>
            </div>
          </div>
        </div>


        <!-- Cancel Modal -->
<div id="cancelModal" class="modal">
  <div class="modal-content">
    <div class="modal-header">
      <h3>Cancel Item(s)</h3>
      <span class="close" onclick="closeCancelModal()">×</span>
    </div>
    <div class="modal-body">
      <p>Please select items to cancel and provide a reason:</p>
      <form id="cancelRequestForm" onsubmit="submitCancel(event)">
        <input type="hidden" id="cancelOrderId" value="<%= order._id %>">
        
        <div class="form-group">
          <label>Items in Order:</label>
          <div class="cancel-items-list">
            <% order.items.forEach(item => { %>
              <div class="cancel-item">
                <% if (item.status !== 'Cancelled') { %>
                  <input type="checkbox" id="cancel_item_<%= item._id %>" name="cancelItems"
                    value="<%= item._id %>" class="cancel-item-checkbox">
                  <label for="cancel_item_<%= item._id %>">
                    <span class="item-name"><%= item.productId.productName %></span>
                    <span class="item-quantity">(Qty: <%= item.quantity %>)</span>
                    <span class="item-status">Status: <%= item.status %></span>
                  </label>
                <% } else { %>
                  <div class="already-cancelled">
                    <span class="item-name"><%= item.productId.productName %></span>
                    <span class="cancelled-badge">Cancelled</span>
                  </div>
                <% } %>
              </div>
            <% }) %>
          </div>
        </div>

        <div class="form-group">
          <label for="cancelReason">Reason for Cancellation:</label>
          <select id="cancelReason" required class="form-control">
            <option value="">Select a reason</option>
            <option value="ordered_by_mistake">Ordered by Mistake</option>
            <option value="change_of_mind">Change of Mind</option>
            <option value="found_cheaper_elsewhere">Found Cheaper Elsewhere</option>
            <option value="shipping_too_long">Shipping Takes Too Long</option>
            <option value="other">Other</option>
          </select>
        </div>

        <div class="form-group">
          <label for="cancelDescription">Additional Details:</label>
          <textarea id="cancelDescription" name="cancelDescription"
            placeholder="Please provide more details about your cancellation request..."
            class="form-control"></textarea>
        </div>

        <div class="modal-actions">
          <button type="button" class="cancel-modal-btn" onclick="closeCancelModal()">Close</button>
          <button type="submit" class="confirm-cancel-btn">Submit Cancellation</button>
        </div>
      </form>
    </div>
  </div>
</div>

<!-- Toast Container -->
<div id="toastContainer" style="position: fixed; top: 10px; right: 10px; z-index: 1055;"></div>



        <script>
          // Toast Container and Functions
          const logoutBtn = document.querySelector('.logout-btn');
          if (logoutBtn) {
            logoutBtn.addEventListener('click', function () {
              window.location.href = '/logout';
            });
          }

          const deleteBtn = document.querySelector('.delete-btn');
          if (deleteBtn) {
            deleteBtn.addEventListener('click', function () {
              if (confirm('Are you sure you want to delete your account? This action cannot be undone.')) {
                window.location.href = '/profile/delete';
              }
            });
          }


          // Return Modal Functions
          function openReturnModal(orderId, itemId) {
            document.getElementById('returnOrderId').value = orderId;
            document.getElementById('returnModal').classList.add('show');

            // Initialize checkboxes
            const checkboxes = document.querySelectorAll('.return-item-checkbox');
            checkboxes.forEach(checkbox => {
              checkbox.checked = false;
              if (!itemId || checkbox.value === itemId) {
                checkbox.checked = true;
              }
            });

            // Reset form fields
            document.getElementById('returnReason').value = '';
            document.getElementById('returnDescription').value = '';
          }

          function closeReturnModal() {
            document.getElementById('returnModal').classList.remove('show');
          }

          async function submitReturnRequest(event) {
            event.preventDefault();

            const orderId = document.getElementById('returnOrderId').value;
            const reason = document.getElementById('returnReason').value;
            const description = document.getElementById('returnDescription').value.trim();
            const selectedItems = Array.from(document.querySelectorAll('input[name="returnItems"]:checked'))
              .map(checkbox => checkbox.value);

            if (!selectedItems.length) {
              showToast('warning', 'Warning', 'Please select at least one item to return');
              return;
            }

            if (!reason) {
              showToast('warning', 'Warning', 'Please select a return reason');
              return;
            }

            try {
              console.log(selectedItems);
              const response = await fetch(`/orders/${orderId}/return`, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({
                  reason,
                  description,
                  items: selectedItems
                })
              });

              const data = await response.json();
              if (data.success) {
                showToast('success', 'Success', 'Return request submitted successfully');
                setTimeout(() => window.location.reload(), 1500);
              } else {
                showToast('error', 'Error', data.message || 'Failed to submit return request');
              }
            } catch (error) {
              console.error('Error submitting return:', error);
              showToast('error', 'Error', 'An error occurred while submitting the return request');
            }
          }

          

         
            // Initialize event listeners for return checkboxes
            document.querySelectorAll('.return-item-checkbox').forEach(checkbox => {
              checkbox.addEventListener('change', function () {
                const selectedItems = Array.from(document.querySelectorAll('input[name="returnItems"]:checked'));
                if (selectedItems.length === 0) {
                  showToast('warning', 'No items selected', 'Please select at least one item to return');
                }
              });
            });
         
  // Open modal with order ID
  function openCancelModal(orderId) {
    document.getElementById('cancelOrderId').value = orderId;

    // Clear selections and reason
    document.querySelectorAll('.cancel-item-checkbox').forEach(cb => cb.checked = false);
    document.getElementById('cancelReason').value = '';
    document.getElementById('cancelDescription').value = '';

    // Get the modal element
    const modalElement = document.getElementById('cancelModal');
    // Initialize modal if not already initialized
    const modal = bootstrap.Modal.getInstance(modalElement) || new bootstrap.Modal(modalElement);
    // Show the modal
    modal.show();
  }

  async function submitCancel(event) {
    event.preventDefault();

    const orderId = document.getElementById('cancelOrderId').value;
    const reason = document.getElementById('cancelReason').value;
    const description = document.getElementById('cancelDescription').value;
    const selectedItemCheckboxes = document.querySelectorAll('.cancel-item-checkbox:checked');
    const cancelItems = Array.from(selectedItemCheckboxes).map(cb => cb.value);
console.log('cancel item',cancelItems);
    if (!reason) {
      showToast('Please select a reason for cancellation.', 'danger');
      return;
    }
    
    if (cancelItems.length === 0) {
      showToast('Please select at least one item to cancel.', 'danger');
      return;
    }

    console.log("Sending cancel request", {
      cancelItems,
      reason,
      description
    });

    try {
      const response = await fetch(`/orders/${orderId}/cancel`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          cancelItems,
          reason,
          description,
          orderId
        })
      });

      const result = await response.json();

      if (response.ok) {
        showToast(result.message || 'Cancelled successfully.', 'success');
        setTimeout(() => location.reload(), 1500);
      } else {
        showToast(result.message || 'Cancellation failed.', 'danger');
      }
    } catch (error) {
      console.error('Cancellation error:', error);
      showToast('Something went wrong. Please try again.', 'danger');
    }

    const modal = bootstrap.Modal.getInstance(document.getElementById('cancelModal'));
    modal.hide();
  }

  function showToast(message, type = 'info') {
    const toast = document.createElement('div');
    toast.className = `alert alert-${type} fade show`;
    toast.textContent = message;

    document.getElementById('toastContainer').appendChild(toast);

    setTimeout(() => {
      toast.classList.remove('show');
      setTimeout(() => toast.remove(), 500);
    }, 3000);
  }

        </script>

        <!-- Bootstrap JS and dependencies -->
        <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>


        

</body>

</html>