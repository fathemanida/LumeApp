<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>LUME - Jewelry</title>
  <!-- Bootstrap CSS -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
  <link href="https://fonts.googleapis.com/css2?family=Aboreto&family=Jost&display=swap" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
  <link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css">
  <style>
    :root {
      --theme-title-font: 'Aboreto', sans-serif;
      --theme-body-font: 'Aboreto', sans-serif;
      --theme-black: #111;
      --theme-gray: #888;
      --theme-highlight: #95951581;
      --theme-border: #e0e0e0;
    }
    html, body {
      height: 100%;
      margin: 0;
      padding: 0;
      background-color: #f0e9e0;
      font-family: 'Aboreto', sans-serif;
      color: var(--theme-black);
    }
   
    .overlay { position: fixed; top: 0; left: 0; width: 100%; height: 100%; background: rgba(0,0,0,0.5); z-index: 999; display: none; }
    .overlay.active { display: block; }
    .container { padding: 2rem; max-width: 1200px; }
    .product-images { background: transparent !important; padding: 0 !important; border-radius: 0 !important; box-shadow: none !important; border: none !important; }
    .main-image { overflow: hidden; position: relative; border-radius: 0; }
    .main-image img { transition: transform 0.3s ease; width: 100%; height: auto; display: block; border-radius: 0 !important; }
    .main-image:hover img { transform: scale(1.05); transform-origin: center center; }
    .thumbnail-images { display: flex; gap: 0.75rem; }
    .thumbnail { cursor: pointer; transition: all 0.3s ease; border-radius: 0 !important; overflow: hidden; border: none !important; }
    .thumbnail:hover { transform: translateY(-3px); box-shadow: 0 4px 8px rgba(41, 29, 14, 0.1); }
    .thumbnail img { width: 80px; height: 80px; object-fit: cover; border-radius: 0 !important; }
    .product-info { background: none !important; box-shadow: none !important; border-radius: 0 !important; padding: 0 !important; font-family: var(--theme-body-font); }
    .product-info h1 { font-family: var(--theme-title-font); font-size: 2.6rem; font-weight: 400; color: var(--theme-black); margin-bottom: 0.5em; letter-spacing: 0; }
    .product-price { font-size: 2rem; color: var(--theme-black); font-family: var(--theme-title-font); margin-bottom: 0.2em; }
    .product-price .strike-price { color: var(--theme-gray); text-decoration: line-through; font-size: 1.3rem; margin-right: 0.5em; }
    .product-price .discounted-price, .product-price .regular-price { color: var(--theme-black); font-size: 2rem; font-weight: 400; }
    .product-info .description, .product-meta, .product-meta strong, .product-info .description p { font-family: 'Jost', Arial, sans-serif !important; font-size: 1.05rem; color: var(--theme-gray); font-weight: 400; letter-spacing: 0; }
    .offer-badges { margin: 1.5em 0 1.5em 0; gap: 0; display: flex; flex-wrap: wrap; gap: 1rem; margin-bottom: 1.2rem; }
    .offer-badge, .offer-badge.category { background: var(--theme-highlight) !important; color: #111 !important; border: none !important; border-radius: 0 !important; font-size: 1.2rem; font-family: var(--theme-body-font); font-weight: 400; box-shadow: none !important; padding: 0.7em 1em; display: flex; align-items: center; margin-bottom: 0.5em; }
    .offer-badge i, .offer-badge.category i { color: #111 !important; font-size: 1.3em; margin-right: 0.7em; }
    .offer-badges .info-text { background: none !important; color: var(--theme-gray) !important; font-size: 1rem; margin: 0.5em 0 0 0; padding: 0; font-size: 0.98rem; color: #7a4c00; margin-top: 0.3rem; margin-left: 0.2rem; display: flex; align-items: center; }
    .offer-badges .info-text .fa-info-circle { margin-right: 0.4em; color: #b88a2b; }
    .status-badge, .status-badge.unavailable, .status-badge.out-of-stock { background: none !important; color: var(--theme-gray) !important; border: none !important; font-size: 1.1rem; margin: 1em 0; padding: 0; box-shadow: none !important; }
    .status-badge i { color: var(--theme-gray) !important; margin-right: 0.5em; }
    .product-meta { color: var(--theme-gray); font-size: 1rem; margin-top: 2em; }
    .product-meta strong { color: var(--theme-black); font-weight: 400; }
    .quantity-section h5 { font-family: var(--theme-body-font); font-size: 1.1rem; color: var(--theme-gray); margin-bottom: 0.5em; font-weight: 400; }
    .input-group { width: 140px; border-radius: 0 !important; border: 1px solid var(--theme-border); background: none; box-shadow: none; overflow: hidden; }
    .input-group button { border: none; background: none; color: var(--theme-black); font-size: 1.5rem; width: 40px; height: 40px; border-radius: 0 !important; box-shadow: none; transition: background 0.2s; }
    .input-group button:hover { background: #f5f5f5; color: var(--theme-black); }
    .input-group input { border: none; background: none; color: var(--theme-black); font-size: 1.2rem; width: 40px; height: 40px; border-radius: 0 !important; box-shadow: none; text-align: center; padding: 0; }
    .action-buttons .btn, .action-buttons .btn-dark, .action-buttons .btn-outline-dark, .action-buttons .btn-outline-danger { border-radius: 0 !important; font-size: 1.1rem; font-family: var(--theme-body-font); box-shadow: none !important; padding: 0.7em 1.2em; }
    .action-buttons .btn-dark { background: #111; color: #fff; border: none; }
    .action-buttons .btn-outline-dark { background: none; color: #111; border: 1px solid #111; }
    .action-buttons .btn-outline-danger { background: none; color: #d00; border: 1px solid #d00; }
   
    .profile-dropdown { position: relative; }
    .profile-dropdown-content { display: none; position: absolute; right: 0; background-color: white; min-width: 160px; box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1); z-index: 1000; border-radius: 4px; padding: 0.5rem 0; }
    .profile-dropdown:hover .profile-dropdown-content { display: block; }
    .profile-dropdown-content a { color: var(--theme-black); padding: 0.75rem 1rem; text-decoration: none; display: block; font-size: 0.9rem; transition: all 0.3s ease; }
    .profile-dropdown-content a:hover { background-color: #f8f5f2; color: #959515; transform: translateX(3px); }
    .profile-dropdown-content a i { margin-right: 0.5rem; width: 20px; text-align: center; }
    .product-status-badge { position: absolute; top: 10px; right: 10px; padding: 5px 10px; border-radius: 4px; font-size: 0.8rem; font-weight: bold; z-index: 2; }
    .image-overlay { position: absolute; top: 0; left: 0; width: 100%; height: 100%; z-index: 1; }
    .unavailable-overlay { background-color: rgba(220, 53, 69, 0.1); }
    .out-of-stock-overlay { background-color: rgba(255, 193, 7, 0.1); }
    .unavailable-img { opacity: 0.5; filter: grayscale(100%); }
    .out-of-stock-img { opacity: 0.7; }
    .notification-section { background: #f8f5f2; padding: 1.5rem; border-radius: 8px; margin-bottom: 1.5rem; transition: all 0.3s ease; }
    .notification-section:hover { transform: translateY(-2px); box-shadow: 0 4px 15px rgba(41, 29, 14, 0.1); }
    .notification-title { font-family: 'Aboreto', cursive; color: var(--theme-black); font-size: 1.2rem; margin-bottom: 1rem; }
    .notification-form { display: none; margin-top: 1rem; padding: 1rem; background: white; border-radius: 6px; box-shadow: 0 2px 10px rgba(41, 29, 14, 0.05); }
    .notification-form.active { display: block; animation: slideDown 0.3s ease; }
    @keyframes slideDown { from { opacity: 0; transform: translateY(-10px); } to { opacity: 1; transform: translateY(0); } }
    .notification-input { border: 1px solid var(--theme-border); border-radius: 4px; padding: 0.75rem 1rem; width: 100%; margin-bottom: 0.75rem; transition: all 0.3s ease; }
    .notification-input:focus { outline: none; border-color: var(--theme-black); box-shadow: 0 0 0 2px rgba(41, 29, 14, 0.1); }
    .notification-btn { background-color: var(--theme-black); color: white; border: none; padding: 0.75rem 1.5rem; border-radius: 4px; transition: all 0.3s ease; width: 100%; }
    .notification-btn:hover { background-color: #959515; transform: translateY(-2px); }
    .notification-info { font-size: 0.85rem; color: #666; margin-top: 0.75rem; line-height: 1.4; }
    .toast { background-color: white; border: 1px solid var(--theme-border); border-radius: 4px; box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15); }
    .toast-header { background-color: var(--theme-black); color: white; border-bottom: 1px solid var(--theme-border); }
    .toast.bg-success .toast-header { background-color: #28a745; }
    .toast.bg-danger .toast-header { background-color: #dc3545; }
    .toast.bg-warning .toast-header { background-color: #ffc107; color: var(--theme-black); }
    .toast-body { color: var(--theme-black); font-family: 'Aboreto', sans-serif; font-size: 0.9rem; padding: 0.75rem; }
    .btn-close { filter: invert(1); }

    @media (max-width: 768px) {
      .action-buttons {
        flex-direction: column !important;
        align-items: center !important;
        gap: 0.75rem;
        width: 100%;
      }
      .action-buttons .btn,
      .action-buttons .btn-dark,
      .action-buttons .btn-outline-dark,
      .action-buttons .btn-outline-danger {
      width: 100%;
        text-align: center;
    }
      .table-responsive {
      width: 100%;
        overflow-x: auto;
    }
      table {
        min-width: 600px;
    }
    }
  </style>
</head>

<body>
<%-include('../partials/user/header.ejs')  %>
  <!-- Toast Container -->
  <div class="position-fixed top-0 end-0 p-3" style="z-index: 1050;">
    <div id="notificationToast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">
      <div class="toast-header">
        <strong class="me-auto" id="toastTitle"></strong>
        <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
      </div>
      <div class="toast-body" id="toastBody"></div>
    </div>
  </div>

  <!-- Overlay -->
  <div class="overlay" id="overlay"></div>


  <div class="container mt-5">
    <div class="row">
      <div class="col-md-6">
        <div class="product-images">
          <div class="main-image mb-3 position-relative">
            <!-- Product Image with Status Overlay -->
            <img src="/uploads/product/<%= product.productImage[0] %>"
                 alt="<%= product.productName %>"
                 class="img-fluid"
                 id="mainProductImage"
                 style="transition: transform 0.2s ease; transform-origin: center center;">
            <!-- Status Badge Overlay -->
            <% if (!product.isListed) { %>
              <div class="product-status-badge bg-danger">
                <i class="fas fa-ban me-1"></i> Unavailable
              </div>
              <div class="image-overlay unavailable-overlay"></div>
            <% } else if (product.quantity <= 0) { %>
              <div class="product-status-badge bg-warning text-dark">
                <i class="fas fa-exclamation-circle me-1"></i> Out of Stock
              </div>
              <div class="image-overlay out-of-stock-overlay"></div>
            <% } %>
          </div>

          <div class="thumbnail-images d-flex gap-2">
            <% product.productImage.forEach((image, index) => { %>
              <div class="thumbnail position-relative" onclick="changeMainImage('<%= image %>')">
                <img src="/uploads/product/<%= image %>"
                     alt="<%= product.productName %> - Image <%= index + 1 %>"
                     class="img-thumbnail <%= !product.isListed ? 'unavailable-img' : (product.quantity <= 0 ? 'out-of-stock-img' : '') %>"
                     style="width: 80px; height: 80px; object-fit: cover;">
              </div>
            <% }); %>
          </div>
        </div>
      </div>

      <div class="col-md-6">
        <div class="product-info">
          <h1 class="mb-3"><%= product.productName %></h1>
          
          <!-- Offer Badges/Box -->
          <% if (product.offer || (product.category && product.category.categoryOffer)) { %>
            <div class="offer-badges">
              <% if (product.offer) { %>
                <span class="offer-badge">
                  <i class="fas fa-tag"></i>
                  <span><%= product.offer.name ? product.offer.name : 'Product Offer' %>:</span>
                  <span class="offer-type">
                    <%= product.offer.discountType === 'percentage' ? (product.offer.discountValue + '% OFF') : ('₹' + product.offer.discountValue + ' OFF') %>
                  </span>
                </span>
              <% } %>
              <% if (product.category && product.category.categoryOffer) { %>
                <span class="offer-badge category">
                  <i class="fas fa-tags"></i>
                  <span><%= product.category.categoryOffer.name ? product.category.categoryOffer.name : 'Category Offer' %>:</span>
                  <span class="offer-type">
                    <%= product.category.categoryOffer.discountType === 'percentage' ? (product.category.categoryOffer.discountValue + '% OFF') : ('₹' + product.category.categoryOffer.discountValue + ' OFF') %>
                  </span>
                </span>
              <% } %>
              <% if (product.offer && product.category && product.category.categoryOffer) { %>
                <span class="info-text">
                  <i class="fas fa-info-circle"></i>
                  The best discount is applied automatically at checkout.
                </span>
              <% } %>
            </div>
          <% } %>

          <!-- Status Badge -->
          <% if (!product.isListed) { %>
            <div class="status-badge unavailable">
              <i class="fas fa-ban"></i> This product is currently unavailable
            </div>
          <% } else if (product.quantity <= 0) { %>
            <div class="status-badge out-of-stock">
              <i class="fas fa-exclamation-circle"></i> This product is temporarily out of stock
            </div>
          <% } %>

          <div class="product-price">
            <% if (product.offer) { %>
              <% if (product.salePrice && product.salePrice < product.regularPrice) { %>
                <span class="strike-price">₹<%= product.salePrice.toLocaleString() %></span>
              <% } else { %>
                <span class="strike-price">₹<%= product.regularPrice.toLocaleString() %></span>
              <% } %>
              <span class="discounted-price">
                ₹<%= product.offer.discountType === 'percentage' 
                  ? (product.salePrice ? (product.salePrice - (product.salePrice * product.offer.discountValue / 100)).toFixed(2)
                    : (product.regularPrice - (product.regularPrice * product.offer.discountValue / 100)).toFixed(2))
                  : (product.salePrice ? (product.salePrice - product.offer.discountValue).toFixed(2)
                    : (product.regularPrice - product.offer.discountValue).toFixed(2)) %>
              </span>
            <% } else if (product.salePrice && product.salePrice < product.regularPrice) { %>
              <span class="strike-price">₹<%= product.regularPrice.toLocaleString() %></span>
              <span class="discounted-price">₹<%= product.salePrice.toLocaleString() %></span>
            <% } else { %>
              <span class="regular-price">₹<%= product.regularPrice.toLocaleString() %></span>
            <% } %>
          </div>

          <div class="description">
            <p><%= product.description %></p>
          </div>

          <% if (product.isListed && product.quantity > 0) { %>
            <% if (product.sizes && product.sizes.length > 0) { %>
              <div class="size-section mb-4">
                <h5>Select Size</h5>
                <div class="size-options d-flex gap-2">
                  <% product.sizes.forEach(size => { %>
                    <button class="btn btn-outline-dark size-btn"
                            onclick="selectSize(this, '<%= size.size %>')"
                            data-size="<%= size.size %>">
                      <%= size.size %>
                    </button>
                  <% }); %>
                </div>
              </div>
            <% } %>

            <div class="quantity-section mb-4">
              <h5>Quantity</h5>
              <div class="input-group" style="width: 150px;">
                <button class="btn btn-outline-secondary" onclick="decrementQuantity()">-</button>
                <input type="number" class="form-control text-center" id="quantity" value="1" min="1" max="<%= product.quantity %>">
                <button class="btn btn-outline-secondary" onclick="incrementQuantity()">+</button>
              </div>
            </div>

            <div class="action-buttons mb-4 d-flex gap-2">
              <button class="btn btn-dark flex-grow-1" onclick="event.stopPropagation(); addToCart('<%= product._id %>')">Add to Cart</button>
              <button class="btn btn-outline-dark" onclick="event.stopPropagation(); buyNow('<%= product._id%>')">Buy Now</button>
              <button class="btn btn-outline-danger" onclick="event.stopPropagation(); toggleWishlist(this, '<%= product._id %>')">
                <i class="far fa-heart"></i>
              </button>
            </div>
          <% } else { %>
            <div class="notification-section">
              <div class="notification-title">
                <i class="fas fa-bell me-2"></i>
                <%= !product.isListed ? 'Notify When Available' : 'Notify When Back in Stock' %>
              </div>
              <button class="notification-btn" onclick="showNotifyForm()">
                <i class="fas fa-bell me-2"></i>
                <%= !product.isListed ? 'Notify Me When Available' : 'Notify Me When Back in Stock' %>
              </button>
              <div class="notification-form" id="notifyFormContainer">
                <input type="email"
                       class="notification-input"
                       id="notifyEmail"
                       placeholder="Enter your email address"
                       required>
                <button class="notification-btn" onclick="subscribeForNotification('<%= product._id %>')">
                  Subscribe for Notification
                </button>
                <p class="notification-info">
                  <i class="fas fa-info-circle me-1"></i>
                  We'll send you a one-time notification when this product becomes available.
                </p>
              </div>
            </div>
          <% } %>

          <div class="product-meta">
            <p><strong>Category:</strong> <%= product.category.name %></p>
            <p><strong>Product Code:</strong> <%= product.productCode %></p>
            <p><strong>Availability:</strong>
              <% if (!product.isListed) { %>
                <span class="text-danger">Unavailable</span>
              <% } else if (product.quantity > 0) { %>
                <% if (product.quantity > 9) { %>
                  <span class="text-success">In Stock (9+ available)</span>
                <% } else { %>
                  <span class="text-success">In Stock (<%= product.quantity %> available)</span>
                <% } %>
              <% } else { %>
                <span class="text-warning">Out of Stock</span>
              <% } %>
            </p>
          </div>
        </div>
      </div>
    </div>

    <!-- Related Products -->
    <% if (relatedProducts && relatedProducts.length > 0) { %>
      <div class="related-products mt-5">
        <h3 class="mb-4" style="font-family: 'Aboreto', serif; font-size:2rem; color:#444; letter-spacing:1px;">You May Also Like</h3>
        <div class="row row-cols-2 row-cols-sm-2 row-cols-md-3 row-cols-lg-4 g-4" id="relatedProductsGrid">
          <% relatedProducts.forEach(relatedProduct => { %>
            <div class="col product-item">
              <div class="product-card card text-center h-100 position-relative overflow-hidden" style="box-shadow:none;border-radius:0;background:transparent;">
                <a href="/product-details?id=<%= relatedProduct._id %>" class="text-decoration-none">
                  <% if (relatedProduct.isListed && relatedProduct.offer) { %>
                    <span class="offer-badge" style="position:absolute;bottom:15px;right:15px;background-color:#603a10;color:white;font-family:'Jost',sans-serif;font-size:0.65rem;padding:0.3rem 0.6rem;border-radius:0;text-transform:uppercase;z-index:2;">
                      <% if (relatedProduct.offer.discountType === 'percentage') { %>
                        <%= relatedProduct.offer.discountValue %>% OFF
                      <% } else { %>
                        ₹<%= relatedProduct.offer.discountValue %> OFF
                      <% } %>
                    </span>
                  <% } %>
                  <% if (relatedProduct.isListed && relatedProduct.new) { %>
                    <span class="new-badge" style="position:absolute;top:15px;left:15px;background-color:#A9BA9D;color:white;font-family:'Jost',sans-serif;font-size:0.65rem;padding:0.3rem 0.6rem;border-radius:0;text-transform:uppercase;z-index:2;">New</span>
                  <% } %>
                  <div class="product-image-container" style="position:relative;width:100%;aspect-ratio:1;overflow:hidden;border-radius:0;background:transparent;">
                    <img src="/uploads/product/<%= relatedProduct.productImage[0] %>"
                         class="product-img <%= !relatedProduct.isListed ? 'unlisted-img' : (relatedProduct.quantity <= 0 ? 'out-of-stock-img' : '') %>"
                         alt="<%= relatedProduct.productName %>"
                         style="width:100%;height:100%;object-fit:cover;transition:opacity 0.3s ease;border-radius:0;position:relative;z-index:1;">
                    <img src="/uploads/product/<%= relatedProduct.productImage[1] %>"
                         class="product-img-secondary"
                         alt="<%= relatedProduct.productName %> - Secondary View"
                         style="position:absolute;top:0;left:0;width:100%;height:100%;object-fit:cover;opacity:0;transition:opacity 0.3s ease;border-radius:0;z-index:2;">
                  </div>
                  <style>
                 #relatedProductsGrid .product-image-container {
  position: relative;
  overflow: hidden;
  border-radius: 0 !important;
  box-shadow: none !important;
}

#relatedProductsGrid .product-img,
#relatedProductsGrid .product-img-secondary {
  width: 100%;
  height: 100%;
  object-fit: cover;
  border-radius: 0 !important;
  box-shadow: none !important;
  transition: opacity 0.3s ease;
  display: block;
}

#relatedProductsGrid .product-img {
  opacity: 1;
  position: relative;
  z-index: 1;
}

#relatedProductsGrid .product-img-secondary {
  position: absolute;
  top: 0;
  left: 0;
  opacity: 0;
  z-index: 2;
  pointer-events: none;
}

#relatedProductsGrid .product-image-container:hover .product-img {
  opacity: 0;
}

#relatedProductsGrid .product-image-container:hover .product-img-secondary {
  opacity: 1;
}

                  </style>
                  <% if (!relatedProduct.isListed) { %>
                    <div class="unlisted-overlay" style="position:absolute;top:0;left:0;width:100%;height:100%;background:rgba(255,255,255,0.7);z-index:1;display:flex;align-items:center;justify-content:center;border-radius:0;box-shadow:none;">
                      <span class="unlisted-badge" style="background:#5b0a0a;color:white;padding:5px 10px;border-radius:0;font-weight:lighter;font-family:'Jost',sans-serif;font-size:0.9rem;">Unlisted</span>
                    </div>
                  <% } %>
                  <% if (relatedProduct.quantity <= 0 && relatedProduct.isListed) { %>
                    <div class="out-of-stock-overlay" style="position:absolute;top:10px;left:10px;background-color:#dc3545;color:white;padding:5px 10px;border-radius:0;font-size:0.65rem;font-weight:bold;z-index:2;box-shadow:none !important;font-family:'Jost',sans-serif;">Out of Stock</div>
                  <% } %>
                  <div class="product-info" style="padding:1rem 0;text-align:center;background:transparent;">
                    <p class="product-title card-title <%= !relatedProduct.isListed ? 'text-muted' : '' %>" style="font-family:'Aboreto',cursive;font-size:1rem;color:#1a0f0a;margin-bottom:0.5rem;font-weight:500;letter-spacing:0.5px;">
                      <%= relatedProduct.productName %>
                    </p>
                    <% if (relatedProduct.category?.name) { %>
                      <p class="product-category" style="color:#A9BA9D;font-size:0.8rem;margin-bottom:0.5rem;text-transform:uppercase;letter-spacing:1px;font-family:'Jost',sans-serif;">
                        <%= relatedProduct.category.name %>
                      </p>
                    <% } %>
                    <p class="product-price" style="font-weight:500;margin-bottom:1rem;display:flex;gap:0.5rem;align-items:center;justify-content:center;">
                      <% if (relatedProduct.offer) { %>
                      <% if (relatedProduct.salePrice && relatedProduct.salePrice < relatedProduct.regularPrice) { %>
                          <span class="strike-price" style="color:#666;text-decoration:line-through;font-size:0.9rem;">₹<%= relatedProduct.salePrice.toLocaleString() %></span>
                      <% } else { %>
                          <span class="strike-price" style="color:#666;text-decoration:line-through;font-size:0.9rem;">₹<%= relatedProduct.regularPrice.toLocaleString() %></span>
                        <% } %>
                        <span class="discounted-price" style="color:#e63946;font-weight:600;font-size:1.1rem;">
                          ₹<%= relatedProduct.offer.discountType === 'percentage' 
                            ? (relatedProduct.salePrice ? (relatedProduct.salePrice - (relatedProduct.salePrice * relatedProduct.offer.discountValue / 100)).toFixed(2)
                              : (relatedProduct.regularPrice - (relatedProduct.regularPrice * relatedProduct.offer.discountValue / 100)).toFixed(2))
                            : (relatedProduct.salePrice ? (relatedProduct.salePrice - relatedProduct.offer.discountValue).toFixed(2)
                              : (relatedProduct.regularPrice - relatedProduct.offer.discountValue).toFixed(2)) %>
                        </span>
                      <% } else if (relatedProduct.salePrice && relatedProduct.salePrice < relatedProduct.regularPrice) { %>
                        <span class="strike-price" style="color:#666;text-decoration:line-through;font-size:0.9rem;">₹<%= relatedProduct.regularPrice.toLocaleString() %></span>
                        <span class="discounted-price" style="color:#e63946;font-weight:600;font-size:1.1rem;">₹<%= relatedProduct.salePrice.toLocaleString() %></span>
                      <% } else { %>
                        <span class="regular-price" style="color:#666;text-decoration:line-through;font-size:0.9rem;">₹<%= relatedProduct.regularPrice.toLocaleString() %></span>
                      <% } %>
                    </p>
                  </div>
                </a>
              </div>
            </div>
          <% }); %>
        </div>
      </div>
    <% } %>
  </div>

  <!-- Footer -->
  <%- include("../../views/partials/user/fooret.ejs") %>

  <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.8/dist/umd/popper.min.js"
          integrity="sha384-I7E8VVD/ismYTF4hNIPjVp/Zjvgyol6VFvRkX/vR+Vc4jQkC+hVqc2pM8ODewa9r"
          crossorigin="anonymous"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.min.js"
          integrity="sha384-BBtl+eGJRgqQAUMxJ7pMwbEyER4l1g+O15P+16Ep7Q9Q+zqX6gSbd85u4mG4QzX+"
          crossorigin="anonymous"></script>
  <!-- Keep SweetAlert2 for the authentication prompt -->
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/toastify-js"></script>
  <script>
    function showToast({ title, message, type, timer = 2000 }) {
      const toastEl = document.getElementById('notificationToast');
      const toastTitle = document.getElementById('toastTitle');
      const toastBody = document.getElementById('toastBody');
      
      toastTitle.textContent = title;
      toastBody.textContent = message;
      
      toastEl.classList.remove('bg-success', 'bg-danger', 'bg-warning');
      if (type === 'success') {
        toastEl.classList.add('bg-success', 'text-white');
        toastTitle.classList.add('text-white');
      } else if (type === 'error') {
        toastEl.classList.add('bg-danger', 'text-white');
        toastTitle.classList.add('text-white');
      } else if (type === 'warning') {
        toastEl.classList.add('bg-warning', 'text-dark');
        toastTitle.classList.add('text-dark');
      }
      
      const toast = new bootstrap.Toast(toastEl, {
        delay: timer
      });
      toast.show();
    }
    </script>
    <% if (user && user.isBlocked) { %>
      <script>
      showToast({
        title: 'Account Blocked',
        message: 'Your account has been blocked by the administrator. Please contact support for assistance.',
        type: 'error',
        timer: false
      });
      setTimeout(() => {
        window.location.href = '/logout';
      }, 3000);
      </script>
    <% } %>
    <script>

    const imageContainer = document.querySelector('.main-image');
    const image = document.getElementById('mainProductImage');

    imageContainer.addEventListener('mousemove', function (e) {
      const rect = image.getBoundingClientRect();
      const x = e.clientX - rect.left;
      const y = e.clientY - rect.top;

      const xPercent = (x / rect.width) * 100;
      const yPercent = (y / rect.height) * 100;

      image.style.transformOrigin = `${xPercent}% ${yPercent}%`;
      image.style.transform = 'scale(2)';
    });

    imageContainer.addEventListener('mouseleave', function () {
      image.style.transform = 'scale(1)';
      image.style.transformOrigin = 'center center';
    });

    const sidebar = document.getElementById('sidebar');
    const overlay = document.getElementById('overlay');
    const sidebarToggle = document.getElementById('sidebarToggle');
    const searchToggle = document.getElementById('searchToggle');
    const searchContainer = document.getElementById('searchContainer');

    sidebarToggle.addEventListener('click', () => {
      sidebar.classList.toggle('open');
      overlay.classList.toggle('active');
    });

    overlay.addEventListener('click', () => {
      sidebar.classList.remove('open');
      overlay.classList.remove('active');
    });

    searchToggle.addEventListener('click', (e) => {
      e.preventDefault();
      searchContainer.classList.toggle('active');
      if (searchContainer.classList.contains('active')) {
        searchContainer.querySelector('input').focus();
      }
    });

    document.addEventListener('click', (e) => {
      if (!searchContainer.contains(e.target) && e.target !== searchToggle) {
        searchContainer.classList.remove('active');
      }
    });

    function toggleCategory(element) {
      const items = element.nextElementSibling;
      const icon = element.querySelector('i');

      items.classList.toggle('open');

      if (items.classList.contains('open')) {
        icon.classList.remove('fa-chevron-down');
        icon.classList.add('fa-chevron-up');
      } else {
        icon.classList.remove('fa-chevron-up');
        icon.classList.add('fa-chevron-down');
      }
    }

    document.querySelectorAll('.sidebar-item').forEach(item => {
      item.addEventListener('click', function () {
        console.log('Navigating to:', this.textContent);
        sidebar.classList.remove('open');
        overlay.classList.remove('active');
      });
    });

    async function toggleWishlist(button, productId) {
      try {
        const response = await fetch('/wishlist/add', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({ productId })
        });

        const data = await response.json();

        if (data.success) {
          const icon = button.querySelector('i');
          icon.classList.toggle('far');
          icon.classList.toggle('fas');

          Toastify({
            text: icon.classList.contains('fas') ? "Added to Wishlist " : "Removed from Wishlist ",
            duration: 3000,
            gravity: "top",
            position: "right",
            backgroundColor: icon.classList.contains('fas') ? "#a9ba9d" : "#f44336",
            stopOnFocus: true
          }).showToast();
        } else {
          Toastify({
            text: data.message || "Something went wrong",
            duration: 3000,
            gravity: "top",
            position: "right",
            backgroundColor: "#f44336"
          }).showToast();
        }
      } catch (err) {
        console.error('Wishlist error:', err);
        Toastify({
          text: "Server error. Try again later.",
          duration: 3000,
          gravity: "top",
          position: "right",
          backgroundColor: "#f44336"
        }).showToast();
      }
    }

    let selectedSize = null;
    const quantityInput = document.getElementById('quantity');

    function changeMainImage(imagePath) {
      document.getElementById('mainProductImage').src = `/uploads/product/${imagePath}`;
    }

    function selectSize(button, size) {
      document.querySelectorAll('.size-btn').forEach(btn => {
        btn.classList.remove('active');
      });

      button.classList.add('active');
      selectedSize = size;
    }

 function incrementQuantity() {
  const quantityInput = document.getElementById('quantity');
  const max = parseInt(quantityInput.getAttribute('max'));
  const current = parseInt(quantityInput.value);
  if (current < max) {
    quantityInput.value = current + 1;
  } else {
    showToast({
      title: 'Maximum Quantity Reached',
      message: `You can only add up to ${max} items`,
      type: 'warning'
    });
  }
}

function decrementQuantity() {
  const quantityInput = document.getElementById('quantity');
  const current = parseInt(quantityInput.value);
  if (current > 1) {
    quantityInput.value = current - 1;
  } else {
    showToast({
      title: 'Minimum Quantity',
      message: 'Quantity cannot be less than 1',
      type: 'warning'
    });
  }
}


    quantityInput.addEventListener('input', function() {
      const max = parseInt(this.getAttribute('max'));
      const value = parseInt(this.value);
      
      if (isNaN(value) || value < 1) {
        this.value = 1;
      } else if (value > max) {
        this.value = max;
        showToast({
          title: 'Maximum Quantity Reached',
          message: `You can only add up to ${max} items`,
          type: 'warning'
        });
      }
    });

    quantityInput.addEventListener('keypress', function(e) {
      if (e.key === '-' || e.key === 'e' || e.key === '+' || e.key === '.') {
        e.preventDefault();
      }
    });

    function addToCart(productId) {
      const addToCartBtn = document.querySelector('.btn-dark');
      const originalText = addToCartBtn.innerHTML;
      addToCartBtn.innerHTML = '<span class="spinner-border spinner-border-sm" role="status"></span> Adding...';
      addToCartBtn.disabled = true;

      const quantity = parseInt(document.getElementById('quantity').value);
      const sizeButtons = document.querySelectorAll('.size-btn');
      let selectedSize = null;

      if (quantity > 6) {
        showToast({
          title: 'Maximum Quantity Limit',
          message: 'You can only add up to 6 items of this product',
          type: 'warning'
        });
        addToCartBtn.innerHTML = originalText;
        addToCartBtn.disabled = false;
        return;
      }

      if (sizeButtons.length > 0) {
        const activeSizeBtn = document.querySelector('.size-btn.active');
        if (!activeSizeBtn) {
          showToast({
            title: 'Size Required',
            message: 'Please select a size before adding to cart',
            type: 'warning'
          });
          addToCartBtn.innerHTML = originalText;
          addToCartBtn.disabled = false;
          return;
        }
        selectedSize = activeSizeBtn.dataset.size;
      }

      

      fetch('/check-auth')
        .then(response => response.json())
        .then(authData => {
          if (!authData.isAuthenticated) {
            showToast({
              title: 'Login Required',
              message: 'Please login or signup to add items to cart',
              type: 'warning',
              timer: 5000
            });
            setTimeout(() => {
              Swal.fire({
                icon: 'info',
                title: 'Login Required',
                text: 'Please login or signup to add items to cart',
                showCancelButton: true,
                confirmButtonText: 'Login',
                cancelButtonText: 'Signup',
                confirmButtonColor: '#291d0e',
                cancelButtonColor: '#314216'
              }).then((result) => {
                if (result.isConfirmed) {
                  window.location.href = '/login?redirect=' + encodeURIComponent(window.location.pathname);
                } else if (result.dismiss === Swal.DismissReason.cancel) {
                  window.location.href = '/signup?redirect=' + encodeURIComponent(window.location.pathname);
                }
              });
            }, 1000);
            return Promise.reject('Authentication required');
          }

          return fetch('/cart/add', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
              'Accept': 'application/json'
            },
            body: JSON.stringify({
              productId: productId,
              quantity: quantity,
              size: selectedSize
            })
          });
        })
        .then(response => {
          if (!response.ok) {
            return response.json().then(err => Promise.reject(err));
          }
          return response.json();
        })
        .then(data => {
          const cartCount = document.querySelector('.cart-count');
          if (cartCount) {
            cartCount.textContent = data.cartCount || (parseInt(cartCount.textContent) + quantity);
          }

          showToast({
            title: 'Added to Cart',
            message: data.message || 'Item added to cart successfully',
            type: 'success',
            timer: 1500
          });
        })
        .catch(error => {
          if (error === 'Authentication required') {
            return;
          }
          console.error('Cart error:', error);
          showToast({
            title: 'Error',
            message: error.message || 'Failed to add item to cart',
            type: 'error'
          });
        })
        .finally(() => {
          addToCartBtn.innerHTML = originalText;
          addToCartBtn.disabled = false;
        });
    }

   function buyNow(productId) {
  const buyNowBtn = document.querySelector('.btn-outline-dark');
  const originalText = buyNowBtn.innerHTML;
  buyNowBtn.innerHTML = '<span class="spinner-border spinner-border-sm" role="status"></span> Processing...';
  buyNowBtn.disabled = true;

  const quantity = parseInt(document.getElementById('quantity').value);
  const sizeButtons = document.querySelectorAll('.size-btn');
  let selectedSize = null;

  // Validate quantity
  if (quantity > 6) {
    showToast({
      title: 'Maximum Quantity Limit',
      message: 'You can only purchase up to 6 items of this product',
      type: 'warning'
    });
    buyNowBtn.innerHTML = originalText;
    buyNowBtn.disabled = false;
    return;
  }

  if (sizeButtons.length > 0) {
    const activeSizeBtn = document.querySelector('.size-btn.active');
    if (!activeSizeBtn) {
      showToast({
        title: 'Size Required',
        message: 'Please select a size before proceeding',
        type: 'warning'
      });
      buyNowBtn.innerHTML = originalText;
      buyNowBtn.disabled = false;
      return;
    }
    selectedSize = activeSizeBtn.dataset.size;
  }

  fetch('/check-auth')
    .then(response => response.json())
    .then(authData => {
      if (!authData.isAuthenticated) {
        showToast({
          title: 'Login Required',
          message: 'Please login or signup to proceed with purchase',
          type: 'warning',
          timer: 5000
        });
        setTimeout(() => {
          Swal.fire({
            icon: 'info',
            title: 'Login Required',
            text: 'Please login or signup to proceed with purchase',
            showCancelButton: true,
            confirmButtonText: 'Login',
            cancelButtonText: 'Signup',
            confirmButtonColor: '#291d0e',
            cancelButtonColor: '#314216'
          }).then((result) => {
            if (result.isConfirmed) {
              window.location.href = '/login?redirect=' + encodeURIComponent(window.location.pathname);
            } else if (result.dismiss === Swal.DismissReason.cancel) {
              window.location.href = '/signup?redirect=' + encodeURIComponent(window.location.pathname);
            }
          });
        }, 1000);
        return Promise.reject('Authentication required');
      }

      return fetch('/cart/add', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Accept': 'application/json'
        },
        body: JSON.stringify({
          productId: productId,
          quantity: quantity,
          size: selectedSize,
          buyNow: true 
        })
      });
    })
    .then(response => {
      if (!response.ok) {
        return response.json().then(err => Promise.reject(err));
      }
      return response.json();
    })
    .then(data => {
      const cartCount = document.querySelector('.cart-count');
      if (cartCount) {
        cartCount.textContent = data.cartCount || (parseInt(cartCount.textContent) + quantity);
      }

window.location.href = '/checkout?buynow=true';
    })
    .catch(error => {
      if (error === 'Authentication required') {
        return;
      }
      console.error('Buy Now error:', error);
      showToast({
        title: 'Error',
        message: error.message || 'Failed to process your request',
        type: 'error'
      });
    })
    .finally(() => {
      buyNowBtn.innerHTML = originalText;
      buyNowBtn.disabled = false;
    });
}

    function showNotifyForm() {
      const form = document.getElementById('notifyFormContainer');
      form.classList.add('active');
      document.getElementById('notifyEmail').focus();
    }

    function subscribeForNotification(productId) {
      const emailInput = document.getElementById('notifyEmail');
      const email = emailInput.value.trim();
      
      if (!validateEmail(email)) {
        showToast({
          title: 'Invalid Email',
          message: 'Please enter a valid email address',
          type: 'error'
        });
        emailInput.focus();
        return;
      }

      const submitBtn = document.querySelector('#notifyFormContainer button');
      const originalText = submitBtn.innerHTML;
      submitBtn.innerHTML = '<span class="spinner-border spinner-border-sm" role="status"></span> Sending...';
      submitBtn.disabled = true;

      fetch('/api/notify-me', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          productId: productId,
          email: email
        })
      })
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          showToast({
            title: 'Success!',
            message: "You'll be notified when this product is back in stock",
            type: 'success'
          });
          document.getElementById('notifyFormContainer').style.display = 'none';
          emailInput.value = '';
        } else {
          showToast({
            title: 'Error',
            message: data.message || 'Failed to subscribe for notification',
            type: 'error'
          });
        }
      })
      .catch(error => {
        console.error('Error:', error);
        showToast({
          title: 'Error',
          message: 'An error occurred. Please try again later.',
          type: 'error'
        });
      })
      .finally(() => {
        submitBtn.innerHTML = originalText;
        submitBtn.disabled = false;
      });
    }

    function validateEmail(email) {
      const re = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
      return re.test(email);
    }
  </script>
</body>
</html>