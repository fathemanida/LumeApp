<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Checkout - LUME</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Aboreto&family=Jost&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css">
    <style>
    :root {
      --soft-beige: #D4B996;
      --muted-green: #657858;
      --light-bg: #f8f5f2;
      --border-color: #e0d8cc;
      --offer-red: #e63946;
      --dark-text: #2c1810;
      --darker-text: #1a0f0a;
    }

    html, body {
      height: 100%;
      margin: 0;
      padding: 0;
      background-color: #f0e9e0;
      font-family: 'Jost', sans-serif;
      color: var(--dark-text);
    }

    /* Desktop Layout - Large */
    @media (min-width: 992px) {
      .checkout-grid {
        display: grid;
        grid-template-columns: 1fr 400px;
        gap: 3rem;
      }
      
      .checkout-section {
        padding: 2.5rem;
        margin-bottom: 2rem;
      }
      
      .order-item-img {
        width: 120px;
        height: 120px;
      }
      
      .section-title {
        font-size: 1.5rem;
      }
      
      .checkout-title {
        font-size: 2.5rem;
      }
      
      .address-details {
        padding: 2rem;
      }
    }

    /* Mobile Layout - Compact */
    @media (max-width: 991px) {
      .checkout-grid {
        display: flex;
        flex-direction: column;
        gap: 1.5rem;
      }
      
      .checkout-section {
        padding: 1.5rem;
        margin-bottom: 1.5rem;
      }
      
      .order-item {
        flex-direction: column;
        align-items: flex-start;
      }
      
      .order-item-img {
        width: 100%;
        height: auto;
        max-height: 150px;
        margin-bottom: 1rem;
      }
      
      .section-title {
        font-size: 1.3rem;
      }
      
      .checkout-title {
        font-size: 1.8rem;
        margin-bottom: 1.5rem;
      }
      
      .address-details {
        padding: 1.25rem;
      }
      
      .address-actions {
        flex-direction: column;
        gap: 0.75rem;
      }
      
      .address-btn, .set-default-btn {
        width: 100%;
        justify-content: center;
      }
    }

    /* Common Styles */
    .navbar {
      background: white;
      border-bottom: 1px solid var(--border-color);
      padding: 1.5rem;
    }

    .brand {
      font-family: 'Aboreto', cursive;
      font-size: 1.8rem;
      letter-spacing: 1.5px;
      text-transform: uppercase;
      color: var(--darker-text);
      cursor: pointer;
    }

    .nav-link {
      color: var(--darker-text);
      font-family: 'Jost', sans-serif;
      font-size: 1rem;
      transition: color 0.3s ease;
    }

    .nav-link:hover {
      color: var(--muted-green);
      font-weight: 500;
    }

    .icon-link {
      color: var(--darker-text);
      transition: color 0.3s ease;
      font-size: 1.2rem;
    }

    .checkout-title {
      font-family: 'Aboreto', cursive;
      color: var(--darker-text);
      letter-spacing: 1.5px;
      text-transform: uppercase;
      font-weight: 400;
      margin-bottom: 2rem;
    }

    .checkout-section {
      background: transparent;
      border: none;
      border-radius: 0;
      box-shadow: none;
      border-bottom: 1px solid var(--border-color);
    }

    .section-title {
      font-family: 'Aboreto', cursive;
      color: var(--darker-text);
      letter-spacing: 1.5px;
      text-transform: uppercase;
      font-weight: 400;
      margin-bottom: 1.5rem;
      padding-bottom: 1rem;
      border-bottom: 1px solid var(--border-color);
    }

    .order-item {
      display: flex;
      align-items: center;
      margin-bottom: 1rem;
      background: transparent;
      border-radius: 0;
      border: 1px solid var(--border-color);
      transition: all 0.3s ease;
    }

    .order-item:hover {
      transform: translateY(-2px);
    }

    .order-item-img {
      object-fit: cover;
      border-radius: 0;
      margin-right: 1.5rem;
    }

    .order-item-details {
      flex: 1;
    }

    .order-item-name {
      font-family: 'Aboreto', cursive;
      margin-bottom: 0.5rem;
      color: var(--darker-text);
    }

    .order-item-info {
      color: var(--dark-text);
      font-size: 0.95rem;
      margin-bottom: 0.25rem;
    }

    .order-item-price {
      font-weight: 500;
      color: var(--darker-text);
      font-size: 1.05rem;
    }

    .text-decoration-line-through {
      text-decoration: line-through;
      opacity: 0.7;
    }

    .text-success {
      color: var(--muted-green) !important;
    }

    .address-details {
      font-size: 0.95rem;
      color: var(--dark-text);
      margin-bottom: 1rem;
      background: var(--light-bg);
      border-radius: 0;
      border: 1px solid var(--border-color);
      transition: all 0.3s ease;
    }

    .default-address {
      border: 2px solid var(--muted-green);
      background: rgba(169, 186, 157, 0.1);
    }

    .default-badge {
      background: var(--muted-green);
      color: white;
      padding: 0.3rem 0.6rem;
      border-radius: 0;
      font-size: 0.8rem;
      margin-bottom: 0.75rem;
      display: inline-block;
      text-transform: uppercase;
      letter-spacing: 0.5px;
    }

    .address-actions {
      display: flex;
      gap: 1rem;
      margin-top: 1rem;
    }

    .address-btn {
      display: flex;
      align-items: center;
      gap: 0.5rem;
      padding: 0.75rem 1.25rem;
      background: var(--light-bg);
      border: 1px solid var(--border-color);
      border-radius: 0;
      color: var(--darker-text);
      font-family: 'Jost', sans-serif;
      font-size: 0.95rem;
      text-decoration: none;
      transition: all 0.3s ease;
      cursor: pointer;
    }

    .address-btn:hover {
      background: var(--darker-text);
      color: white;
      transform: translateY(-1px);
    }

    .set-default-btn {
      background: var(--darker-text);
      color: white;
      border: none;
      padding: 0.75rem 1.25rem;
      border-radius: 0;
      font-family: 'Jost', sans-serif;
      font-size: 0.95rem;
      transition: all 0.3s ease;
      cursor: pointer;
    }

    .set-default-btn:hover {
      background: var(--muted-green);
      transform: translateY(-1px);
    }

    .delivery-info {
      font-size: 0.95rem;
      color: var(--dark-text);
      margin-bottom: 1rem;
      padding: 1.5rem;
      background: var(--light-bg);
      border-radius: 0;
      border: 1px solid var(--border-color);
    }

    .delivery-info i {
      color: var(--soft-beige);
      margin-right: 0.5rem;
    }

    .order-summary {
      position: sticky;
      top: 2rem;
    }

    .summary-row {
      display: flex;
      justify-content: space-between;
      margin-bottom: 1rem;
      color: var(--dark-text);
      font-size: 1rem;
    }

    .summary-total {
      font-weight: 600;
      font-size: 1.3rem;
      color: var(--darker-text);
      margin-top: 1rem;
      padding-top: 1rem;
      border-top: 1px solid var(--border-color);
    }

    .checkout-btn {
      background: var(--darker-text);
      border: none;
      color: white;
      font-family: 'Jost', sans-serif;
      font-size: 1.1rem;
      padding: 1.1rem;
      border-radius: 0;
      width: 100%;
      margin-top: 1.5rem;
      transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
      text-transform: uppercase;
      letter-spacing: 1px;
    }

    .checkout-btn:hover:not(:disabled) {
      background: var(--muted-green);
      transform: translateY(-2px);
    }

    .empty-cart {
      text-align: center;
      padding: 3rem;
      background: transparent;
      border-radius: 0;
    }

    .empty-cart-icon {
      font-size: 4rem;
      color: var(--soft-beige);
      margin-bottom: 1.5rem;
    }

    .empty-cart-text {
      font-family: 'Aboreto', cursive;
      color: var(--darker-text);
      font-size: 1.8rem;
      margin-bottom: 1rem;
    }

    .empty-cart-subtext {
      color: var(--dark-text);
      margin-bottom: 2rem;
      font-size: 1.1rem;
    }

    .continue-shopping-btn {
      display: inline-flex;
      align-items: center;
      gap: 0.75rem;
      padding: 1.2rem 2.5rem;
      background: var(--darker-text);
      color: white;
      border: none;
      border-radius: 0;
      font-family: 'Jost', sans-serif;
      font-size: 1.1rem;
      font-weight: 500;
      text-decoration: none;
      transition: all 0.3s ease;
      text-transform: uppercase;
      letter-spacing: 0.5px;
    }

    .continue-shopping-btn:hover {
      background: var(--muted-green);
      transform: translateY(-2px);
    }

    .main-content-container {
      padding: 3rem;
    }

    @media (max-width: 768px) {
      .main-content-container {
        padding: 1.5rem;
      }
      
      .navbar {
        flex-direction: column;
        padding: 1rem;
      }
      
      .brand {
        margin-bottom: 1rem;
        font-size: 1.5rem;
      }
      
      .empty-cart {
        padding: 2rem;
      }
      
      .empty-cart-icon {
        font-size: 3rem;
      }
      
      .empty-cart-text {
        font-size: 1.5rem;
      }
      
      .empty-cart-subtext {
        font-size: 1rem;
      }
      
      .continue-shopping-btn {
        padding: 1rem 2rem;
        font-size: 1rem;
      }
    }

    @media (max-width: 576px) {
      .main-content-container {
        padding: 1rem;
      }
      
      .checkout-section {
        padding: 1.25rem;
      }
      
      .empty-cart {
        padding: 1.5rem;
      }
      
      .empty-cart-icon {
        font-size: 2.5rem;
      }
      
      .empty-cart-text {
        font-size: 1.3rem;
      }
    }
    </style>
</head>
<body>
    <nav class="navbar">
        <div class="brand">LUME</div>
        <ul class="nav-links">
            <li><a href="/" class="nav-link">Home</a></li>
            <li><a href="/shopAll" class="nav-link">Shop All</a></li>
            <li><a href="/featured" class="nav-link">Featured</a></li>
            <li><a href="/new-arrivals" class="nav-link">New Arrivals</a></li>
        </ul>
        <ul class="icon-links">
            <li><a href="/wishlist" class="icon-link"><i class="fas fa-heart"></i></a></li>
            <li><a href="/cart" class="icon-link"><i class="fas fa-shopping-cart"></i></a></li>
            <li>
                <div class="profile-dropdown">
                    <a href="#" class="icon-link"><i class="far fa-user"></i></a>
                    <div class="profile-dropdown-content">
                        <% if (locals.user) { %>
                            <a href="/profile"><i class="fas fa-user"></i> My Profile</a>
                            <a href="/orders"><i class="fas fa-box"></i> My Orders</a>
                            <a href="/wishlist"><i class="fas fa-heart"></i> Wishlist</a>
                            <a href="/logout"><i class="fas fa-sign-out-alt"></i> Logout</a>
                        <% } else { %>
                            <a href="/login"><i class="fas fa-sign-in-alt"></i> Login</a>
                            <a href="/signup"><i class="fas fa-user-plus"></i> Sign Up</a>
                        <% } %>
                    </div>
                </div>
            </li>
        </ul>
    </nav>

    <div class="container-fluid main-content-container">
        <h1 class="checkout-title">Checkout</h1>
        <div class="checkout-grid">
            <div class="checkout-main">
                <!-- Order Section -->
                <div class="checkout-section">
                    <h2 class="section-title">Your Order</h2>
                    <% if (items && items.length > 0) { %>
                        <% items.forEach(item => { %>
                            <div class="order-item">
                                <img src="/uploads/product/<%= item.productId.productImage[0] %>" alt="<%= item.productId.productName %>" class="order-item-img">
                                <div class="order-item-details">
                                    <h3 class="order-item-name"><%= item.productId.productName %></h3>
                                    <p class="order-item-info">Size: <%= item.size || 'Default' %></p>
                                    <p class="order-item-info">Quantity: <%= item.quantity %></p>
                                    <div class="order-item-price">
                                        <% if (item.offerDiscount > 0) { %>
                                            <span class="text-decoration-line-through text-muted">₹<%= (item.originalPrice).toLocaleString() %></span>
                                            <span class="text-success ms-2">₹<%= (item.originalPrice - item.offerDiscount).toLocaleString() %></span>
                                        <% } else { %>
                                            <span>₹<%= item.totalPrice.toLocaleString() %></span>
                                        <% } %>
                                    </div>
                                </div>
                            </div>
                        <% }) %>
                    <% } else { %>
                        <div class="empty-cart">
                            <i class="fas fa-shopping-cart empty-cart-icon"></i>
                            <h3 class="empty-cart-text">Your cart is empty</h3>
                            <p class="empty-cart-subtext">Looks like you haven't added any items to your cart yet.</p>
                            <a href="/shopAll" class="continue-shopping-btn">
                                <i class="fas fa-shopping-cart"></i> Continue Shopping
                            </a>
                        </div>
                    <% } %>
                </div>

                <!-- Address Section -->
                <div class="checkout-section">
                    <h2 class="section-title">Select Address</h2>
                    <% if (typeof addresses !== 'undefined' && addresses.length > 0) { %>
                        <% const defaultAddress = addresses.find(addr => addr.isDefault) || addresses[0]; %>
                        <% const otherAddresses = addresses.filter(addr => addr._id.toString() !== defaultAddress._id.toString()); %>
                        <!-- Default Address -->
                        <div class="address-details default-address" data-address-id="<%= defaultAddress._id %>">
                            <div class="default-badge">Default Address</div>
                            <p><strong><%= defaultAddress.name %></strong></p>
                            <p><%= defaultAddress.houseNo || '' %>, <%= defaultAddress.roadArea || '' %></p>
                            <p><%= defaultAddress.city %>, <%= defaultAddress.state %> - <%= defaultAddress.pincode %></p>
                            <p>Phone: <%= defaultAddress.phone %></p>
                            <div class="address-actions">
                                <a href="/update/address/<%= defaultAddress._id %>?from=checkout" class="address-btn">
                                    <i class="fas fa-edit"></i> Edit
                                </a>
                                <button class="address-btn remove-btn">
                                    <i class="fas fa-trash"></i> Remove
                                </button>
                            </div>
                        </div>
                        <!-- Other Addresses -->
                        <% if (otherAddresses.length > 0) { %>
                            <h3 class="other-addresses-title">Other Addresses</h3>
                            <% otherAddresses.forEach(address => { %>
                                <div class="address-details" data-address-id="<%= address._id %>">
                                    <p><strong><%= address.name %></strong></p>
                                    <p><%= address.houseNo || '' %>, <%= address.roadArea || '' %></p>
                                    <p><%= address.city %>, <%= address.state %> - <%= address.pincode %></p>
                                    <p>Phone: <%= address.phone %></p>
                                    <div class="address-actions">
                                        <button class="set-default-btn" onclick="setDefaultAddress('<%= address._id %>')">
                                            Set as Default
                                        </button>
                                        <a href="/update/address/<%= address._id %>?from=checkout" class="address-btn">
                                            <i class="fas fa-edit"></i> Edit
                                        </a>
                                        <button class="address-btn remove-btn" onclick="removeAddress('<%= address._id %>')">
                                            <i class="fas fa-trash"></i> Remove
                                        </button>
                                    </div>
                                </div>
                            <% }) %>
                        <% } %>
                    <% } else { %>
                        <div class="address-details">
                            <p>No address provided</p>
                        </div>
                    <% } %>
                    <div class="address-actions">
                        <a href="/add-address?from=checkout" class="address-btn">
                            <i class="fas fa-plus"></i> Add New Address
                        </a>
                    </div>
                </div>

                <!-- Delivery Information Section -->
                <div class="checkout-section">
                    <h2 class="section-title">Delivery Information</h2>
                    <div class="delivery-info">
                        <p><i class="fas fa-truck"></i> Estimated Delivery: <%= new Date(Date.now() + 7 * 24 * 60 * 60 * 1000).toLocaleDateString('en-US', { month: 'long', day: 'numeric', year: 'numeric' }) %></p>
                        <p><i class="fas fa-shipping-fast"></i> Shipping Method: Standard Shipping</p>
                        <p><i class="fas fa-map-marker-alt"></i> Tracking: Available upon dispatch</p>
                    </div>
                </div>
            </div>

            <!-- Order Summary Sidebar -->
            <div class="order-summary">
                <div class="checkout-section">
                    <h2 class="section-title">Order Summary</h2>
                    <% if (items && items.length > 0) { %>
                        <div class="summary-row">
                            <span>Subtotal</span>
                            <span id="subtotal">₹<%= totalPrice.toLocaleString() %></span>
                        </div>
                        <div class="summary-row text-success" id="offer-discount-row" style="display: <%= totalOfferDiscount > 0 ? 'flex' : 'none' %>;">
                            <span>Offer Discount</span>
                            <span id="offer-discount">-₹<%= totalOfferDiscount.toLocaleString() %></span>
                        </div>
                        <div class="summary-row">
                            <span>Shipping</span>
                            <span id="shipping"><%= shipping === 0 ? 'Free' : '₹' + shipping.toLocaleString() %></span>
                        </div>
                        <div class="summary-row summary-total">
                            <span>Total</span>
                            <span id="finalPrice">₹<%= finalPrice.toLocaleString() %></span>
                        </div>
                        <button class="checkout-btn" onclick="proceedToPayment()" <%= items.length === 0 ? 'disabled' : '' %>>
                            <i class="fas fa-lock"></i> Proceed to Payment
                        </button>
                    <% } else { %>
                        <div class="summary-row">
                            <span>Subtotal</span>
                            <span>₹0</span>
                        </div>
                        <div class="summary-row">
                            <span>Shipping</span>
                            <span>Free</span>
                        </div>
                        <div class="summary-row summary-total">
                            <span>Total</span>
                            <span>₹0</span>
                        </div>
                        <button class="checkout-btn" disabled>
                            <i class="fas fa-lock"></i> Proceed to Payment
                        </button>
                    <% } %>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.8/dist/umd/popper.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/toastify-js"></script>
    <script>
        function setDefaultAddress(addressId) {
            Swal.fire({
                title: 'Set as Default?',
                text: 'Do you want to set this address as your default address?',
                icon: 'question',
                showCancelButton: true,
                confirmButtonColor: '#3e4c22',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, set as default'
            }).then((result) => {
                if (result.isConfirmed) {
                    fetch('/set-default-address', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'Accept': 'application/json'
                        },
                        body: JSON.stringify({ addressId })
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            Swal.fire({
                                toast: true,
                                position: 'top-end',
                                icon: 'success',
                                title: 'Default address updated successfully',
                                showConfirmButton: false,
                                timer: 3000,
                                timerProgressBar: true
                            }).then(() => {
                                location.reload();
                            });
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        Swal.fire({
                            toast: true,
                            position: 'top-end',
                            icon: 'error',
                            title: 'An error occurred',
                            showConfirmButton: false,
                            timer: 3000,
                            timerProgressBar: true
                        });
                    });
                }
            });
        }

        function removeAddress(addressId) {
            Swal.fire({
                title: 'Remove Address?',
                text: 'Are you sure you want to remove this address?',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3e4c22',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, remove it'
            }).then((result) => {
                if (result.isConfirmed) {
                    fetch('/remove-address', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'Accept': 'application/json'
                        },
                        body: JSON.stringify({ addressId })
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            Swal.fire({
                                toast: true,
                                position: 'top-end',
                                icon: 'success',
                                title: 'Address removed successfully',
                                showConfirmButton: false,
                                timer: 3000,
                                timerProgressBar: true
                            }).then(() => {
                                location.reload();
                            });
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        Swal.fire({
                            toast: true,
                            position: 'top-end',
                            icon: 'error',
                            title: 'An error occurred',
                            showConfirmButton: false,
                            timer: 3000,
                            timerProgressBar: true
                        });
                    });
                }
            });
        }

        function proceedToPayment() {
            if (!<%= addresses && addresses.length > 0 ? 'true' : 'false' %>) {
                Swal.fire({
                    toast: true,
                    position: 'top-end',
                    icon: 'warning',
                    title: 'Please add a shipping address before proceeding',
                    showConfirmButton: false,
                    timer: 3000,
                    timerProgressBar: true
                });
                return;
            }

            const defaultAddress = document.querySelector('.default-address');
            const addressId = defaultAddress.getAttribute('data-address-id');
            
            const payNowBtn = document.querySelector('.checkout-btn');
            if (payNowBtn) {
                payNowBtn.disabled = true;
                payNowBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Processing...';
            }

            window.location.href = `/proceed-payment?addressId=${addressId}`;
        }

        function showNotification(message, type) {
            Toastify({
                text: message,
                duration: 3000,
                gravity: "top",
                position: "right",
                backgroundColor: type === 'success' ? '#4a6741' : '#e63946',
                stopOnFocus: true,
            }).showToast();
        }

        document.addEventListener('DOMContentLoaded', function() {
            document.querySelectorAll('.remove-btn').forEach(button => {
                button.addEventListener('click', function() {
                    const addressContainer = this.closest('.address-details');
                    const addressId = addressContainer.dataset.addressId;
                    removeAddress(addressId);
                });
            });
        });
    </script>
</body>
</html>