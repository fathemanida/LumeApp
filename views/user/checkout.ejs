<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Checkout</title>
    <link href="https://fonts.googleapis.com/css2?family=Jost:wght@400;500&family=Aboreto&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <style>
        :root {
            --dark-brown: #291d0e;
            --olive-green: #314216;
            --light-bg: #f8f5f2;
            --border-color: #d3c9be;
        }

        body {
            font-family: 'Jost', sans-serif;
            background-color: var(--light-bg);
            color: var(--dark-brown);
            min-height: 100vh;
            margin: 0;
            padding-right: 0;
            box-sizing: border-box;
        }

        /* Navbar Styles */
        .navbar {
            background: white;
            border-bottom: 1px solid var(--border-color);
            padding: 1rem 2rem;
            display: flex;
            align-items: center;
            justify-content: space-between;
            flex-wrap: nowrap;
        }

        .brand {
            font-family: 'Aboreto', cursive;
            font-size: 1.5rem;
            letter-spacing: 1.5px;
            text-transform: uppercase;
            color: var(--dark-brown);
            cursor: pointer;
            transition: color 0.3s ease;
        }

        .brand:hover {
            color: var(--olive-green);
        }

        .nav-links {
            display: flex;
            list-style: none;
            margin: 0;
            padding: 0;
            flex: 1;
            justify-content: center;
        }

        .nav-link {
            color: var(--dark-brown);
            font-family: 'Jost', sans-serif;
            font-size: 0.9rem;
            text-decoration: none;
            padding: 0.5rem 1rem;
            transition: all 0.3s ease;
        }

        .nav-link:hover {
            color: var(--olive-green);
            transform: translateY(-2px);
        }

        .icon-links {
            display: flex;
            align-items: center;
            list-style: none;
            margin: 0;
            padding: 0;
        }

        .icon-link {
            color: var(--dark-brown);
            font-size: 1.1rem;
            padding: 0.5rem;
            transition: all 0.3s ease;
        }

        .icon-link:hover {
            color: var(--olive-green);
            transform: translateY(-2px);
        }

        /* Search Bar Styles */
        .search-container {
            position: relative;
            display: flex;
            align-items: center;
        }

        .search-input {
            border: 1px solid var(--border-color);
            border-radius: 20px;
            padding: 0.5rem 1rem;
            padding-right: 2.5rem;
            font-family: 'Jost', sans-serif;
            width: 200px;
            transition: all 0.3s ease;
        }

        .search-input:focus {
            outline: none;
            border-color: var(--dark-brown);
            width: 250px;
            box-shadow: 0 0 0 2px rgba(41, 29, 14, 0.1);
        }

        .search-button {
            position: absolute;
            right: 10px;
            background: none;
            border: none;
            color: var(--dark-brown);
            cursor: pointer;
        }

        .search-button:hover {
            color: var(--olive-green);
        }

        /* Profile Dropdown */
        .profile-dropdown {
            position: relative;
            display: inline-block;
        }

        .profile-dropdown-content {
            display: none;
            position: absolute;
            right: 0;
            background-color: white;
            min-width: 160px;
            box-shadow: 0 8px 16px rgba(0,0,0,0.1);
            z-index: 1000;
            border-radius: 4px;
            padding: 0.5rem 0;
        }

        .profile-dropdown:hover .profile-dropdown-content {
            display: block;
        }

        .profile-dropdown-content a {
            color: var(--dark-brown);
            padding: 0.75rem 1rem;
            text-decoration: none;
            display: block;
            font-size: 0.9rem;
            transition: background-color 0.3s ease;
        }

        .profile-dropdown-content a:hover {
            background-color: var(--light-bg);
            color: var(--olive-green);
        }

        .profile-dropdown-content a i {
            margin-right: 0.5rem;
            width: 20px;
            text-align: center;
        }

        /* Cart Container */
        .cart-container {
            max-width: 1200px;
            margin: 2rem auto;
            padding: 0 1rem;
            background: transparent;
            box-sizing: border-box;
            display: grid;
            grid-template-columns: 1fr 400px;
            gap: 2rem;
        }

        .cart-title {
            font-family: 'Aboreto', cursive;
            font-size: 2rem;
            margin-bottom: 2rem;
            color: var(--dark-brown);
            text-align: center;
            grid-column: 1 / -1;
        }

        /* Main Content Column */
        .main-content {
            display: flex;
            flex-direction: column;
            gap: 2rem;
        }

        /* Section Containers */
        .address-section, .delivery-section, .products-section, .coupon-section {
            margin: 0;
            padding: 1.5rem;
            background: white;
            border-radius: 8px;
            box-shadow: 0 2px 8px rgba(41, 29, 14, 0.05);
        }

        .address-title, .delivery-title, .products-title, .summary-title {
            font-family: 'Aboreto', cursive;
            font-size: 1.5rem;
            margin-bottom: 1rem;
            color: var(--dark-brown);
        }

        .address-details {
            font-size: 0.9rem;
            color: #666;
            margin-bottom: 1rem;
            padding: 1rem;
            background: var(--light-bg);
            border-radius: 4px;
        }

        .delivery-details {
            font-size: 0.9rem;
            color: #666;
            margin-bottom: 1rem;
            padding: 1rem;
            background: var(--light-bg);
            border-radius: 4px;
        }

        .cart-item {
            display: flex;
            align-items: center;
            padding: 1.5rem;
            border-bottom: 1px solid var(--border-color);
            margin-bottom: 1rem;
            transition: all 0.3s ease;
            background: white;
            border-radius: 8px;
        }

        .cart-item:hover {
            background-color: var(--light-bg);
            box-shadow: 0 2px 8px rgba(41, 29, 14, 0.05);
        }

        .cart-item img {
            width: 100px;
            height: 100px;
            object-fit: cover;
            border-radius: 4px;
            margin-right: 1.5rem;
        }

        .cart-item-details {
            flex: 1;
        }

        .cart-item-name {
            font-family: 'Aboreto', cursive;
            font-size: 1.2rem;
            margin-bottom: 0.5rem;
        }

        .cart-item-info {
            color: #666;
            font-size: 0.9rem;
            margin-bottom: 0.5rem;
        }

        .quantity-control {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            margin: 1rem 0;
        }

        .quantity-btn {
            background: var(--light-bg);
            border: 1px solid var(--border-color);
            width: 30px;
            height: 30px;
            border-radius: 4px;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .quantity-btn:hover {
            background: var(--dark-brown);
            color: white;
        }

        .quantity-input {
            width: 50px;
            text-align: center;
            border: 1px solid var(--border-color);
            border-radius: 4px;
            padding: 0.25rem;
        }

        .cart-item-price {
            font-size: 1.1rem;
            font-weight: 500;
            color: var(--dark-brown);
        }

        .remove-btn {
            background: none;
            border: none;
            color: #dc3545;
            cursor: pointer;
            padding: 0.5rem;
            transition: all 0.3s ease;
        }

        .remove-btn:hover {
            transform: scale(1.1);
        }

        /* Order Summary Sidebar */
        .order-summary-sidebar {
            position: sticky;
            top: 2rem;
            height: fit-content;
        }

        .cart-summary {
            padding: 1.5rem;
            background: white;
            border-radius: 8px;
            box-shadow: 0 2px 8px rgba(41, 29, 14, 0.05);
            margin-bottom: 2rem;
        }

        .summary-row {
            display: flex;
            justify-content: space-between;
            margin-bottom: 1rem;
            padding-bottom: 1rem;
            border-bottom: 1px solid var(--border-color);
            font-size: 0.95rem;
        }

        .summary-row:last-child {
            border-bottom: none;
            margin-bottom: 0;
            padding-bottom: 0;
            font-weight: 500;
        }

        .coupon-input {
            border: 1px solid var(--border-color);
            border-radius: 4px;
            padding: 0.75rem 1rem;
            width: 95%;
            margin-bottom: 1rem;
        }

        .apply-coupon-btn {
            background-color: var(--dark-brown);
            color: white;
            border: none;
            padding: 0.75rem 1.5rem;
            border-radius: 4px;
            transition: all 0.3s ease;
            width: 100%;
        }

        .apply-coupon-btn:hover {
            background-color: var(--olive-green);
            transform: translateY(-2px);
        }

        .checkout-btn {
            background-color: var(--dark-brown);
            color: white;
            border: none;
            padding: 1rem 2rem;
            border-radius: 4px;
            width: 100%;
            font-size: 1.1rem;
            transition: all 0.3s ease;
            margin-top: 1rem;
        }

        .checkout-btn:hover {
            background-color: var(--olive-green);
            transform: translateY(-2px);
        }

        .checkout-btn:disabled {
            background-color: #ccc;
            cursor: not-allowed;
        }

        .address-actions {
            display: flex;
            gap: 1rem;
            flex-wrap: wrap;
        }

        .address-btn {
            background: none;
            border: none;
            color: var(--dark-brown);
            cursor: pointer;
            padding: 0.5rem;
            transition: all 0.3s ease;
            font-size: 1rem;
            text-decoration: none;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .address-btn:hover {
            color: var(--olive-green);
            transform: translateY(-2px);
        }

        .empty-cart {
            text-align: center;
            padding: 2rem;
            background: white;
            border-radius: 8px;
            margin: 2rem 0;
            box-shadow: 0 2px 8px rgba(41, 29, 14, 0.05);
        }

        .empty-cart i {
            font-size: 3rem;
            color: var(--dark-brown);
            margin-bottom: 1rem;
        }

        .continue-shopping {
            display: inline-block;
            margin-top: 1rem;
            padding: 0.75rem 1.5rem;
            background-color: var(--dark-brown);
            color: white;
            text-decoration: none;
            border-radius: 4px;
            transition: all 0.3s ease;
        }

        .continue-shopping:hover {
            background-color: var(--olive-green);
            transform: translateY(-2px);
        }

        .default-address {
            border: 2px solid var(--dark-brown);
            background-color: var(--light-bg);
        }

        .default-badge {
            background-color: var(--dark-brown);
            color: white;
            padding: 4px 8px;
            border-radius: 4px;
            font-size: 0.8rem;
            margin-bottom: 10px;
            display: inline-block;
        }

        .other-addresses-title {
            font-family: 'Aboreto', cursive;
            font-size: 1.2rem;
            margin: 1.5rem 0 1rem;
            color: var(--dark-brown);
        }

        .other-address {
            margin-bottom: 1rem;
            border: 1px solid var(--border-color);
        }

        .set-default-btn {
            background-color: var(--light-bg);
            color: var(--dark-brown);
            border: 1px solid var(--dark-brown);
            padding: 0.5rem 1rem;
            border-radius: 4px;
            cursor: pointer;
            margin-top: 0.5rem;
            transition: all 0.3s ease;
        }

        .set-default-btn:hover {
            background-color: var(--dark-brown);
            color: white;
        }

        .address-header {
            margin-bottom: 0.5rem;
        }

        /* Footer */
        

        .border-secondary {
            border-color: rgba(255, 255, 255, 0.1) !important;
        }

        .text-light {
            color: rgba(255, 255, 255, 0.7) !important;
        }

        /* Responsive Adjustments */
        @media (max-width: 992px) {
            .navbar {
                padding: 1rem;
            }

            .search-input {
                width: 150px;
            }

            .search-input:focus {
                width: 200px;
            }

            .cart-container {
                max-width: 100%;
                margin: 1rem;
                padding: 0 0.5rem;
                grid-template-columns: 1fr;
            }

            .order-summary-sidebar {
                position: static;
                order: 1;
            }

            .main-content {
                order: 2;
            }
        }

        @media (max-width: 576px) {
            .navbar {
                flex-wrap: wrap;
                justify-content: space-between;
                gap: 0.5rem;
            }

            .nav-links {
                order: 2;
                flex: 100%;
                justify-content: center;
                margin-top: 0.5rem;
            }

            .brand {
                order: 0;
            }

            .icon-links {
                order: 1;
            }

            .search-input {
                width: 120px;
            }

            .search-input:focus {
                width: 150px;
            }

            .nav-link {
                padding: 0.3rem 0.5rem;
                font-size: 0.8rem;
            }

            .icon-link {
                padding: 0.3rem;
                font-size: 1rem;
            }

            .cart-container {
                padding: 0 0.5rem;
            }

            .cart-item {
                flex-direction: column;
                align-items: flex-start;
            }

            .cart-item img {
                margin-bottom: 1rem;
                margin-right: 0;
            }

            .quantity-control {
                margin: 0.5rem 0;
            }

            .address-actions {
                flex-direction: column;
                gap: 0.5rem;
            }
        }
    </style>
</head>
<body>
    <nav class="navbar">
        <!-- Left side - Brand -->
        <div class="brand" id="sidebarToggle">LUME</div>

        <!-- Center - Navigation Links -->
        <ul class="nav-links">
            <li class="mx-2"><a href="/" class="nav-link">Home</a></li>
            <li class="mx-2"><a href="/shopAll" class="nav-link">Shop All</a></li>
            <li class="mx-2"><a href="/featured" class="nav-link">Featured</a></li>
            <li class="mx-2"><a href="/new-arrivals" class="nav-link">New Arrivals</a></li>
        </ul>

        <!-- Right side - Icons -->
        <ul class="icon-links">
            <li class="mx-2">
                <form action="/shopAll" method="GET" class="d-flex align-items-center">
                    <div class="search-container">
                        <input type="text" name="search" placeholder="Search products..." class="search-input form-control">
                        <button type="submit" class="search-button">
                            <i class="fas fa-search"></i>
                        </button>
                    </div>
                </form>
            </li>
            <li class="mx-2"><a href="/wishlist" class="icon-link"><i class="fas fa-heart"></i></a></li>
            <li class="mx-2"><a href="/cart" class="icon-link"><i class="fas fa-shopping-cart"></i></a></li>
            <li class="mx-2">
                <div class="profile-dropdown">
                    <a href="#" class="icon-link"><i class="far fa-user"></i></a>
                    <div class="profile-dropdown-content">
                        <% if (locals.user) { %>
                            <a href="/profile"><i class="fas fa-user"></i> My Profile</a>
                            <a href="/orders"><i class="fas fa-box"></i> My Orders</a>
                            <a href="/wishlist"><i class="fas fa-heart"></i> Wishlist</a>
                            <a href="/logout"><i class="fas fa-sign-out-alt"></i> Logout</a>
                        <% } else { %>
                            <a href="/login"><i class="fas fa-sign-in-alt"></i> Login</a>
                            <a href="/signup"><i class="fas fa-user-plus"></i> Sign Up</a>
                        <% } %>
                    </div>
                </div>
            </li>
        </ul>
    </nav>

    <div class="cart-container">
        <h1 class="cart-title">Checkout</h1>

        <div class="main-content">
            <!-- Address Section -->
            <div class="address-section">
                <h2 class="address-title">Select Address</h2>
                <% if (addresses && addresses.length > 0) { %>
                    <% const defaultAddress = addresses.find(addr => addr.isDefault) || addresses[0]; %>
                    <% const otherAddresses = addresses.filter(addr => addr._id.toString() !== defaultAddress._id.toString()); %>
                    
                    <!-- Default Address -->
                    <div class="address-details default-address" data-address-id="<%= defaultAddress._id %>">
                        <div class="address-header">
                            <span class="default-badge">Default Address</span>
                        </div>
                        <p><%= defaultAddress.name %>, <%= defaultAddress.houseNo || '' %>, <%= defaultAddress.roadArea || '' %></p>
                        <p><%= defaultAddress.city %>, <%= defaultAddress.state %> - <%= defaultAddress.pincode %></p>
                        <p>Phone: <%= defaultAddress.phone %></p>
                        <div class="address-actions">
                            <a href="/update/address/<%= defaultAddress._id %>?from=checkout" class="address-btn"><i class="fas fa-edit"></i> Edit</a>
                            <button onclick="removeAddress('<%= defaultAddress._id %>')" class="address-btn remove-btn"><i class="fas fa-trash"></i> Remove</button>
                        </div>
                    </div>

                    <!-- Other Addresses -->
                    <% if (otherAddresses.length > 0) { %>
                        <h3 class="other-addresses-title">Other Addresses</h3>
                        <% otherAddresses.forEach(address => { %>
                            <div class="address-details other-address" data-address-id="<%= address._id %>">
                                <p><%= address.name %>, <%= address.houseNo || '' %>, <%= address.roadArea || '' %></p>
                                <p><%= address.city %>, <%= address.state %> - <%= address.pincode %></p>
                                <p>Phone: <%= address.phone %></p>
                                <div class="address-actions">
                                    <button onclick="setDefaultAddress('<%= address._id %>')" class="set-default-btn">
                                        Set as Default
                                    </button>
                                    <a href="/update/address/<%= address._id %>?from=checkout" class="address-btn"><i class="fas fa-edit"></i> Edit</a>
                                    <button onclick="removeAddress('<%= address._id %>')" class="address-btn remove-btn"><i class="fas fa-trash"></i> Remove</button>
                                </div>
                            </div>
                        <% }) %>
                    <% } %>
                <% } else { %>
                    <div class="address-details">
                        <p>No address provided</p>
                    </div>
                <% } %>
                <div class="address-actions">
                    <a href="/add-address?from=checkout" class="address-btn"><i class="fas fa-plus"></i> Add New Address</a>
                </div>
            </div>

            <!-- Delivery Information Section -->
            <div class="delivery-section" id="delivery-section">
                <h2 class="delivery-title">Delivery Information</h2>
                <div class="delivery-details">
                    <p>Estimated Delivery: <%= new Date(Date.now() + 7 * 24 * 60 * 60 * 1000).toLocaleDateString('en-US', { month: 'long', day: 'numeric', year: 'numeric' }) %></p>
                    <p>Shipping Method: Standard Shipping</p>
                    <p>Tracking: Available upon dispatch</p>
                </div>
            </div>

            <!-- Order Section -->
            <div class="products-section">
                <h2 class="products-title">Order</h2>
                <% if (cart && cart.items && cart.items.length > 0) { %>
                    <% cart.items.forEach(item => { %>
                        <div class="cart-item">
                            <img src="/Uploads/product/<%= item.productId.productImage[0] %>" alt="<%= item.productId.productName %>">
                            <div class="cart-item-details">
                                <h3 class="cart-item-name"><%= item.productId.productName %></h3>
                                <p class="cart-item-info">Size: <%= item.size || 'Default' %></p>
                                <p class="cart-item-info">Quantity: <%= item.quantity %></p>
                                <p class="cart-item-price">₹<%= item.totalPrice.toFixed(2) %></p>
                            </div>
                        </div>
                    <% }) %>
                <% } else { %>
                    <div class="empty-cart">
                        <i class="fas fa-shopping-cart"></i>
                        <p>Your cart is empty</p>
                        <a href="/shopAll" class="continue-shopping">Continue Shopping</a>
                    </div>
                <% } %>
            </div>

            <!-- Coupon Section -->
            <div class="coupon-section">
                <input type="text" class="coupon-input" placeholder="Enter coupon code" id="couponCode">
                <button class="apply-coupon-btn" onclick="applyCoupon()">Apply Coupon</button>
            </div>
        </div>

        <!-- Order Summary Sidebar -->
        <div class="order-summary-sidebar">
                <div class="cart-summary">
                    <h2 class="summary-title">Order Summary</h2>
                    <div class="summary-row">
                        <span>Subtotal</span>
                        <span>₹<%= cart.subtotal ? cart.subtotal.toFixed(2) : '0.00' %></span>
                    </div>
                    <div class="summary-row">
                        <span>Shipping</span>
                        <span>Free</span>
                    </div>
                    <div class="summary-row">
                        <span>Discount</span>
                        <span>₹<%= cart.discount ? cart.discount.toFixed(2) : '0.00' %></span>
                    </div>
                    <div class="summary-row summary-total">
                        <span>Total</span>
                        <span>₹<%= cart.finalPrice ? cart.finalPrice.toFixed(2) : '0.00' %></span>
                    </div>
                    <button class="checkout-btn" onclick="proceedToPayment()" <%= (!cart || !cart.items || cart.items.length === 0) ? 'disabled' : '' %>>Proceed to Payment</button>
                </div>
        </div>
    </div>

  <link href="https://fonts.googleapis.com/css2?family=Cinzel:wght@400;700&display=swap" rel="stylesheet">
<footer style="background-color: #1F1714; color: #E8E8E8; padding: 40px 0; font-family: 'Cinzel', serif; line-height: 1.6;">
  <div style="display: flex; justify-content: center; gap: 120px; padding: 0 20px; max-width: 1200px; margin: 0 auto;">
    <!-- Company Section -->
    <div>
      <h3 style="font-size: 18px; margin-bottom: 15px; letter-spacing: 1px; text-transform: uppercase; color: #C0C0C0;">Company</h3>
      <ul style="list-style: none; padding: 0; font-size: 14px;">
        <li style="margin-bottom: 8px;"><a href="/about-us" style="color: #E8E8E8; text-decoration: none; transition: color 0.3s ease;">About Us</a></li>
        <li style="margin-bottom: 8px;"><a href="/careers" style="color: #E8E8E8; text-decoration: none; transition: color 0.3s ease;">Careers</a></li>
        <li style="margin-bottom: 8px;"><a href="/contact" style="color: #E8E8E8; text-decoration: none; transition: color 0.3s ease;">Contact</a></li>
        <li style="margin-bottom: 8px;"><a href="/privacy-policy" style="color: #E8E8E8; text-decoration: none; transition: color 0.3s ease;">Privacy Policy</a></li>
      </ul>
    </div>

    <!-- Shop Section -->
    <div>
      <h3 style="font-size: 18px; margin-bottom: 15px; letter-spacing: 1px; text-transform: uppercase; color: #C0C0C0;">Shop</h3>
      <ul style="list-style: none; padding: 0; font-size: 14px;">
        <li style="margin-bottom: 8px;"><a href="/rings" style="color: #E8E8E8; text-decoration: none; transition: color 0.3s ease;">Rings</a></li>
        <li style="margin-bottom: 8px;"><a href="/necklaces" style="color: #E8E8E8; text-decoration: none; transition: color 0.3s ease;">Necklaces</a></li>
        <li style="margin-bottom: 8px;"><a href="/earrings" style="color: #E8E8E8; text-decoration: none; transition: color 0.3s ease;">Earrings</a></li>
        <li style="margin-bottom: 8px;"><a href="/bracelets" style="color: #E8E8E8; text-decoration: none; transition: color 0.3s ease;">Bracelets</a></li>
      </ul>
    </div>

    <!-- Connect With Us Section -->
    <div>
      <h3 style="font-size: 18px; margin-bottom: 15px; letter-spacing: 1px; text-transform: uppercase; color: #C0C0C0;">Connect With Us</h3>
      <ul style="list-style: none; padding: 0; font-size: 14px;">
        <li style="margin-bottom: 8px;"><a href="https://instagram.com" style="color: #E8E8E8; text-decoration: none; transition: color 0.3s ease;">Instagram</a></li>
        <li style="margin-bottom: 8px;"><a href="https://facebook.com" style="color: #E8E8E8; text-decoration: none; transition: color 0.3s ease;">Facebook</a></li>
        <li style="margin-bottom: 8px;"><a href="https://pinterest.com" style="color: #E8E8E8; text-decoration: none; transition: color 0.3s ease;">Pinterest</a></li>
        <li style="margin-bottom: 8px;"><a href="https://twitter.com" style="color: #E8E8E8; text-decoration: none; transition: color 0.3s ease;">Twitter</a></li>
      </ul>
    </div>
  </div>

  <!-- Copyright Section -->
  <div style="text-align: center; font-size: 12px; padding-top: 30px; margin-top: 30px; border-top: 1px solid #4A3C31; color: #A9A9A9;">
    © 2024 Lume Jewelry. All Rights Reserved.
  </div>
</footer>
<style>
  footer a:hover {
    color: #C0C0C0;
  }
</style>

    <script>
        function toggleAddressForm(action) {
            const form = document.getElementById('addressForm');
            form.classList.toggle('active');
            
            if (action === 'edit' && form.classList.contains('active')) {
                const address = <%= JSON.stringify(user?.address || {}) %>;
                document.getElementById('street').value = address.street || '';
                document.getElementById('city').value = address.city || '';
                document.getElementById('state').value = address.state || '';
                document.getElementById('zip').value = address.zip || '';
                document.getElementById('country').value = address.country || '';
            }
        }

        function updateQuantity(itemId, action) {
            fetch(`/cart/update-quantity/${itemId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ action })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    window.location.reload();
                } else {
                    if (data.message.includes('stock')) {
                        Swal.fire({
                            toast: true,
                            position: 'top-end',
                            icon: 'warning',
                            title: 'Stock Limit',
                            text: data.message,
                            showConfirmButton: false,
                            timer: 3000,
                            timerProgressBar: true
                        });
                    } else {
                        Swal.fire({
                            toast: true,
                            position: 'top-end',
                            icon: 'warning',
                            title: 'Limit Reached',
                            text: data.message,
                            showConfirmButton: false,
                            timer: 3000,
                            timerProgressBar: true
                        });
                    }
                }
            })
            .catch(error => {
                console.error('Error:', error);
                Swal.fire({
                    toast: true,
                    position: 'top-end',
                    icon: 'error',
                    title: 'Failed to update quantity',
                    showConfirmButton: false,
                    timer: 3000,
                    timerProgressBar: true
                });
            });
        }

        function removeItem(itemId) {
            if (confirm('Are you sure you want to remove this item?')) {
                fetch(`/cart/remove/${itemId}`, {
                    method: 'DELETE'
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        window.location.reload();
                    }
                })
                .catch(error => console.error('Error:', error));
            }
        }

        function applyCoupon() {
            const couponCode = document.getElementById('couponCode').value;
            if (!couponCode) {
                Swal.fire({
                    toast: true,
                    position: 'top-end',
                    icon: 'warning',
                    title: 'Please enter a coupon code',
                    showConfirmButton: false,
                    timer: 3000,
                    timerProgressBar: true
                });
                return;
            }

            fetch('/cart/apply-coupon', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ couponCode })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    window.location.reload();
                } else {
                    Swal.fire({
                        toast: true,
                        position: 'top-end',
                        icon: 'error',
                        title: data.message || 'Invalid coupon code',
                        showConfirmButton: false,
                        timer: 3000,
                        timerProgressBar: true
                    });
                }
            })
            .catch(error => {
                console.error('Error:', error);
                Swal.fire({
                    toast: true,
                    position: 'top-end',
                    icon: 'error',
                    title: 'An error occurred while applying the coupon',
                    showConfirmButton: false,
                    timer: 3000,
                    timerProgressBar: true
                });
            });
        }

        function proceedToPayment() {
            if (!<%= addresses && addresses.length > 0 ? 'true' : 'false' %>) {
                Swal.fire({
                    toast: true,
                    position: 'top-end',
                    icon: 'warning',
                    title: 'Please add a shipping address before proceeding',
                    showConfirmButton: false,
                    timer: 3000,
                    timerProgressBar: true
                });
                return;
            }

            // Get cart items
            const cartItems = document.querySelectorAll('.cart-item');
            if (!cartItems || cartItems.length === 0) {
                Swal.fire({
                    toast: true,
                    position: 'top-end',
                    icon: 'warning',
                    title: 'Your cart is empty',
                    showConfirmButton: false,
                    timer: 3000,
                    timerProgressBar: true
                });
                return;
            }

            // Get the default address ID
            const defaultAddress = document.querySelector('.default-address');
            if (!defaultAddress) {
                Swal.fire({
                    toast: true,
                    position: 'top-end',
                    icon: 'error',
                    title: 'No default address found',
                    showConfirmButton: false,
                    timer: 3000,
                    timerProgressBar: true
                });
                return;
            }

            const addressId = defaultAddress.getAttribute('data-address-id');
            if (!addressId) {
                Swal.fire({
                    toast: true,
                    position: 'top-end',
                    icon: 'error',
                    title: 'Invalid address selection',
                    showConfirmButton: false,
                    timer: 3000,
                    timerProgressBar: true
                });
                return;
            }

            // Show loading state
            const payNowBtn = document.querySelector('.checkout-btn');
            if (payNowBtn) {
                payNowBtn.disabled = true;
                payNowBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Processing...';
            }

            window.location.href = `/proceed-payment?addressId=${addressId}`;
        }

        async function setDefaultAddress(addressId) {
            try {
                console.log('Setting default address:', addressId);
                const result = await Swal.fire({
                    title: 'Set as Default?',
                    text: 'Do you want to set this address as your default address?',
                    icon: 'question',
                    showCancelButton: true,
                    confirmButtonColor: '#5c4b3b',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Yes, set as default'
                });

                if (result.isConfirmed) {
                    const response = await fetch('/set-default-address', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ addressId })
                    });

                    const data = await response.json();
                    console.log('Response:', data);
                    
                    if (data.success) {
                        await Swal.fire({
                            toast: true,
                            position: 'top-end',
                            icon: 'success',
                            title: 'Default address updated successfully',
                            showConfirmButton: false,
                            timer: 3000,
                            timerProgressBar: true
                        });
                        window.location.reload();
                    } else {
                        throw new Error(data.message || 'Failed to set default address');
                    }
                }
            } catch (error) {
                console.error('Error setting default address:', error);
                Swal.fire({
                    toast: true,
                    position: 'top-end',
                    icon: 'error',
                    title: error.message || 'An error occurred while setting default address',
                    showConfirmButton: false,
                    timer: 3000,
                    timerProgressBar: true
                });
            }
        }

        async function removeAddress(addressId) {
            try {
                const result = await Swal.fire({
                    title: 'Remove Address?',
                    text: 'Are you sure you want to remove this address?',
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#5c4b3b',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Yes, remove it'
                });

                if (result.isConfirmed) {
                    const response = await fetch('/remove-address', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ addressId })
                    });

                    const data = await response.json();
                    
                    if (data.success) {
                        await Swal.fire({
                            toast: true,
                            position: 'top-end',
                            icon: 'success',
                            title: 'Address has been removed successfully',
                            showConfirmButton: false,
                            timer: 3000,
                            timerProgressBar: true
                        });
                        window.location.reload();
                    } else {
                        throw new Error(data.message || 'Failed to remove address');
                    }
                }
            } catch (error) {
                console.error('Error removing address:', error);
                Swal.fire({
                    toast: true,
                    position: 'top-end',
                    icon: 'error',
                    title: error.message || 'An error occurred while removing the address',
                    showConfirmButton: false,
                    timer: 3000,
                    timerProgressBar: true
                });
            }
        }
    </script>
</body>
</html>