<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Checkout - LUME</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Aboreto&family=Jost&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css">
    <style>
        :root {
            --soft-beige: #D4B996;
            --muted-green: #657858;
            --light-bg: #f8f5f2;
            --border-color: #e0d8cc;
            --offer-red: #e63946;
            --dark-text: #2c1810;
            --darker-text: #1a0f0a;
        }

        html, body {
            height: 100%;
            margin: 0;
            padding: 0;
            background-color: #f0e9e0;
            font-family: 'Jost', sans-serif;
            color: var(--dark-text);
            overflow-x: hidden;
        }

        .navbar {
            background: white;
            border-bottom: 1px solid var(--border-color);
            padding: clamp(0.5rem, 2vw, 1rem);
            display: flex;
            flex-wrap: wrap;
            align-items: center;
            justify-content: space-between;
        }

        .brand {
            font-family: 'Aboreto', cursive;
            font-size: clamp(1.2rem, 4vw, 1.5rem);
            letter-spacing: 1.5px;
            text-transform: uppercase;
            color: var(--darker-text);
            cursor: pointer;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .nav-links {
            display: flex;
            list-style: none;
            margin: 0;
            padding: 0;
            flex-wrap: wrap;
            gap: clamp(0.5rem, 2vw, 1rem);
        }

        .nav-link {
            color: var(--darker-text);
            font-size: clamp(0.8rem, 2.5vw, 0.9rem);
            transition: color 0.3s ease;
        }

        .nav-link:hover {
            color: var(--muted-green);
            font-weight: 500;
        }

        .icon-links {
            display: flex;
            list-style: none;
            margin: 0;
            padding: 0;
            gap: clamp(0.5rem, 2vw, 1rem);
            align-items: center;
        }

        .icon-link {
            color: var(--darker-text);
            font-size: clamp(1rem, 3vw, 1.1rem);
            transition: color 0.3s ease;
        }

        .icon-link:hover {
            color: var(--muted-green);
        }

        .search-container {
            position: relative;
            width: 100%;
            max-width: clamp(120px, 40vw, 180px);
        }

        .search-container.active {
            display: block;
        }

        .search-input {
            border: 1px solid var(--border-color);
            border-radius: 20px;
            padding: 0.5rem 2.5rem 0.5rem 1rem;
            font-family: 'Jost', sans-serif;
            width: 100%;
            font-size: clamp(0.8rem, 2.5vw, 0.9rem);
            transition: all 0.3s ease;
            color: var(--dark-text);
        }

        .search-input:focus {
            outline: none;
            border-color: var(--soft-beige);
            box-shadow: 0 0 0 2px rgba(212, 185, 150, 0.1);
            color: var(--darker-text);
        }

        .search-button {
            position: absolute;
            right: 10px;
            top: 50%;
            transform: translateY(-50%);
            background: none;
            border: none;
            color: var(--dark-text);
            cursor: pointer;
        }

        .search-button:hover {
            color: var(--muted-green);
        }

        .sidebar {
            position: fixed;
            top: 0;
            left: -100%;
            width: clamp(200px, 80vw, 280px);
            height: 100%;
            background: white;
            z-index: 1000;
            transition: left 0.3s ease;
            box-shadow: 2px 0 10px rgba(0, 0, 0, 0.1);
            overflow-y: auto;
        }

        .sidebar.open {
            left: 0;
        }

        .sidebar-header {
            padding: clamp(1rem, 3vw, 1.5rem);
            border-bottom: 1px solid var(--border-color);
        }

        .sidebar-menu {
            padding: clamp(0.75rem, 2vw, 1rem);
        }

        .sidebar-category {
            margin-bottom: clamp(1rem, 3vw, 1.5rem);
        }

        .sidebar-title {
            font-family: 'Aboreto', cursive;
            font-size: clamp(0.9rem, 3vw, 1rem);
            margin-bottom: 0.5rem;
            display: flex;
            justify-content: space-between;
            align-items: center;
            cursor: pointer;
            color: var(--darker-text);
        }

        .sidebar-items {
            padding-left: 1rem;
            max-height: 0;
            overflow: hidden;
            transition: max-height 0.3s ease;
        }

        .sidebar-items.open {
            max-height: 500px;
        }

        .sidebar-item {
            padding: 0.5rem 0;
            cursor: pointer;
        }

        .sidebar-item:hover {
            color: var(--muted-green);
        }

        .sidebar-item a {
            color: var(--dark-text);
            text-decoration: none;
            display: block;
            font-size: clamp(0.8rem, 2.5vw, 0.9rem);
            transition: color 0.3s ease;
        }

        .sidebar-item a:hover {
            color: var(--muted-green);
        }

        .sidebar-item a.active {
            color: var(--muted-green);
            font-weight: 500;
        }

        .sidebar-item a.active::before {
            content: "â€¢";
            margin-right: 5px;
        }

        .overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.3);
            z-index: 999;
            display: none;
        }

        .overlay.active {
            display: block;
        }

        .checkout-title {
            font-family: 'Aboreto', cursive;
            color: var(--darker-text);
            letter-spacing: 1.5px;
            text-transform: uppercase;
            font-weight: 400;
            margin-bottom: clamp(1rem, 4vw, 1.5rem);
            font-size: clamp(1.2rem, 5vw, 1.8rem);
            text-align: center;
        }

        .checkout-grid {
            display: flex;
            flex-direction: column;
            gap: clamp(1rem, 3vw, 1.5rem);
        }

        .checkout-section {
            background: transparent;
            border: none;
            padding: clamp(1rem, 3vw, 1.5rem);
            margin-bottom: clamp(0.75rem, 2vw, 1rem);
            border-bottom: 1px solid var(--border-color);
        }

        .section-title {
            font-family: 'Aboreto', cursive;
            color: var(--darker-text);
            letter-spacing: 1.5px;
            text-transform: uppercase;
            font-weight: 400;
            margin-bottom: clamp(0.75rem, 2vw, 1rem);
            font-size: clamp(1rem, 3vw, 1.2rem);
        }

        .address-details {
            font-size: clamp(0.8rem, 2.5vw, 0.9rem);
            color: var(--dark-text);
            margin-bottom: 1rem;
            padding: clamp(0.75rem, 2vw, 1rem);
            background: var(--light-bg);
            border: 1px solid var(--border-color);
            transition: all 0.3s ease;
        }

        .address-details:hover {
            transform: translateY(-2px);
        }

        .default-address {
            border: 2px solid var(--muted-green);
            background: rgba(169, 186, 157, 0.1);
        }

        .default-badge {
            background: var(--muted-green);
            color: white;
            padding: clamp(0.2rem, 1vw, 0.3rem) clamp(0.4rem, 1.5vw, 0.6rem);
            font-size: clamp(0.6rem, 2vw, 0.7rem);
            margin-bottom: 0.75rem;
            display: inline-block;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .other-addresses-title {
            font-family: 'Aboreto', cursive;
            font-size: clamp(0.9rem, 3vw, 1.1rem);
            margin: clamp(0.75rem, 2vw, 1rem) 0;
            color: var(--darker-text);
            letter-spacing: 1px;
        }

        .address-actions {
            display: flex;
            flex-wrap: wrap;
            gap: clamp(0.5rem, 2vw, 0.75rem);
            margin-top: 0.75rem;
        }

        .address-btn {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            padding: clamp(0.4rem, 1.5vw, 0.5rem) clamp(0.75rem, 2vw, 1rem);
            background: var(--light-bg);
            border: 1px solid var(--border-color);
            color: var(--darker-text);
            font-family: 'Jost', sans-serif;
            font-size: clamp(0.75rem, 2vw, 0.85rem);
            text-decoration: none;
            transition: all 0.3s ease;
            cursor: pointer;
        }

        .address-btn:hover {
            background: var(--darker-text);
            color: white;
            transform: translateY(-1px);
        }

        .address-btn i {
            font-size: clamp(0.75rem, 2vw, 0.85rem);
        }

        .set-default-btn {
            background: var(--darker-text);
            color: white;
            border: none;
            padding: clamp(0.4rem, 1.5vw, 0.5rem) clamp(0.75rem, 2vw, 1rem);
            font-family: 'Jost', sans-serif;
            font-size: clamp(0.75rem, 2vw, 0.85rem);
            transition: all 0.3s ease;
            cursor: pointer;
        }

        .set-default-btn:hover {
            background: var(--muted-green);
            transform: translateY(-1px);
        }

        .delivery-info {
            font-size: clamp(0.8rem, 2.5vw, 0.9rem);
            color: var(--dark-text);
            padding: clamp(0.75rem, 2vw, 1rem);
            background: var(--light-bg);
            border: 1px solid var(--border-color);
        }

        .delivery-info i {
            color: var(--soft-beige);
            margin-right: 0.5rem;
            font-size: clamp(0.8rem, 2.5vw, 0.9rem);
        }

        .order-item {
            display: flex;
            flex-direction: column;
            padding: clamp(0.75rem, 2vw, 1rem);
            margin-bottom: 1rem;
            background: transparent;
            border: 1px solid var(--border-color);
            transition: all 0.3s ease;
        }

        .order-item:hover {
            transform: translateY(-2px);
        }

        .order-item-img {
            width: 100%;
            max-width: clamp(80px, 20vw, 100px);
            height: auto;
            aspect-ratio: 1/1;
            object-fit: cover;
            margin-bottom: 0.75rem;
        }

        .order-item-details {
            flex: 1;
        }

        .order-item-name {
            font-family: 'Aboreto', cursive;
            font-size: clamp(0.9rem, 3vw, 1rem);
            margin-bottom: 0.5rem;
            color: var(--darker-text);
        }

        .order-item-info {
            color: var(--dark-text);
            font-size: clamp(0.75rem, 2vw, 0.85rem);
            margin-bottom: 0.25rem;
        }

        .order-item-price {
            font-weight: 500;
            color: var(--darker-text);
            font-size: clamp(0.85rem, 2.5vw, 0.95rem);
        }

        .discount-badge .badge {
            font-size: clamp(0.7rem, 2vw, 0.8rem);
            padding: clamp(0.25rem, 1vw, 0.35rem) clamp(0.5rem, 1.5vw, 0.65rem);
        }

        .discount-badge .badge.bg-success {
            background: var(--muted-green) !important;
        }

        .discount-badge .badge.bg-primary {
            background: var(--soft-beige) !important;
            color: var(--darker-text);
        }

        .text-decoration-line-through {
            text-decoration: line-through;
            opacity: 0.7;
        }

        .text-success {
            color: var(--muted-green) !important;
        }

        .coupon-section {
            margin-top: clamp(1rem, 3vw, 1.5rem);
            padding-top: clamp(1rem, 3vw, 1.5rem);
            border-top: 1px solid var(--border-color);
        }

        .coupon-title {
            font-family: 'Aboreto', cursive;
            color: var(--darker-text);
            letter-spacing: 1.5px;
            text-transform: uppercase;
            font-weight: 400;
            margin-bottom: clamp(0.75rem, 2vw, 1rem);
            font-size: clamp(0.9rem, 3vw, 1rem);
        }

        .coupon-input-group {
            display: flex;
            flex-direction: column;
            gap: 0.5rem;
        }

        .coupon-input {
            border: 1px solid var(--border-color);
            padding: clamp(0.5rem, 2vw, 0.75rem);
            font-family: 'Jost', sans-serif;
            font-size: clamp(0.8rem, 2.5vw, 0.9rem);
            background: var(--light-bg);
        }

        .coupon-input:focus {
            outline: none;
            border-color: var(--soft-beige);
        }

        .apply-coupon-btn {
            background: var(--darker-text);
            border: none;
            color: white;
            padding: clamp(0.5rem, 2vw, 0.75rem);
            font-size: clamp(0.8rem, 2.5vw, 0.9rem);
            display: flex;
            align-items: center;
            justify-content: center;
            transition: all 0.3s ease;
            cursor: pointer;
        }

        .apply-coupon-btn:hover:not(:disabled) {
            background: var(--muted-green);
            transform: translateY(-1px);
        }

        .apply-coupon-btn:disabled {
            opacity: 0.7;
            cursor: not-allowed;
            background: #ccc;
        }

        .coupon-list {
            display: flex;
            flex-direction: column;
            gap: clamp(0.5rem, 2vw, 0.75rem);
        }

        .coupon-item {
            background: var(--light-bg);
            border: 2px dashed var(--soft-beige);
            padding: clamp(0.5rem, 2vw, 0.75rem);
            transition: all 0.3s ease;
            cursor: pointer;
        }

        .coupon-item:hover:not(.applied):not(.used) {
            transform: translateY(-2px);
            border-color: var(--muted-green);
        }

        .coupon-code {
            font-family: 'Aboreto', cursive;
            color: var(--darker-text);
            font-size: clamp(0.8rem, 2.5vw, 0.9rem);
            margin-bottom: 0.5rem;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .coupon-code i {
            color: var(--soft-beige);
        }

        .coupon-details {
            font-size: clamp(0.75rem, 2vw, 0.85rem);
        }

        .coupon-discount {
            color: var(--offer-red);
            font-weight: 600;
        }

        .coupon-min-order,
        .coupon-expiry {
            font-size: clamp(0.7rem, 2vw, 0.8rem);
            margin-top: 0.25rem;
        }

        .copy-coupon-btn {
            background: var(--darker-text);
            border: none;
            color: white;
            width: clamp(24px, 8vw, 28px);
            height: clamp(24px, 8vw, 28px);
            display: flex;
            align-items: center;
            justify-content: center;
            transition: all 0.3s ease;
            cursor: pointer;
        }

        .copy-coupon-btn:hover {
            background: var(--muted-green);
        }

        .applied-coupon {
            background: rgba(212, 185, 150, 0.1);
            border: 1px solid rgba(212, 185, 150, 0.2);
            padding: clamp(0.5rem, 2vw, 0.75rem);
            margin: 0.5rem 0;
        }

        .applied-coupon .coupon-code {
            background: rgba(212, 185, 150, 0.2);
            color: var(--soft-beige);
            padding: 0.25rem 0.5rem;
            font-size: clamp(0.75rem, 2vw, 0.85rem);
        }

        .remove-coupon-btn {
            background: none;
            border: none;
            color: #6c757d;
            width: clamp(20px, 6vw, 24px);
            height: clamp(20px, 6vw, 24px);
            display: flex;
            align-items: center;
            justify-content: center;
            transition: all 0.3s ease;
            cursor: pointer;
        }

        .remove-coupon-btn:hover {
            color: var(--offer-red);
            background: rgba(220, 53, 69, 0.1);
        }

        .discount-amount {
            color: var(--muted-green);
            font-weight: 600;
            font-size: clamp(0.85rem, 2.5vw, 1rem);
        }

        .coupon-item.applied {
            background: rgba(212, 185, 150, 0.15);
            border: 2px solid var(--soft-beige);
            cursor: default;
        }

        .coupon-item.used {
            opacity: 0.7;
            cursor: not-allowed;
            background: #f8f8f8;
            border: 2px dashed #ccc;
        }

        .order-summary {
            position: relative;
            margin-top: clamp(1rem, 3vw, 1.5rem);
        }

        .summary-row {
            display: flex;
            justify-content: space-between;
            margin-bottom: clamp(0.5rem, 2vw, 0.75rem);
            font-size: clamp(0.8rem, 2.5vw, 0.9rem);
        }

        .summary-total {
            font-weight: 600;
            font-size: clamp(1rem, 3vw, 1.2rem);
            margin-top: clamp(0.75rem, 2vw, 1rem);
            padding-top: clamp(0.75rem, 2vw, 1rem);
            border-top: 1px solid var(--border-color);
        }

        .checkout-btn {
            background: var(--darker-text);
            border: none;
            color: white;
            font-family: 'Jost', sans-serif;
            font-size: clamp(0.85rem, 2.5vw, 1rem);
            padding: clamp(0.75rem, 2vw, 1rem);
            width: 100%;
            margin-top: clamp(1rem, 3vw, 1.5rem);
            transition: all 0.3s ease;
            text-transform: uppercase;
            letter-spacing: 1px;
        }

        .checkout-btn:hover:not(:disabled) {
            background: var(--muted-green);
            transform: translateY(-2px);
        }

        .checkout-btn:disabled {
            opacity: 0.5;
            cursor: not-allowed;
            background: #ccc;
        }

        .empty-cart {
            text-align: center;
            padding: clamp(1.5rem, 5vw, 2rem);
        }

        .empty-cart-icon {
            font-size: clamp(2rem, 6vw, 3rem);
            color: var(--soft-beige);
            margin-bottom: clamp(0.75rem, 2vw, 1rem);
        }

        .empty-cart-text {
            font-family: 'Aboreto', cursive;
            color: var(--darker-text);
            font-size: clamp(1rem, 4vw, 1.2rem);
            margin-bottom: clamp(0.5rem, 2vw, 0.75rem);
        }

        .empty-cart-subtext {
            color: var(--dark-text);
            font-size: clamp(0.8rem, 2.5vw, 0.9rem);
            margin-bottom: clamp(1rem, 3vw, 1.5rem);
        }

        .continue-shopping-btn {
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            padding: clamp(0.5rem, 2vw, 0.75rem) clamp(1rem, 3vw, 1.5rem);
            background: var(--darker-text);
            color: white;
            border: none;
            font-family: 'Jost', sans-serif;
            font-size: clamp(0.8rem, 2.5vw, 0.9rem);
            text-decoration: none;
            transition: all 0.3s ease;
            text-transform: uppercase;
        }

        .continue-shopping-btn:hover {
            background: var(--muted-green);
            transform: translateY(-2px);
        }

        .main-content-container {
            padding: clamp(0.75rem, 3vw, 1.5rem);
            max-width: 1400px;
            margin: 0 auto;
        }

        .show-addresses-btn,
        .show-coupons-btn {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            padding: clamp(0.4rem, 1.5vw, 0.5rem) clamp(0.75rem, 2vw, 1rem);
            background: var(--light-bg);
            border: 2px solid var(--soft-beige);
            color: var(--soft-beige);
            font-family: 'Jost', sans-serif;
            font-size: clamp(0.75rem, 2vw, 0.85rem);
            transition: all 0.3s ease;
            cursor: pointer;
        }

        .show-addresses-btn:hover,
        .show-coupons-btn:hover {
            background: var(--soft-beige);
            color: white;
        }

        .show-addresses-btn.active,
        .show-coupons-btn.active {
            background: var(--soft-beige);
            color: white;
        }

        .show-addresses-btn.active i,
        .show-coupons-btn.active i {
            transform: rotate(180deg);
        }

        .profile-dropdown {
            position: relative;
        }

        .profile-dropdown-content {
            display: none;
            position: absolute;
            right: 0;
            background: white;
            min-width: clamp(120px, 40vw, 160px);
            box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1);
            z-index: 1000;
            padding: 0.5rem 0;
        }

        .profile-dropdown:hover .profile-dropdown-content {
            display: block;
        }

        .profile-dropdown-content a {
            color: var(--dark-text);
            padding: 0.5rem 1rem;
            font-size: clamp(0.75rem, 2vw, 0.85rem);
            transition: background-color 0.3s ease;
        }

        .profile-dropdown-content a:hover {
            background-color: var(--light-bg);
            color: var(--muted-green);
        }

        .badge.bg-secondary {
            background-color: #6c757d !important;
            font-size: clamp(0.65rem, 2vw, 0.75rem);
            padding: clamp(0.2rem, 1vw, 0.25rem) clamp(0.4rem, 1.5vw, 0.6rem);
        }

        /* Responsive Adjustments */
        @media (min-width: 768px) {
            .navbar {
                flex-wrap: nowrap;
            }

            .nav-links {
                justify-content: center;
            }

            .checkout-grid {
                flex-direction: row;
                display: grid;
                grid-template-columns: 1fr minmax(280px, 400px);
            }

            .order-item {
                flex-direction: row;
                align-items: center;
            }

            .order-item-img {
                width: clamp(60px, 15vw, 80px);
                margin-bottom: 0;
                margin-right: clamp(0.75rem, 2vw, 1rem);
            }

            .coupon-input-group {
                flex-direction: row;
                align-items: center;
            }

            .coupon-input {
                flex: 1;
            }

            .apply-coupon-btn {
                width: clamp(36px, 10vw, 42px);
                padding: 0;
            }
        }

        @media (min-width: 992px) {
            .main-content-container {
                padding: clamp(1.5rem, 4vw, 2rem);
            }

            .order-summary {
                position: sticky;
                top: clamp(1rem, 3vw, 1.5rem);
            }
        }

        @media (max-width: 767px) {
            .navbar {
                flex-direction: column;
                align-items: flex-start;
            }

            .brand {
                margin-bottom: 0.5rem;
            }

            .nav-links {
                flex-direction: column;
                align-items: flex-start;
                width: 100%;
            }

            .nav-link {
                padding: 0.5rem 0;
            }

            .icon-links {
                width: 100%;
                justify-content: flex-start;
            }

            .search-container {
                max-width: 100%;
            }

            .search-input {
                font-size: clamp(0.75rem, 2vw, 0.85rem);
            }

            .checkout-title {
                font-size: clamp(1rem, 4vw, 1.4rem);
            }

            .section-title {
                font-size: clamp(0.85rem, 2.5vw, 1rem);
            }

            .address-details {
                font-size: clamp(0.75rem, 2vw, 0.85rem);
            }

            .address-btn, .set-default-btn {
                font-size: clamp(0.7rem, 2vw, 0.8rem);
                padding: clamp(0.3rem, 1vw, 0.4rem) clamp(0.5rem, 1.5vw, 0.75rem);
            }

            .delivery-info {
                font-size: clamp(0.7rem, 2vw, 0.8rem);
            }

            .order-item-img {
                max-width: clamp(80px, 25vw, 100px);
            }

            .coupon-input {
                font-size: clamp(0.75rem, 2vw, 0.85rem);
            }

            .coupon-code {
                font-size: clamp(0.75rem, 2vw, 0.85rem);
            }

            .coupon-details {
                font-size: clamp(0.7rem, 2vw, 0.8rem);
            }

            .empty-cart-icon {
                font-size: clamp(1.5rem, 5vw, 2rem);
            }
        }

        @media (max-width: 576px) {
            .main-content-container {
                padding: clamp(0.5rem, 2vw, 1rem);
            }

            .address-details {
                font-size: clamp(0.7rem, 2vw, 0.8rem);
            }

            .coupon-item {
                padding: clamp(0.4rem, 1.5vw, 0.5rem);
            }

            .checkout-btn {
                font-size: clamp(0.75rem, 2vw, 0.85rem);
            }
        }
    </style>
</head>
<body>
    <nav class="navbar">
        <div class="brand" id="sidebarToggle">
            <i class="fas fa-leaf brand-icon"></i>
            <span class="brand-text">LUME</span>
        </div>
        <ul class="nav-links">
            <li><a href="/" class="nav-link">Home</a></li>
            <li><a href="/shopAll" class="nav-link">Shop All</a></li>
            <li><a href="/featured" class="nav-link">Featured</a></li>
            <li><a href="/new-arrivals" class="nav-link">New Arrivals</a></li>
        </ul>
        <ul class="icon-links">
            <li>
                <form action="/shopAll" method="GET" class="d-flex align-items-center">
                    <div class="search-container">
                        <input type="text" name="search" placeholder="Search products..." class="search-input form-control">
                        <button type="submit" class="search-button">
                            <i class="fas fa-search search-icon"></i>
                        </button>
                    </div>
                </form>
            </li>
            <li><a href="/wishlist" class="icon-link"><i class="fas fa-heart"></i></a></li>
            <li><a href="/cart" class="icon-link"><i class="fas fa-shopping-cart"></i></a></li>
            <li>
                <div class="profile-dropdown">
                    <a href="#" class="icon-link"><i class="far fa-user"></i></a>
                    <div class="profile-dropdown-content">
                        <% if (locals.user) { %>
                            <a href="/profile"><i class="fas fa-user"></i> My Profile</a>
                            <a href="/orders"><i class="fas fa-box"></i> My Orders</a>
                            <a href="/wishlist"><i class="fas fa-heart"></i> Wishlist</a>
                            <a href="/logout"><i class="fas fa-sign-out-alt"></i> Logout</a>
                        <% } else { %>
                            <a href="/login"><i class="fas fa-sign-in-alt"></i> Login</a>
                            <a href="/signup"><i class="fas fa-user-plus"></i> Sign Up</a>
                        <% } %>
                    </div>
                </div>
            </li>
        </ul>
    </nav>
    <div class="container-fluid main-content-container">
        <h1 class="checkout-title">Checkout</h1>
        <div class="checkout-grid">
            <div class="checkout-main">
                <!-- Order Section -->
                <div class="checkout-section">
                    <h2 class="section-title">Your Order</h2>
                    <% if (items && items.length > 0) { %>
                        <% items.forEach(item => { %>
                            <div class="order-item" data-id="<%= item._id %>">
                                <img src="/Uploads/product/<%= item.productId.productImage[0] %>" alt="<%= item.productId.productName %>" class="order-item-img">
                                <div class="order-item-details">
                                    <h3 class="order-item-name"><%= item.productId.productName %></h3>
                                    <p class="order-item-info">Size: <%= item.size || 'Default' %></p>
                                    <p class="order-item-info">Quantity: <%= item.quantity %></p>
                                    <div class="order-item-price">
                                        <% if (item.offerDiscount > 0) { %>
                                            <span class="text-decoration-line-through text-muted">â‚¹<%= (item.originalPrice).toLocaleString() %></span>
                                            <span class="text-success ms-2">â‚¹<%= (item.originalPrice - item.offerDiscount).toLocaleString() %></span>
                                            <div class="discount-badge">
                                                <% if (item.offerDiscount > 0) { %>
                                                    <span class="badge bg-success me-2">Offer: -â‚¹<%= item.offerDiscount.toLocaleString() %></span>
                                                <% } %>
                                                <% if (item.couponDiscount > 0) { %>
                                                    <span class="badge bg-primary">Coupon: -â‚¹<%= item.couponDiscount.toLocaleString() %></span>
                                                <% } %>
                                            </div>
                                        <% } else { %>
                                            <span>â‚¹<%= item.totalPrice.toLocaleString() %></span>
                                        <% } %>
                                    </div>
                                </div>
                            </div>
                        <% }) %>
                    <% } else { %>
                        <div class="empty-cart">
                            <i class="fas fa-shopping-cart empty-cart-icon"></i>
                            <h3 class="empty-cart-text">Your cart is empty</h3>
                            <p class="empty-cart-subtext">Looks like you haven't added any items to your cart yet.</p>
                            <a href="/shopAll" class="continue-shopping-btn">
                                <i class="fas fa-shopping-cart"></i> Continue Shopping
                            </a>
                        </div>
                    <% } %>
                </div>
                <!-- Address Section -->
                <div class="checkout-section">
                    <h2 class="section-title">Select Address</h2>
                    <% if (typeof addresses !== 'undefined' && addresses.length > 0) { %>
                        <% const defaultAddress = addresses.find(addr => addr.isDefault) || addresses[0]; %>
                        <% const otherAddresses = addresses.filter(addr => addr._id.toString() !== defaultAddress._id.toString()); %>
                        <div class="address-details default-address" data-address-id="<%= defaultAddress._id %>">
                            <div class="default-badge">Default Address</div>
                            <p><strong><%= defaultAddress.name %></strong></p>
                            <p><%= defaultAddress.houseNo || '' %>, <%= defaultAddress.roadArea || '' %></p>
                            <p><%= defaultAddress.city %>, <%= defaultAddress.state %> - <%= defaultAddress.pincode %></p>
                            <p>Phone: <%= defaultAddress.phone %></p>
                            <div class="address-actions">
                                <a href="/update/address/<%= defaultAddress._id %>?from=checkout" class="address-btn">
                                    <i class="fas fa-edit"></i> Edit
                                </a>
                                <button class="address-btn remove-btn" onclick="removeAddress('<%= defaultAddress._id %>')">
                                    <i class="fas fa-trash"></i> Remove
                                </button>
                            </div>
                        </div>
                        <% if (otherAddresses.length > 0) { %>
                            <div class="d-flex justify-content-between align-items-center mb-3">
                                <h3 class="other-addresses-title mb-0">Other Addresses</h3>
                                <button class="show-addresses-btn" onclick="toggleAddresses()">
                                    <span class="show-text">Show All</span>
                                    <i class="fas fa-chevron-down"></i>
                                </button>
                            </div>
                            <div class="address-list" id="addressList" style="display: none;">
                                <% otherAddresses.forEach(address => { %>
                                    <div class="address-details" data-address-id="<%= address._id %>">
                                        <p><strong><%= address.name %></strong></p>
                                        <p><%= address.houseNo || '' %>, <%= address.roadArea || '' %></p>
                                        <p><%= address.city %>, <%= address.state %> - <%= address.pincode %></p>
                                        <p>Phone: <%= address.phone %></p>
                                        <div class="address-actions">
                                            <button class="set-default-btn" onclick="setDefaultAddress('<%= address._id %>')">
                                                Set as Default
                                            </button>
                                            <a href="/update/address/<%= address._id %>?from=checkout" class="address-btn">
                                                <i class="fas fa-edit"></i> Edit
                                            </a>
                                            <button class="address-btn remove-btn" onclick="removeAddress('<%= address._id %>')">
                                                <i class="fas fa-trash"></i> Remove
                                            </button>
                                        </div>
                                    </div>
                                <% }) %>
                            </div>
                        <% } %>
                    <% } else { %>
                        <div class="address-details">
                            <p>No address provided</p>
                        </div>
                    <% } %>
                    <div class="address-actions">
                        <a href="/add-address?from=checkout" class="address-btn">
                            <i class="fas fa-plus"></i> Add New Address
                        </a>
                    </div>
                </div>
                <!-- Delivery Information Section -->
                <div class="checkout-section">
                    <h2 class="section-title">Delivery Information</h2>
                    <div class="delivery-info">
                        <p><i class="fas fa-truck"></i> Estimated Delivery: <%= new Date(Date.now() + 7 * 24 * 60 * 60 * 1000).toLocaleDateString('en-US', { month: 'long', day: 'numeric', year: 'numeric' }) %></p>
                        <p><i class="fas fa-shipping-fast"></i> Shipping Method: Standard Shipping</p>
                        <p><i class="fas fa-map-marker-alt"></i> Tracking: Available upon dispatch</p>
                    </div>
                </div>
            </div>
            <!-- Order Summary Sidebar -->
            <div class="order-summary">
                <div class="checkout-section">
                    <h2 class="section-title">Order Summary</h2>
                    <% if (items && items.length > 0) { %>
                        <div class="summary-row">
                            <span>Subtotal</span>
                            <span id="subtotal">â‚¹<%= totalPrice.toLocaleString() %></span>
                        </div>
                        <div class="summary-row text-success" id="offer-discount-row" style="display: <%= totalOfferDiscount > 0 ? 'flex' : 'none' %>;">
                            <span>Offer Discount</span>
                            <span id="offer-discount">-â‚¹<%= totalOfferDiscount.toLocaleString() %></span>
                        </div>
                        <div class="summary-row text-success" id="coupon-discount-row" style="display: <%= totalCouponDiscount > 0 ? 'flex' : 'none' %>;">
                            <span>Coupon Discount</span>
                            <span id="coupon-discount">-â‚¹<%= totalCouponDiscount.toLocaleString() %></span>
                        </div>
                        <div class="summary-row">
                            <span>Shipping</span>
                            <span id="shipping"><%= shipping === 0 ? 'Free' : 'â‚¹' + shipping.toLocaleString() %></span>
                        </div>
                        <div class="summary-row summary-total">
                            <span>Total</span>
                            <span id="finalPrice">â‚¹<%= finalPrice.toLocaleString() %></span>
                        </div>
                        <div class="coupon-section">
                            <h4 class="coupon-title">Apply Coupon</h4>
                            <div class="coupon-input-group">
                                <input type="text" class="coupon-input" id="couponCode" placeholder="Enter coupon code" <%= appliedCoupon ? 'disabled' : '' %>>
                                <button class="apply-coupon-btn" onclick="applyCoupon()" <%= appliedCoupon ? 'disabled' : '' %>>
                                    <i class="fas fa-check"></i> Apply
                                </button>
                            </div>
                            <% if (appliedCoupon) { %>
                                <div class="applied-coupon">
                                    <div class="d-flex align-items-center justify-content-between">
                                        <div class="d-flex align-items-center gap-2">
                                            <span class="text-success">Coupon Applied:</span>
                                            <span class="coupon-code"><i class="fas fa-tag"></i> <%= appliedCoupon.code %></span>
                                            <span class="text-success">(<%= appliedCoupon.discountType === 'percentage' ? 
                                                `${appliedCoupon.discountValue}% off` : 
                                                `â‚¹${appliedCoupon.discountValue} off` %>)</span>
                                        </div>
                                        <button class="remove-coupon-btn" onclick="removeCoupon()" title="Remove coupon">
                                            <i class="fas fa-times"></i>
                                        </button>
                                    </div>
                                    <div class="text-success mt-1">
                                        You saved: â‚¹<%= totalCouponDiscount.toLocaleString() %>
                                    </div>
                                </div>
                            <% } %>
                            <div class="available-coupons">
                                <div class="d-flex justify-content-between align-items-center mb-3">
                                    <h4 class="coupon-title mb-0">Available Coupons</h4>
                                    <button class="show-coupons-btn" onclick="toggleCoupons()">
                                        <span class="show-text">Show All</span>
                                        <i class="fas fa-chevron-down"></i>
                                    </button>
                                </div>
                                <div class="coupon-list" id="couponList" style="display: none;">
                                    <% if (coupons && coupons.length > 0) { %>
                                        <% coupons.forEach(coupon => { %>
                                            <div class="coupon-item <%= appliedCoupon && appliedCoupon.code === coupon.code ? 'applied' : '' %> <%= coupon.usedBy && coupon.usedBy.includes(user.id) ? 'used' : '' %>"
                                                style="<%= coupon.usedBy && coupon.usedBy.includes(user.id) ? 'pointer-events: none; opacity: 0.7; cursor: not-allowed;' : '' %>"
                                                onclick="<%= (!appliedCoupon && !(coupon.usedBy && coupon.usedBy.includes(user.id))) ? `selectCoupon('${coupon.code}')` : '' %>">
                                                <div class="d-flex align-items-center justify-content-between">
                                                    <div class="coupon-code">
                                                        <i class="fas fa-tag"></i>
                                                        <%= coupon.code %>
                                                        <% if (coupon.usedBy && coupon.usedBy.includes(user.id)) { %>
                                                            <span class="badge bg-secondary ms-2">Already Used</span>
                                                        <% } %>
                                                    </div>
                                                    <button class="copy-coupon-btn" onclick="copyCouponCode('<%= coupon.code %>', event)" title="Copy coupon code">
                                                        <i class="fas fa-copy"></i>
                                                    </button>
                                                </div>
                                                <div class="coupon-details">
                                                    <span class="coupon-discount">
                                                        <%= coupon.discountType === 'percentage' ? 
                                                            `${coupon.discountValue}% OFF` : 
                                                            `â‚¹${coupon.discountValue} OFF` %>
                                                    </span>
                                                    <% if (coupon.maxDiscount) { %>
                                                        <span class="coupon-min-order">
                                                            (Max discount: â‚¹<%= coupon.maxDiscount %>)
                                                        </span>
                                                    <% } %>
                                                </div>
                                                <% if (coupon.minOrderAmount) { %>
                                                    <div class="coupon-min-order">
                                                        Min. order: â‚¹<%= coupon.minOrderAmount %>
                                                    </div>
                                                <% } %>
                                                <% if (coupon.expiryDate) { %>
                                                    <div class="coupon-expiry">
                                                        Expires: <%= new Date(coupon.expiryDate).toLocaleDateString() %>
                                                    </div>
                                                <% } %>
                                                <% if (coupon.usedBy && coupon.usedBy.includes(user.id)) { %>
                                                    <div class="text-muted mt-2">
                                                        <small><i class="fas fa-info-circle"></i> You have already used this coupon in a previous order</small>
                                                    </div>
                                                <% } %>
                                            </div>
                                        <% }) %>
                                    <% } else { %>
                                        <p class="text-muted">No coupons available at the moment</p>
                                    <% } %>
                                </div>
                            </div>
                        </div>
                        <button class="checkout-btn" onclick="proceedToPayment()" <%= items.length === 0 ? 'disabled' : '' %>>
                            <i class="fas fa-lock"></i> Proceed to Payment
                        </button>
                    <% } else { %>
                        <div class="summary-row">
                            <span>Subtotal</span>
                            <span>â‚¹0</span>
                        </div>
                        <div class="summary-row">
                            <span>Shipping</span>
                            <span>Free</span>
                        </div>
                        <div class="summary-row summary-total">
                            <span>Total</span>
                            <span>â‚¹0</span>
                        </div>
                        <button class="checkout-btn" disabled>
                            <i class="fas fa-lock"></i> Proceed to Payment
                        </button>
                    <% } %>
                </div>
            </div>
        </div>
    </div>

    <%- include("../../views/partials/user/fooret.ejs") %>

    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.8/dist/umd/popper.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/toastify-js"></script>
    <script>
        console.log('Checkout page script loaded');

        function setDefaultAddress(addressId) {
            Swal.fire({
                title: 'Set as Default?',
                text: 'Do you want to set this address as your default address?',
                icon: 'question',
                showCancelButton: true,
                confirmButtonColor: '#3e4c22',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, set as default'
            }).then((result) => {
                if (result.isConfirmed) {
                    fetch('/set-default-address', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'Accept': 'application/json'
                        },
                        body: JSON.stringify({ addressId })
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            Swal.fire({
                                toast: true,
                                position: 'top-end',
                                icon: 'success',
                                title: 'Default address updated successfully',
                                showConfirmButton: false,
                                timer: 3000,
                                timerProgressBar: true
                            }).then(() => {
                                location.reload();
                            });
                        } else {
                            Swal.fire({
                                toast: true,
                                position: 'top-end',
                                icon: 'error',
                                title: data.message || 'Failed to set default address',
                                showConfirmButton: false,
                                timer: 3000,
                                timerProgressBar: true
                            });
                        }
                    })
                    .catch(error => {
                        Swal.fire({
                            toast: true,
                            position: 'top-end',
                            icon: 'error',
                            title: 'An error occurred while setting default address',
                            showConfirmButton: false,
                            timer: 3000,
                            timerProgressBar: true
                        });
                    });
                }
            });
        }

        function removeAddress(addressId) {
            Swal.fire({
                title: 'Remove Address?',
                text: 'Are you sure you want to remove this address?',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3e4c22',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, remove it'
            }).then((result) => {
                if (result.isConfirmed) {
                    fetch('/remove-address', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'Accept': 'application/json'
                        },
                        body: JSON.stringify({ addressId })
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            Swal.fire({
                                toast: true,
                                position: 'top-end',
                                icon: 'success',
                                title: 'Address removed successfully',
                                showConfirmButton: false,
                                timer: 3000,
                                timerProgressBar: true
                            }).then(() => {
                                location.reload();
                            });
                        } else {
                            Swal.fire({
                                toast: true,
                                position: 'top-end',
                                icon: 'error',
                                title: data.message || 'Failed to remove address',
                                showConfirmButton: false,
                                timer: 3000,
                                timerProgressBar: true
                            });
                        }
                    })
                    .catch(error => {
                        Swal.fire({
                            toast: true,
                            position: 'top-end',
                            icon: 'error',
                            title: 'An error occurred while removing the address',
                            showConfirmButton: false,
                            timer: 3000,
                            timerProgressBar: true
                        });
                    });
                }
            });
        }

        function toggleAddresses() {
            const addressList = document.getElementById('addressList');
            const showBtn = document.querySelector('.show-addresses-btn');
            const showText = showBtn.querySelector('.show-text');
            addressList.style.display = addressList.style.display === 'none' ? 'block' : 'none';
            showText.textContent = addressList.style.display === 'none' ? 'Show All' : 'Hide';
            showBtn.classList.toggle('active');
        }

        function updateSummaryDiscounts(offerDiscount, couponDiscount) {
            const offerDiscountRow = document.getElementById('offer-discount-row');
            const couponDiscountRow = document.getElementById('coupon-discount-row');
            offerDiscountRow.style.display = offerDiscount > 0 ? 'flex' : 'none';
            if (offerDiscount > 0) {
                document.getElementById('offer-discount').textContent = `-â‚¹${offerDiscount.toLocaleString()}`;
            }
            couponDiscountRow.style.display = couponDiscount > 0 ? 'flex' : 'none';
            if (couponDiscount > 0) {
                document.getElementById('coupon-discount').textContent = `-â‚¹${couponDiscount.toLocaleString()}`;
            }
        }

        async function applyCoupon() {
            const code = document.getElementById('couponCode').value.trim();
            if (!code) {
                showNotification('Please enter a coupon code', 'error');
                return;
            }
            await applyCouponCode(code);
        }

        async function selectCoupon(code) {
            const couponInput = document.getElementById('couponCode');
            const applyButton = document.querySelector('.apply-coupon-btn');
            couponInput.value = code;
            applyButton.disabled = false;
            await applyCouponCode(code);
        }

        async function copyCouponCode(code, event) {
            event.stopPropagation();
            try {
                await navigator.clipboard.writeText(code);
                showNotification('Coupon code copied to clipboard', 'success');
            } catch (error) {
                showNotification('Failed to copy coupon code', 'error');
            }
        }

        async function applyCouponCode(code) {
            try {
                const response = await fetch('/apply-coupon', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'Accept': 'application/json'
                    },
                    body: JSON.stringify({ code })
                });

                if (!response.ok) {
                    const errorData = await response.json().catch(() => ({}));
                    let errorMessage = errorData.message || 'Failed to apply coupon';
                    if (response.status === 401) errorMessage = 'Please log in to apply coupon';
                    else if (response.status === 400) errorMessage = errorData.message || 'Invalid coupon code';
                    else if (response.status === 500) errorMessage = 'Server error occurred';
                    showNotification(errorMessage, 'error');
                    return;
                }

                const data = await response.json();
                if (data.success) {
                    showNotification(data.message || 'Coupon applied successfully', 'success');
                    document.getElementById('subtotal').textContent = `â‚¹${data.totals.subtotal.toLocaleString()}`;
                    document.getElementById('shipping').textContent = data.totals.shipping === 0 ? 'Free' : `â‚¹${data.totals.shipping.toLocaleString()}`;
                    document.getElementById('finalPrice').textContent = `â‚¹${data.totals.finalPrice.toLocaleString()}`;
                    updateSummaryDiscounts(data.totals.offerDiscount, data.totals.couponDiscount);

                    let couponSection = document.querySelector('.applied-coupon');
                    if (!couponSection) {
                        couponSection = document.createElement('div');
                        couponSection.className = 'applied-coupon';
                        document.querySelector('.coupon-input-group').after(couponSection);
                    }
                    const discountText = data.coupon.discountType === 'percentage' 
                        ? `${data.coupon.discountValue}% off` 
                        : `â‚¹${data.coupon.discountValue.toLocaleString()} off`;
                    couponSection.innerHTML = `
                        <div class="d-flex align-items-center justify-content-between">
                            <div class="d-flex align-items-center gap-2">
                                <span class="text-success">Coupon Applied:</span>
                                <span class="coupon-code"><i class="fas fa-tag"></i> ${data.coupon.code}</span>
                                <span class="text-success">(${discountText})</span>
                            </div>
                            <button class="remove-coupon-btn" onclick="removeCoupon()" title="Remove coupon">
                                <i class="fas fa-times"></i>
                            </button>
                        </div>
                        <div class="text-success mt-1">
                            You saved: â‚¹${data.totals.couponDiscount.toLocaleString()}
                        </div>
                    `;
                    document.getElementById('couponCode').value = '';
                    document.getElementById('couponCode').disabled = true;
                    document.querySelector('.apply-coupon-btn').disabled = true;
                    document.querySelectorAll('.coupon-item').forEach(item => {
                        const codeText = item.querySelector('.coupon-code').textContent.trim().split(' ')[0];
                        if (codeText === data.coupon.code) {
                            item.classList.add('applied');
                            item.onclick = null;
                        }
                    });
                    if (Array.isArray(data.items)) {
                        data.items.forEach(item => {
                            const orderItem = document.querySelector(`.order-item[data-id="${item._id}"]`);
                            if (orderItem) {
                                const priceElement = orderItem.querySelector('.order-item-price');
                                priceElement.innerHTML = item.offerDiscount || item.couponDiscount
                                    ? `<span class="text-decoration-line-through text-muted">â‚¹${(item.originalPrice * item.quantity).toLocaleString()}</span> <span class="text-success ms-2">â‚¹${item.totalPrice.toLocaleString()}</span>`
                                    : `â‚¹${item.totalPrice.toLocaleString()}`;
                                const discountBadge = orderItem.querySelector('.discount-badge');
                                if (discountBadge) {
                                    let badgeHTML = '';
                                    if (item.offerDiscount > 0) {
                                        badgeHTML += `<span class="badge bg-success me-2">Offer: -â‚¹${item.offerDiscount.toLocaleString()}</span>`;
                                    }
                                    if (item.couponDiscount > 0) {
                                        badgeHTML += `<span class="badge bg-primary">Coupon: -â‚¹${item.couponDiscount.toLocaleString()}</span>`;
                                    }
                                    discountBadge.innerHTML = badgeHTML;
                                }
                            }
                        });
                    }
                    location.reload();
                } else {
                    showNotification(data.message || 'Failed to apply coupon', 'error');
                }
            } catch (error) {
                showNotification('Error applying coupon', 'error');
            }
        }

        async function removeCoupon() {
            const result = await Swal.fire({
                title: 'Remove Coupon',
                text: 'Are you sure you want to remove this coupon?',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3e4c22',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, remove it!'
            });
            if (!result.isConfirmed) return;

            try {
                const response = await fetch('/remove-coupon', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'Accept': 'application/json'
                    }
                });

                if (!response.ok) {
                    const errorData = await response.json().catch(() => ({}));
                    let errorMessage = errorData.message || 'Failed to remove coupon';
                    if (response.status === 401) errorMessage = 'Please log in to remove coupon';
                    else if (response.status === 400) errorMessage = errorData.message || 'Invalid request';
                    else if (response.status === 500) errorMessage = 'Server error occurred';
                    showNotification(errorMessage, 'error');
                    return;
                }

                const data = await response.json();
                if (data.success) {
                    document.querySelector('.applied-coupon')?.remove();
                    document.getElementById('subtotal').textContent = `â‚¹${data.totals.subtotal.toLocaleString()}`;
                    document.getElementById('shipping').textContent = data.totals.shipping === 0 ? 'Free' : `â‚¹${data.totals.shipping.toLocaleString()}`;
                    document.getElementById('finalPrice').textContent = `â‚¹${data.totals.finalPrice.toLocaleString()}`;
                    updateSummaryDiscounts(data.totals.offerDiscount, data.totals.couponDiscount);
                    document.getElementById('couponCode').disabled = false;
                    document.querySelector('.apply-coupon-btn').disabled = false;
                    document.querySelectorAll('.coupon-item').forEach(item => {
                        item.classList.remove('applied');
                        const code = item.querySelector('.coupon-code').textContent.trim().split(' ')[0];
                        if (!item.classList.contains('used')) {
                            item.onclick = () => selectCoupon(code);
                        }
                    });
                    if (Array.isArray(data.items)) {
                        data.items.forEach(item => {
                            const orderItem = document.querySelector(`.order-item[data-id="${item._id}"]`);
                            if (orderItem) {
                                const priceElement = orderItem.querySelector('.order-item-price');
                                priceElement.innerHTML = item.offerDiscount || item.couponDiscount
                                    ? `<span class="text-decoration-line-through text-muted">â‚¹${(item.originalPrice * item.quantity).toLocaleString()}</span> <span class="text-success ms-2">â‚¹${item.totalPrice.toLocaleString()}</span>`
                                    : `â‚¹${item.totalPrice.toLocaleString()}`;
                                const discountBadge = orderItem.querySelector('.discount-badge');
                                if (discountBadge) {
                                    let badgeHTML = '';
                                    if (item.offerDiscount > 0) {
                                        badgeHTML += `<span class="badge bg-success me-2">Offer: -â‚¹${item.offerDiscount.toLocaleString()}</span>`;
                                    }
                                    if (item.couponDiscount > 0) {
                                        badgeHTML += `<span class="badge bg-primary">Coupon: -â‚¹${item.couponDiscount.toLocaleString()}</span>`;
                                    }
                                    discountBadge.innerHTML = badgeHTML;
                                }
                            }
                        });
                    }
                    showNotification(data.message || 'Coupon removed successfully', 'success');
                    location.reload();
                } else {
                    showNotification(data.message || 'Failed to remove coupon', 'error');
                }
            } catch (error) {
                showNotification('Error removing coupon', 'error');
            }
        }

        function proceedToPayment() {
            if (!<%= addresses && addresses.length > 0 ? 'true' : 'false' %>) {
                Swal.fire({
                    toast: true,
                    position: 'top-end',
                    icon: 'warning',
                    title: 'Please add a shipping address before proceeding',
                    showConfirmButton: false,
                    timer: 3000,
                    timerProgressBar: true
                });
                return;
            }

            const defaultAddress = document.querySelector('.default-address');
            if (!defaultAddress) {
                Swal.fire({
                    toast: true,
                    position: 'top-end',
                    icon: 'error',
                    title: 'No default address found',
                    showConfirmButton: false,
                    timer: 3000,
                    timerProgressBar: true
                });
                return;
            }

            const addressId = defaultAddress.getAttribute('data-address-id');
            if (!addressId) {
                Swal.fire({
                    toast: true,
                    position: 'top-end',
                    icon: 'error',
                    title: 'Invalid address selection',
                    showConfirmButton: false,
                    timer: 3000,
                    timerProgressBar: true
                });
                return;
            }

            const payNowBtn = document.querySelector('.checkout-btn');
            if (payNowBtn) {
                payNowBtn.disabled = true;
                payNowBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Processing...';
            }

            window.location.href = `/proceed-payment?addressId=${addressId}`;
        }

        function showNotification(message, type) {
            Toastify({
                text: message,
                duration: 3000,
                gravity: "top",
                position: "right",
                backgroundColor: type === 'success' ? '#4a6741' : '#e63946',
                stopOnFocus: true,
                style: {
                    fontFamily: "'Jost', sans-serif",
                    fontSize: clamp(0.75rem, 2vw, 0.85rem),
                    padding: clamp(0.5rem, 2vw, 0.75rem),
                    borderRadius: "8px",
                    boxShadow: "0 4px 12px rgba(0,0,0,0.1)"
                }
            }).showToast();
        }

        function toggleCoupons() {
            const couponList = document.getElementById('couponList');
            const showBtn = document.querySelector('.show-coupons-btn');
            const showText = showBtn.querySelector('.show-text');
            couponList.style.display = couponList.style.display === 'none' ? 'block' : 'none';
            showText.textContent = couponList.style.display === 'none' ? 'Show All' : 'Hide';
            showBtn.classList.toggle('active');
        }

        document.addEventListener('DOMContentLoaded', () => {
            document.querySelectorAll('.set-default-btn').forEach(button => {
                button.addEventListener('click', () => {
                    const addressId = button.closest('.address-details').dataset.addressId;
                    if (addressId) setDefaultAddress(addressId);
                });
            });

            document.querySelectorAll('.remove-btn').forEach(button => {
                button.addEventListener('click', () => {
                    const addressId = button.closest('.address-details').dataset.addressId;
                    if (addressId) removeAddress(addressId);
                });
            });
        });
    </script>
</body>
</html>