<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Change Password</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://fonts.googleapis.com/css2?family=Jost:wght@300;400;500;600&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css">
    <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/toastify-js"></script>
    <style>
        :root {
            --dark-brown: #4a3728;
            --olive-green: #3a4f20;
            --border-color: #d3c9be;
            --cream: #f5f3ef;
        }

        body {
            font-family: 'Jost', sans-serif;
            background: var(--border-color);
            color: var(--dark-brown);
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
            margin: 0;
        }

        .form-container {
            background-color: var(--cream);
            padding: 2.5rem;
            border-radius: 12px;
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1), 0 4px 6px rgba(0, 0, 0, 0.05);
            max-width: 24rem;
            width: 100%;
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }

        .form-container:hover {
            transform: translateY(-5px);
            box-shadow: 0 12px 24px rgba(0, 0, 0, 0.15), 0 6px 8px rgba(0, 0, 0, 0.1);
        }

        .input-field {
            border: 1px solid var(--border-color);
            border-radius: 8px;
            padding: 12px 40px 12px 12px;
            font-size: 1rem;
            width: 100%;
            transition: border-color 0.3s ease, box-shadow 0.3s ease, transform 0.2s ease;
            font-family: 'Jost', sans-serif;
            background-color: white;
        }

        .input-field:focus {
            border-color: var(--olive-green);
            box-shadow: 0 0 10px rgba(58, 79, 32, 0.3);
            transform: scale(1.02);
            outline: none;
        }

        label {
            font-size: 0.95rem;
            font-weight: 500;
            color: var(--dark-brown);
            margin-bottom: 8px;
            display: block;
            letter-spacing: 0.02em;
        }

        .form-group {
            margin-bottom: 1.5rem;
            position: relative;
        }

        .password-toggle {
            position: absolute;
            right: 12px;
            top: 50%;
            transform: translateY(-50%);
            cursor: pointer;
            color: var(--dark-brown);
            transition: color 0.3s ease;
        }

        .password-toggle:hover {
            color: var(--olive-green);
        }

        .submit-btn {
            background:#3c2c20;
            color: white;
            padding: 14px;
            border-radius: 5px;
            font-size: 1.1rem;
            font-weight: lighter;
            transition: background 0.3s ease, transform 0.2s ease, box-shadow 0.3s ease;
            border: none;
            cursor: pointer;
            font-family: 'Jost', sans-serif;
            width: 100%;
            letter-spacing: 0.03em;
        }

        .submit-btn:hover {
            background:#2a3917;
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(58, 79, 32, 0.3);
        }

        .error-message {
            color: #dc2626;
            font-size: 0.875rem;
            margin-top: 0.25rem;
        }

        .input-field.error {
            border-color: #dc2626;
        }

        .password-strength {
            height: 5px;
            background-color: #e2e8f0;
            border-radius: 3px;
            margin-top: 8px;
            overflow: hidden;
        }

        .strength-meter {
            height: 100%;
            width: 0;
            transition: width 0.3s ease, background-color 0.3s ease;
            background: linear-gradient(90deg, #dc2626 0%, #f59e0b 50%, var(--olive-green) 100%);
        }
    </style>
</head>
<body>
    <div class="form-container">
        <form id="passwordChangeForm" class="space-y-6" action="/change-password" method="POST">
            <!-- Current Password -->
            <div class="form-group">
                <label for="currentPassword">Current Password</label>
                <div class="relative">
                    <input type="password" id="currentPassword" name="currentPassword" class="input-field">
                    <i class="password-toggle fas fa-eye-slash" data-target="currentPassword"></i>
                </div>
                <p class="error-message hidden" id="currentPasswordError"></p>
            </div>

            <!-- New Password -->
            <div class="form-group">
                <label for="newPassword">New Password</label>
                <div class="relative">
                    <input type="password" id="newPassword" name="newPassword" class="input-field" >
                    <i class="password-toggle fas fa-eye-slash" data-target="newPassword"></i>
                </div>
                <div class="password-strength">
                    <div class="strength-meter" id="passwordStrength"></div>
                </div>
                <p class="error-message hidden" id="newPasswordError"></p>
            </div>

            <!-- Confirm New Password -->
            <div class="form-group">
                <label for="confirmPassword">Confirm New Password</label>
                <div class="relative">
                    <input type="password" id="confirmPassword" name="confirmPassword" class="input-field" >
                    <i class="password-toggle fas fa-eye-slash" data-target="confirmPassword"></i>
                </div>
                <p class="error-message hidden" id="confirmPasswordError"></p>
            </div>
            <div id="serverError" class="error-message hidden text-red-500"></div>

            <!-- Submit Button -->
            <button type="submit" class="submit-btn">Change Password</button>
        </form>
    </div>

    <script>
        document.querySelectorAll('.password-toggle').forEach(toggle => {
            toggle.addEventListener('click', () => {
                const targetId = toggle.getAttribute('data-target');
                const input = document.getElementById(targetId);
                const isPassword = input.type === 'password';
                input.type = isPassword ? 'text' : 'password';
                toggle.classList.toggle('fa-eye', isPassword);
                toggle.classList.toggle('fa-eye-slash', !isPassword);
            });
        });

        const showToast = (message, type = 'success') => {
            const backgroundColor = type === 'success' ? '#4CAF50' : '#f44336';
            Toastify({
                text: message,
                duration: 3000,
                gravity: "top",
                position: "right",
                backgroundColor: backgroundColor,
                stopOnFocus: true,
                style: {
                    background: backgroundColor,
                    borderRadius: "8px",
                    padding: "12px 24px",
                    fontSize: "14px",
                    fontWeight: "500"
                }
            }).showToast();
        };

        const form = document.getElementById('passwordChangeForm');
        form.addEventListener('submit', async function(e) {
            e.preventDefault();
            let isValid = true;

            document.querySelectorAll('.error-message').forEach(el => {
                el.classList.add('hidden');
            });
            document.querySelectorAll('.input-field').forEach(el => {
                el.classList.remove('error');
            });

            const currentPassword = document.getElementById('currentPassword').value;
            if (!currentPassword) {
                showError('currentPassword', 'Current password is required');
                isValid = false;
            }

            const pattern = /^(?=.*\d)(?=.*[a-z])(?=.*[A-Z]).{8,}$/;
            const newPassword = document.getElementById('newPassword').value;
            
            if (!newPassword) {
                showError('newPassword', 'New password is required');
                isValid = false;
            } else if (newPassword.length < 8) {
                showError('newPassword', 'Password must be at least 8 characters');
                isValid = false;
            } else if (!pattern.test(newPassword)) {
                showError('newPassword', 'Must contain at least one number, one uppercase, and one lowercase letter');
                isValid = false;
            }

            const confirmPassword = document.getElementById('confirmPassword').value;
            if (!confirmPassword) {
                showError('confirmPassword', 'Please confirm your new password');
                isValid = false;
            } else if (confirmPassword !== newPassword) {
                showError('confirmPassword', 'Passwords do not match');
                isValid = false;
            }

            if (isValid) {
                try {
                    const response = await fetch('/change-password', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({
                            currentPassword,
                            newPassword,
                            confirmPassword
                        })
                    });

                    const data = await response.json();

                    if (!response.ok) {
                        showToast(data.message || 'Something went wrong', 'error');
                        return;
                    }

                    showToast(data.message || 'Password changed successfully!', 'success');
                    form.reset();

                } catch (error) {
                    console.error('Error:', error);
                    showToast(error.message || 'Unexpected error occurred', 'error');
                }
            }
        });

        function showError(fieldId, message) {
            const errorElement = document.getElementById(`${fieldId}Error`);
            const inputElement = document.getElementById(fieldId);
            errorElement.textContent = message;
            errorElement.classList.remove('hidden');
            inputElement.classList.add('error');
        }
    </script>
</body>
</html>