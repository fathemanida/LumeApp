<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Profile - E-commerce</title>
    <link href="https://fonts.googleapis.com/css2?family=Aboreto&family=Jost:wght@300;400;500&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css">
    <style>
        :root {
            --dark-bg: #1a1a1a;
            --darker-bg: #121212;
            --card-bg: #242424;
            --text-primary: #e0e0e0;
            --text-secondary: #b0b0b0;
            --accent-color: #c5a267;
            --border-color: #333333;
            --success-color: #4caf50;
            --error-color: #f44336;
        }

        body {
            font-family: 'Jost', sans-serif;
            background-color: var(--dark-bg);
            margin: 0;
            padding: 0;
            min-height: 100vh;
            color: var(--text-primary);
            display: flex;
            flex-direction: column;
        }

        /* Navbar styles */
        .navbar {
            background: var(--darker-bg);
            border-bottom: 1px solid var(--border-color);
            padding: 1rem 2rem;
            display: flex;
            align-items: center;
            justify-content: space-between;
            flex-wrap: nowrap;
        }

        .brand {
            font-family: 'Aboreto', cursive;
            font-size: 1.5rem;
            letter-spacing: 1.5px;
            text-transform: uppercase;
            color: var(--text-primary);
            cursor: pointer;
            transition: color 0.3s ease;
        }

        .brand:hover {
            color: var(--accent-color);
        }

        .nav-links {
            display: flex;
            list-style: none;
            margin: 0;
            padding: 0;
            flex: 1;
            justify-content: center;
        }

        .nav-link {
            color: var(--text-primary);
            font-family: 'Jost', sans-serif;
            font-size: 0.9rem;
            text-decoration: none;
            padding: 0.5rem 1rem;
            transition: all 0.3s ease;
        }

        .nav-link:hover {
            color: var(--accent-color);
            transform: translateY(-2px);
        }

        .icon-links {
            display: flex;
            align-items: center;
            list-style: none;
            margin: 0;
            padding: 0;
        }

        .icon-link {
            color: var(--text-primary);
            font-size: 1.1rem;
            padding: 0.5rem;
            transition: all 0.3s ease;
        }

        .icon-link:hover {
            color: var(--accent-color);
            transform: translateY(-2px);
        }

        /* Profile Dropdown */
        .profile-dropdown {
            position: relative;
            display: inline-block;
        }

        .profile-dropdown-content {
            display: none;
            position: absolute;
            right: 0;
            background-color: var(--card-bg);
            min-width: 160px;
            box-shadow: 0 8px 16px rgba(0,0,0,0.3);
            z-index: 1000;
            border-radius: 4px;
            padding: 0.5rem 0;
            border: 1px solid var(--border-color);
        }

        .profile-dropdown:hover .profile-dropdown-content {
            display: block;
        }

        .profile-dropdown-content a {
            color: var(--text-primary);
            padding: 0.75rem 1rem;
            text-decoration: none;
            display: block;
            font-size: 0.9rem;
            transition: all 0.3s ease;
        }

        .profile-dropdown-content a:hover {
            background-color: var(--darker-bg);
            color: var(--accent-color);
        }

        .profile-dropdown-content a i {
            margin-right: 0.5rem;
            width: 20px;
            text-align: center;
        }

        /* Main Container */
        .container {
            display: flex;
            flex: 1;
            width: 100%;
        }

        /* Sidebar */
        .sidebar {
            width: 280px;
            background-color: var(--darker-bg);
            padding: 2rem 1.5rem;
            border-right: 1px solid var(--border-color);
            display: flex;
            flex-direction: column;
        }

        .sidebar-title {
            font-family: 'Aboreto', cursive;
            font-size: 1.5rem;
            color: var(--accent-color);
            margin-bottom: 2rem;
            padding-bottom: 1rem;
            border-bottom: 1px solid var(--border-color);
            letter-spacing: 1px;
        }

        .sidebar-nav {
            display: flex;
            flex-direction: column;
            gap: 0.5rem;
            flex: 1;
        }

        .sidebar-nav a {
            color: var(--text-primary);
            text-decoration: none;
            padding: 0.75rem 1rem;
            border-radius: 4px;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            gap: 0.75rem;
            font-size: 0.95rem;
        }

        .sidebar-nav a i {
            width: 20px;
            text-align: center;
            color: var(--accent-color);
        }

        .sidebar-nav a:hover {
            background-color: rgba(197, 162, 103, 0.1);
            color: var(--accent-color);
            transform: translateX(4px);
        }

        .sidebar-nav a.active {
            background-color: rgba(197, 162, 103, 0.2);
            color: var(--accent-color);
            font-weight: 500;
            border-left: 3px solid var(--accent-color);
        }

        .sidebar-actions {
            margin-top: auto;
            padding-top: 1.5rem;
            border-top: 1px solid var(--border-color);
            display: flex;
            flex-direction: column;
            gap: 0.75rem;
        }

        .sidebar-actions button {
            padding: 0.75rem;
            border-radius: 4px;
            border: none;
            cursor: pointer;
            transition: all 0.3s ease;
            font-family: 'Jost', sans-serif;
            font-size: 0.9rem;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 0.5rem;
        }

        .logout-btn {
            background-color: rgba(197, 162, 103, 0.1);
            color: var(--text-primary);
            border: 1px solid var(--border-color);
        }

        .logout-btn:hover {
            background-color: rgba(197, 162, 103, 0.2);
            border-color: var(--accent-color);
        }

        .delete-btn {
            background-color: transparent;
            color: #ff6b6b;
            border: 1px solid #ff6b6b;
        }

        .delete-btn:hover {
            background-color: rgba(255, 107, 107, 0.1);
        }

        /* Main Content */
        .main-content {
            flex: 1;
            padding: 2rem 3rem;
            overflow-y: auto;
            background-color: var(--dark-bg);
        }

        h1, h2, h3 {
            font-family: 'Aboreto', cursive;
            color: var(--accent-color);
        }

        .profile-header {
            display: flex;
            align-items: center;
            background: var(--card-bg);
            padding: 25px;
            border-radius: 8px;
            margin-bottom: 40px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.3);
            border: 1px solid var(--border-color);
        }

        .profile-image {
            width: 90px;
            height: 90px;
            background-color: var(--card-bg);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            margin-right: 25px;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.3);
        }

        .profile-image img {
            width: 100%;
            height: 100%;
            object-fit: cover;
            border-radius: 50%;
        }

        .profile-image svg {
            color: var(--text-secondary);
        }

        .overview-grid {
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            gap: 20px;
        }

        .overview-grid div {
            background-color: var(--card-bg);
            padding: 20px;
            border-radius: 8px;
            transition: transform 0.2s ease, box-shadow 0.3s ease;
            border: 1px solid var(--border-color);
        }

        .overview-grid div:hover {
            transform: translateY(-3px);
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.3);
        }

        .overview-grid p.text-sm {
            color: var(--text-secondary);
        }

        .input-field {
            border: 1px solid var(--border-color);
            border-radius: 8px;
            padding: 14px;
            font-size: 1rem;
            width: 100%;
            background-color: var(--card-bg);
            color: var(--text-primary);
            transition: border-color 0.3s ease, box-shadow 0.3s ease;
            font-family: 'Jost', sans-serif;
        }

        .input-field:focus {
            border-color: var(--accent-color);
            box-shadow: 0 0 8px rgba(197, 162, 103, 0.2);
            outline: none;
        }

        label {
            font-size: 0.95rem;
            color: var(--text-primary);
            margin-bottom: 10px;
            display: block;
            font-family: 'Jost', sans-serif;
        }

        .form-group {
            margin-bottom: 25px;
        }

        .edit-btn, .submit-btn {
            background-color: var(--accent-color);
            color: #121212;
            padding: 14px 35px;
            border-radius: 8px;
            font-size: 1.1rem;
            transition: background-color 0.3s ease, transform 0.2s ease;
            border: none;
            cursor: pointer;
            font-family: 'Jost', sans-serif;
        }

        .edit-btn:hover, .submit-btn:hover {
            background-color: #d4b47c;
            transform: translateY(-2px);
        }

        .logout-btn {
            background-color: rgba(197, 162, 103, 0.1);
            color: var(--text-primary);
            border: 1px solid var(--border-color);
        }

        .logout-btn:hover {
            background-color: rgba(197, 162, 103, 0.2);
            border-color: var(--accent-color);
        }

        .delete-btn {
            background-color: transparent;
            color: #ff6b6b;
            border: 1px solid #ff6b6b;
        }

        .delete-btn:hover {
            background-color: rgba(255, 107, 107, 0.1);
        }

        .error-message {
            color: var(--error-color);
            font-size: 0.875rem;
            margin-top: 0.25rem;
        }

        .input-field.error {
            border-color: var(--error-color);
        }

        .submit-btn.loading {
            opacity: 0.7;
            cursor: not-allowed;
        }

        #imagePreviewContainer {
            max-width: 100%;
            margin-top: 1rem;
        }

        .cropper-modal {
            background-color: rgba(0, 0, 0, 0.5);
        }

        .cropper-view-box {
            outline: 1px solid var(--accent-color);
            outline-color: rgba(197, 162, 103, 0.75);
        }

        .action-buttons {
            display: flex;
            gap: 0.5rem;
            margin-top: 1rem;
        }

        .btn-crop {
            background-color: var(--accent-color);
            color: #121212;
        }

        .btn-crop:hover {
            background-color: #d4b47c;
        }

        .btn-cancel {
            background-color: var(--text-secondary);
            color: var(--dark-bg);
        }

        .btn-cancel:hover {
            background-color: #c0c0c0;
        }

        .change-password-link {
            font-weight: 500;
            color: var(--accent-color);
            text-decoration: none;
        }

        .change-password-link.disabled {
            color: var(--text-secondary);
            pointer-events: none;
            cursor: default;
        }

        #verifyEmailBtn, #resendOtpBtn {
            color: var(--accent-color);
            font-size: 0.9rem;
            margin-top: 0.5rem;
            background: none;
            border: none;
            cursor: pointer;
        }

        #otpSection p.text-sm {
            color: var(--text-secondary);
        }

        #otpTimer {
            color: var(--text-secondary);
        }

        /* Responsive */
        @media (max-width: 768px) {
            .container {
                flex-direction: column;
            }
            
            .sidebar {
                width: 100%;
                padding: 1rem;
            }
            
            .main-content {
                padding: 1.5rem;
            }
        }
    </style>
</head>
<body>
    <!-- Navbar -->
    <nav class="navbar">
        <div class="brand">LUME</div>
        <ul class="nav-links">
            <li><a href="/" class="nav-link">Home</a></li>
            <li><a href="/shopAll" class="nav-link">Shop All</a></li>
            <li><a href="/featured" class="nav-link">Featured</a></li>
            <li><a href="/new-arrivals" class="nav-link">New Arrivals</a></li>
        </ul>
        <ul class="icon-links">
            <li>
                <a href="/search" class="icon-link">
                    <i class="fas fa-search"></i>
                </a>
            </li>
            <li>
                <a href="/cart" class="icon-link">
                    <i class="fas fa-shopping-cart"></i>
                </a>
            </li>
            <li>
                <div class="profile-dropdown">
                    <a href="#" class="icon-link"><i class="far fa-user"></i></a>
                    <div class="profile-dropdown-content">
                        <% if (locals.user) { %>
                            <a href="/profile"><i class="fas fa-user"></i> My Profile</a>
                            <a href="/orders"><i class="fas fa-box"></i> My Orders</a>
                            <a href="/wishlist"><i class="fas fa-heart"></i> Wishlist</a>
                            <a href="/logout"><i class="fas fa-sign-out-alt"></i> Logout</a>
                        <% } else { %>
                            <a href="/login"><i class="fas fa-sign-in-alt"></i> Login</a>
                            <a href="/signup"><i class="fas fa-user-plus"></i> Sign Up</a>
                        <% } %>
                    </div>
                </div>
            </li>
        </ul>
    </nav>

    <div class="container">
        <!-- Sidebar -->
        <div class="sidebar">
            <div class="sidebar-title">My Account</div>
            <div class="sidebar-nav">
                <a href="/profile" class="nav-link active">
                    <i class="fas fa-user"></i>
                    Profile
                </a>
                <a href="/wallet" class="nav-link">
                    <i class="fas fa-wallet"></i>
                    Wallet
                </a>
                <a href="/address" class="nav-link">
                    <i class="fas fa-map-marker-alt"></i>
                    Address
                </a>
                <a href="/orders" class="nav-link">
                    <i class="fas fa-box-open"></i>
                    Orders
                </a>
                <a href="/wishlist" class="nav-link">
                    <i class="fas fa-heart"></i>
                    Wishlist
                </a>
                <a href="/settings" class="nav-link">
                    <i class="fas fa-cog"></i>
                    Settings
                </a>
            </div>
            <div class="sidebar-actions">
                <button class="logout-btn">
                    <i class="fas fa-sign-out-alt"></i>
                    Logout
                </button>
                <button class="delete-btn">
                    <i class="fas fa-trash-alt"></i>
                    Delete Account
                </button>
            </div>
        </div>

        <!-- Main Content -->
        <div class="main-content">
            <div class="flex justify-between items-center mb-10">
                <h1 class="text-3xl font-semibold">Edit Account</h1>
            </div>

            <!-- Profile Header -->
            <div class="profile-header">
                <div class="profile-image">
                    <% if(users.profileImage) { %>
                        <img src="/Uploads/user/<%= users.profileImage %>" alt="Profile" class="w-full h-full rounded-full object-cover">
                    <% } else { %>
                        <svg class="w-12 h-12" fill="currentColor" viewBox="0 0 24 24">
                            <path d="M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z"/>
                        </svg>
                    <% } %>
                </div>
                <div>
                    <h2 class="text-2xl font-semibold">
                        <%= users.name %>
                    </h2>
                    <p class="text-sm">
                        <%= users.email %>
                    </p>
                </div>
            </div>

            <!-- Account Overview -->
            <div class="mb-12">
                <h3 class="text-2xl font-semibold mb-6">Account Overview</h3>
                <div class="overview-grid">
                    <div>
                        <p class="text-sm">Account Status</p>
                        <p class="font-semibold">
                            <%= users.isBlocked ? 'Inactive' : 'Active' %>
                        </p>
                    </div>
                    <div>
                        <p class="text-sm">Member Since</p>
                        <p class="font-semibold">
                            <%= new Date(users.createdAt).toLocaleDateString('en-US', { month: 'long', year: 'numeric' }) %>
                        </p>
                    </div>
                </div>
            </div>

            <form action="/profile/update" method="POST" enctype="multipart/form-data" id="profileEditForm" class="space-y-6">
                <div class="form-group">
                    <label class="cursor-pointer">
                        <div class="flex items-center gap-3">
                            <div class="w-16 h-16 rounded-full bg-gray-100 flex items-center justify-center">
                                <i class="fas fa-camera text-gray-500 text-xl"></i>
                            </div>
                            <span class="text-gray-700">Change Profile Picture</span>
                        </div>
                        <input type="file" id="profileImage" name="profileImage" accept="image/*" class="hidden">
                    </label>
                    <p class="error-message text-red-600 text-sm mt-1 hidden" id="fileError"></p>
                    <div id="imagePreviewContainer" class="mt-4 hidden"></div>
                </div>

                <div class="form-group">
                    <label>Username</label>
                    <input type="text" name="name" class="input-field" value="<%= users.name %>">
                </div>
                <div class="form-group">
                    <label>Phone</label>
                    <input type="text" name="phone" value="<%= users.phone || '' %>" class="input-field">
                </div>
                <div class="form-group">
                    <label>Email</label>
                    <input type="email" name="email" value="<%= users.email %>" class="input-field" id="emailInput">
                    <button type="button" id="verifyEmailBtn" class="text-sm hidden">Verify New Email</button>
                </div>

                <div>
                    <% if (users.googleId) { %>
                        <a class="change-password-link disabled" title="Password change disabled for Google login">Change Password</a>
                    <% } else { %>
                        <a href="/change-password" class="change-password-link">Change Password</a>
                    <% } %>
                </div>

                <div id="otpSection" class="hidden">
                    <div class="form-group">
                        <label>OTP Verification</label>
                        <p class="text-sm">We've sent an OTP to your new email. Please check and enter it below.</p>
                        <input type="text" name="otp" class="input-field" placeholder="Enter 6-digit OTP" maxlength="6">
                        <div class="flex justify-between items-center mt-2">
                            <button type="button" id="resendOtpBtn" class="text-sm">Resend OTP</button>
                            <span id="otpTimer" class="text-sm"></span>
                        </div>
                    </div>
                </div>

                <div class="flex justify-end">
                    <button type="submit" class="submit-btn">Save Changes</button>
                </div>
            </form>
        </div>
    </div>

    <!-- Footer -->
    <link href="https://fonts.googleapis.com/css2?family=Cinzel:wght@400;700&display=swap" rel="stylesheet">
    <footer style="background-color: var(--darker-bg); color: var(--text-secondary); padding: 40px 0; font-family: 'Cinzel', serif; line-height: 1.6; border-top: 1px solid var(--border-color);">
        <div style="display: flex; justify-content: center; gap: 120px; padding: 0 20px; max-width: 1200px; margin: 0 auto;">
            <div>
                <h3 style="font-size: 18px; margin-bottom: 15px; letter-spacing: 1px; text-transform: uppercase; color: var(--accent-color);">Company</h3>
                <ul style="list-style: none; padding: 0; font-size: 14px;">
                    <li style="margin-bottom: 8px;"><a href="/about-us" style="color: var(--text-secondary); text-decoration: none; transition: color 0.3s ease;">About Us</a></li>
                    <li style="margin-bottom: 8px;"><a href="/careers" style="color: var(--text-secondary); text-decoration: none; transition: color 0.3s ease;">Careers</a></li>
                    <li style="margin-bottom: 8px;"><a href="/contact" style="color: var(--text-secondary); text-decoration: none; transition: color 0.3s ease;">Contact</a></li>
                    <li style="margin-bottom: 8px;"><a href="/privacy-policy" style="color: var(--text-secondary); text-decoration: none; transition: color 0.3s ease;">Privacy Policy</a></li>
                </ul>
            </div>
            <div>
                <h3 style="font-size: 18px; margin-bottom: 15px; letter-spacing: 1px; text-transform: uppercase; color: var(--accent-color);">Shop</h3>
                <ul style="list-style: none; padding: 0; font-size: 14px;">
                    <li style="margin-bottom: 8px;"><a href="/rings" style="color: var(--text-secondary); text-decoration: none; transition: color 0.3s ease;">Rings</a></li>
                    <li style="margin-bottom: 8px;"><a href="/necklaces" style="color: var(--text-secondary); text-decoration: none; transition: color 0.3s ease;">Necklaces</a></li>
                    <li style="margin-bottom: 8px;"><a href="/earrings" style="color: var(--text-secondary); text-decoration: none; transition: color 0.3s ease;">Earrings</a></li>
                    <li style="margin-bottom: 8px;"><a href="/bracelets" style="color: var(--text-secondary); text-decoration: none; transition: color 0.3s ease;">Bracelets</a></li>
                </ul>
            </div>
            <div>
                <h3 style="font-size: 18px; margin-bottom: 15px; letter-spacing: 1px; text-transform: uppercase; color: var(--accent-color);">Connect With Us</h3>
                <ul style="list-style: none; padding: 0; font-size: 14px;">
                    <li style="margin-bottom: 8px;"><a href="https://instagram.com" style="color: var(--text-secondary); text-decoration: none; transition: color 0.3s ease;">Instagram</a></li>
                    <li style="margin-bottom: 8px;"><a href="https://facebook.com" style="color: var(--text-secondary); text-decoration: none; transition: color 0.3s ease;">Facebook</a></li>
                    <li style="margin-bottom: 8px;"><a href="https://pinterest.com" style="color: var(--text-secondary); text-decoration: none; transition: color 0.3s ease;">Pinterest</a></li>
                    <li style="margin-bottom: 8px;"><a href="https://twitter.com" style="color: var(--text-secondary); text-decoration: none; transition: color 0.3s ease;">Twitter</a></li>
                </ul>
            </div>
        </div>
        <div style="text-align: center; font-size: 12px; padding-top: 30px; margin-top: 30px; border-top: 1px solid var(--border-color); color: var(--text-secondary);">
            © 2024 Lume Jewelry. All Rights Reserved.
        </div>
    </footer>
    <style>
        footer a:hover {
            color: var(--accent-color);
        }
    </style>

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            let cropper = null;
            const form = document.getElementById('profileEditForm');
            const fileInput = document.getElementById('profileImage');
            const fileError = document.getElementById('fileError');
            const submitBtn = form.querySelector('button[type="submit"]');
            const originalBtnText = submitBtn.textContent;
            const imagePreviewContainer = document.getElementById('imagePreviewContainer');
            const emailInput = document.getElementById('emailInput');
            const verifyEmailBtn = document.getElementById('verifyEmailBtn');
            const otpSection = document.getElementById('otpSection');
            const resendOtpBtn = document.getElementById('resendOtpBtn');
            const otpTimer = document.getElementById('otpTimer');
            let timerInterval;
            const originalEmail = '<%= users.email %>';

            fileInput.addEventListener('change', function (e) {
                if (this.files && this.files[0]) {
                    fileError.classList.add('hidden');
                    const file = this.files[0];
                    const validTypes = ['image/jpeg', 'image/png', 'image/gif', 'image/webp'];
                    const maxSize = 5 * 1024 * 1024;
                    if (!validTypes.includes(file.type)) {
                        showError(fileInput, 'Only image files (JPG, PNG, GIF, WEBP) are allowed');
                        return;
                    }
                    if (file.size > maxSize) {
                        showError(fileInput, 'Image must be less than 5MB');
                        return;
                    }
                    showCropper(file);
                }
            });

            form.addEventListener('submit', async function (e) {
                e.preventDefault();
                submitBtn.disabled = true;
                submitBtn.textContent = 'Saving...';
                submitBtn.classList.add('loading');
                clearErrors();
                const isFormValid = validateForm();
                if (!isFormValid) {
                    resetSubmitButton();
                    return;
                }
                try {
                    const formData = new FormData(form);
                    const response = await fetch(form.action, {
                        method: 'POST',
                        body: formData
                    });
                    const contentType = response.headers.get('content-type');
                    if (contentType && contentType.includes('application/json')) {
                        const data = await response.json();
                        if (!response.ok) {
                            throw new Error(data.message || 'Server error');
                        }
                        await Swal.fire({
                            icon: 'success',
                            title: 'Success!',
                            text: data.message || 'Profile updated successfully',
                            timer: 2000,
                            showConfirmButton: false
                        });
                        window.location.href = data.redirect || '/profile';
                    } else {
                        window.location.href = '/profile';
                    }
                } catch (error) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error!',
                        text: error.message || 'An error occurred'
                    });
                } finally {
                    resetSubmitButton();
                }
            });

            function showCropper(file) {
                imagePreviewContainer.innerHTML = '';
                imagePreviewContainer.classList.remove('hidden');
                const img = document.createElement('img');
                img.id = 'imageToCrop';
                img.src = URL.createObjectURL(file);
                img.style.maxHeight = '400px';
                imagePreviewContainer.appendChild(img);
                const btnContainer = document.createElement('div');
                btnContainer.className = 'action-buttons';
                const cropBtn = document.createElement('button');
                cropBtn.type = 'button';
                cropBtn.className = 'btn-crop px-4 py-2 rounded';
                cropBtn.textContent = 'Crop & Save';
                const cancelBtn = document.createElement('button');
                cancelBtn.type = 'button';
                cancelBtn.className = 'btn-cancel px-4 py-2 rounded';
                cancelBtn.textContent = 'Cancel';
                btnContainer.appendChild(cropBtn);
                btnContainer.appendChild(cancelBtn);
                imagePreviewContainer.appendChild(btnContainer);
                const image = document.getElementById('imageToCrop');
                cropper = new Cropper(image, {
                    aspectRatio: 1,
                    viewMode: 1,
                    autoCropArea: 0.8,
                    responsive: true,
                    movable: false,
                    zoomable: false,
                    rotatable: false,
                    scalable: false
                });
                cropBtn.addEventListener('click', function () {
                    const canvas = cropper.getCroppedCanvas({
                        width: 300,
                        height: 300,
                        fillColor: '#fff',
                        imageSmoothingQuality: 'high',
                    });
                    canvas.toBlob((blob) => {
                        const croppedFile = new File([blob], 'profile-image.jpg', {
                            type: 'image/jpeg',
                            lastModified: Date.now()
                        });
                        const dataTransfer = new DataTransfer();
                        dataTransfer.items.add(croppedFile);
                        fileInput.files = dataTransfer.files;
                        updateProfilePreview(canvas.toDataURL());
                        imagePreviewContainer.classList.add('hidden');
                        imagePreviewContainer.innerHTML = '';
                        cropper.destroy();
                        cropper = null;
                    }, 'image/jpeg', 0.9);
                });
                cancelBtn.addEventListener('click', function () {
                    fileInput.value = '';
                    imagePreviewContainer.classList.add('hidden');
                    imagePreviewContainer.innerHTML = '';
                    if (cropper) {
                        cropper.destroy();
                        cropper = null;
                    }
                });
            }

            function updateProfilePreview(imageSrc) {
                const profileImageContainer = document.querySelector('.profile-image');
                let img = profileImageContainer.querySelector('img');
                if (!img) {
                    const svg = profileImageContainer.querySelector('svg');
                    if (svg) svg.remove();
                    img = document.createElement('img');
                    img.className = 'w-full h-full rounded-full object-cover';
                    profileImageContainer.appendChild(img);
                }
                img.src = imageSrc;
            }

            function validateForm() {
                let isValid = true;
                const nameInput = form.querySelector('input[name="name"]');
                if (!nameInput.value.trim()) {
                    showError(nameInput, 'Name is required');
                    isValid = false;
                } else if (nameInput.value.trim().length < 2 || nameInput.value.trim().length > 50) {
                    showError(nameInput, 'Name must be between 2-50 characters');
                    isValid = false;
                }
                const newEmail = emailInput.value.trim();
                if (newEmail !== originalEmail) {
                    if (!newEmail) {
                        showError(emailInput, 'Email is required');
                        isValid = false;
                    } else if (!/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(newEmail)) {
                        showError(emailInput, 'Please enter a valid email address');
                        isValid = false;
                    }
                }
                const phoneInput = form.querySelector('input[name="phone"]');
                if (phoneInput.value === "") {
                    showError(phoneInput, "Please enter a phone number");
                    isValid = false;
                }
                if (phoneInput.value.trim() && !/^[0-9]{10}$/.test(phoneInput.value)) {
                    showError(phoneInput, 'Please enter a valid 10-digit phone number');
                    isValid = false;
                }
                return isValid;
            }

            function showError(input, message) {
                const error = document.createElement('p');
                error.className = 'error-message';
                error.textContent = message;
                input.parentNode.appendChild(error);
                input.classList.add('error');
                input.addEventListener('input', function () {
                    this.classList.remove('error');
                    const errorMsg = this.parentNode.querySelector('.error-message');
                    if (errorMsg) errorMsg.remove();
                }, { once: true });
            }

            function clearErrors() {
                document.querySelectorAll('.error-message').forEach(el => el.remove());
                document.querySelectorAll('.input-field').forEach(el => el.classList.remove('error'));
            }

            function resetSubmitButton() {
                submitBtn.disabled = false;
                submitBtn.textContent = originalBtnText;
                submitBtn.classList.remove('loading');
            }

            emailInput.addEventListener('input', function () {
                const newEmail = this.value.trim();
                if (newEmail !== originalEmail) {
                    verifyEmailBtn.classList.remove('hidden');
                } else {
                    verifyEmailBtn.classList.add('hidden');
                    otpSection.classList.add('hidden');
                }
            });

            verifyEmailBtn.addEventListener('click', async function () {
                const newEmail = emailInput.value.trim();
                if (!newEmail || newEmail === originalEmail) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Invalid Email',
                        text: 'Please enter a new email address'
                    });
                    return;
                }
                try {
                    const response = await fetch('/profile/send-otp', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ email: newEmail })
                    });
                    const data = await response.json();
                    if (response.ok && data.success) {
                        otpSection.classList.remove('hidden');
                        startOtpTimer();
                        Swal.fire({
                            icon: 'success',
                            title: 'OTP Sent!',
                            text: 'Please check your email for the verification code'
                        });
                    } else {
                        throw new Error(data.message || 'Failed to send OTP');
                    }
                } catch (error) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: error.message || 'Failed to send OTP'
                    });
                }
            });

            resendOtpBtn.addEventListener('click', async function () {
                try {
                    const response = await fetch('/profile/resend-otp', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    });
                    const data = await response.json();
                    if (response.ok && data.success) {
                        startOtpTimer();
                        Swal.fire({
                            icon: 'success',
                            title: 'OTP Resent!',
                            text: 'Please check your email for the new verification code'
                        });
                    } else {
                        throw new Error(data.message || 'Failed to resend OTP');
                    }
                } catch (error) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: error.message || 'Failed to resend OTP'
                    });
                }
            });

            function startOtpTimer() {
                let timeLeft = 30;
                otpTimer.textContent = `Time remaining: ${timeLeft}s`;
                if (timerInterval) clearInterval(timerInterval);
                timerInterval = setInterval(() => {
                    timeLeft--;
                    otpTimer.textContent = `Time remaining: ${timeLeft}s`;
                    if (timeLeft <= 0) {
                        clearInterval(timerInterval);
                        otpTimer.textContent = 'OTP expired';
                        resendOtpBtn.disabled = false;
                    }
                }, 1000);
            }

            const otpInput = document.querySelector('input[name="otp"]');
            otpInput.addEventListener('input', async function () {
                if (this.value.length === 6) {
                    try {
                        const response = await fetch('/profile/verify-otp', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify({ otp: this.value })
                        });
                        const data = await response.json();
                        if (response.ok && data.success) {
                            Swal.fire({
                                icon: 'success',
                                title: 'Success!',
                                text: 'Email verified successfully'
                            });
                            otpSection.classList.add('hidden');
                        } else {
                            throw new Error(data.message || 'Invalid OTP');
                        }
                    } catch (error) {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: error.message
                        });
                    }
                }
            });

            document.querySelector('.logout-btn').addEventListener('click', function () {
                window.location.href = '/logout';
            });

            document.querySelector('.delete-btn').addEventListener('click', function () {
                if (confirm('Are you sure you want to delete your account? This action cannot be undone.')) {
                    window.location.href = '/profile/delete';
                }
            });
        });
    </script>
</body>
</html>