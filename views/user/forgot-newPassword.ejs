<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Login</title>
  <link href="https://fonts.googleapis.com/css2?family=Aboreto&family=Jost:wght@400;500&display=swap" rel="stylesheet">
  <style>
    :root {
      --dark-brown: #291d0e;
      --olive-green: #314216;
      --light-bg: #f8f5f2;
      --border-color: #d3c9be;
      --text-color: #333;
      --error-color: #d9534f;
    }

    * {
      box-sizing: border-box;
      margin: 0;
      padding: 0;
    }

    body {
      background-color: var(--light-bg);
      font-family: 'Jost', sans-serif;
      color: var(--text-color);
      min-height: 100vh;
      display: flex;
      justify-content: center;
      align-items: center;
      padding: 1rem;
    }

    .auth-container {
      width: 100%;
      max-width: 400px;
      padding: 2.5rem;
      background: white;
      box-shadow: 0 4px 16px rgba(41, 29, 14, 0.1);
      border-radius: 4px;
      text-align: center;
    }

    .auth-heading {
      font-family: 'Aboreto', cursive;
      color: var(--dark-brown);
      margin-bottom: 2rem;
      letter-spacing: 1px;
      text-transform: uppercase;
    }

    .form-control {
      width: 100%;
      padding: 0.75rem 0;
      margin-bottom: 0.5rem;
      border: none;
      border-bottom: 1px solid var(--border-color);
      background: transparent;
      font-family: 'Jost', sans-serif;
      transition: border-color 0.3s ease;
    }

    .form-control:focus {
      outline: none;
      border-bottom-color: var(--dark-brown);
    }

    .error-message {
      color: var(--error-color);
      font-size: 0.75rem;
      text-align: left;
      margin-bottom: 1rem;
      min-height: 1rem;
      display: block;
    }

    .auth-btn {
      width: 100%;
      padding: 0.75rem;
      margin: 1.5rem 0;
      background-color: var(--dark-brown);
      color: white;
      border: none;
      font-family: 'Jost', sans-serif;
      font-weight: 500;
      letter-spacing: 0.5px;
      cursor: pointer;
      transition: all 0.3s ease;
    }

    .auth-btn:hover {
      background-color: var(--olive-green);
      transform: translateY(-2px);
    }

    .alert {
      padding: 0.75rem;
      margin-bottom: 1rem;
      border-radius: 4px;
      font-size: 0.875rem;
    }

    .alert-danger {
      background-color: #f8d7da;
      color: var(--error-color);
      border: 1px solid #f5c6cb;
    }
  </style>
</head>
<body>
  <div class="auth-container">
    <h1 class="auth-heading">Set New Password</h1>
    
    <form id="passwordForm" action="newPassword" method="POST">
      <input type="password" class="form-control" name="password" id="password" placeholder="Password" required>
      <div id="error4" class="error-message"></div>

      <input type="password" class="form-control" name="cPassword" id="cPassword" placeholder="Confirm Password" required>
      <div id="error5" class="error-message"></div>
      
      <% if (locals.message && message.length > 0) { %>
        <div class="alert alert-danger">
          <%= message %>
        </div>
      <% } %>
      
      <button type="submit" class="auth-btn">Submit</button>
    </form>
  </div>

  <script>
    document.addEventListener("DOMContentLoaded", function() {
      const form = document.getElementById('passwordForm');
      const passwordInput = document.getElementById('password');
      const cPasswordInput = document.getElementById('cPassword');
      const error4 = document.getElementById('error4');
      const error5 = document.getElementById('error5');

      // Real-time validation
      passwordInput.addEventListener('input', validatePassword);
      cPasswordInput.addEventListener('input', validatePasswordConfirmation);

      form.addEventListener('submit', function(e) {
        e.preventDefault();
        
        const isPasswordValid = validatePassword();
        const isConfirmationValid = validatePasswordConfirmation();
        
        if (isPasswordValid && isConfirmationValid) {
          form.submit();
        }
      });

      function validatePassword() {
        const value = passwordInput.value.trim();
        const pattern = /^(?=.*\d)(?=.*[a-z])(?=.*[A-Z]).{8,}$/;
        
        if (value === '') {
          showError(error4, "Password is required");
          return false;
        } else if (value.length < 8) {
          showError(error4, "Password must be at least 8 characters");
          return false;
        } else if (!pattern.test(value)) {
          showError(error4, "Must contain at least one number, uppercase, and lowercase letter");
          return false;
        } else {
          hideError(error4);
          return true;
        }
      }

      function validatePasswordConfirmation() {
        const password = passwordInput.value.trim();
        const confirmation = cPasswordInput.value.trim();
        
        if (confirmation === '') {
          showError(error5, "Please confirm your password");
          return false;
        } else if (password !== confirmation) {
          showError(error5, "Passwords do not match");
          return false;
        } else {
          hideError(error5);
          return true;
        }
      }

      function showError(element, message) {
        element.textContent = message;
        element.style.display = "block";
        element.previousElementSibling.style.borderBottomColor = "var(--error-color)";
      }

      function hideError(element) {
        element.textContent = "";
        element.style.display = "none";
        element.previousElementSibling.style.borderBottomColor = "var(--border-color)";
      }
    });
  </script>
</body>
</html>