<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>LUME - Jewelry</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
  <link href="https://fonts.googleapis.com/css2?family=Aboreto&family=Jost&display=swap" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
  <link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css">
  <link rel="icon" href="/images/image.png" type="image/png">

  <style>
    :root {
      --soft-beige: #D4B996;
      --muted-green: #A9BA9D;
      --light-bg: #f8f5f2;
      --border-color: #e0d8cc;
      --offer-red: #e63946;
      --dark-text: #2c1810;
      --darker-text: #1a0f0a;
    }
    html, body {
      height: 100%;
      margin: 0;
      padding-top: 80px;
      padding: 0;
      background-color: #f0e9e0;
      font-family: 'Jost', sans-serif;
      color: var(--dark-text);
    }
    #productsGrid {
      display: grid;
      gap: 20px;
      width: 100%;
    }
    @media (max-width: 767px) {
      #productsGrid {
        grid-template-columns: repeat(2, 1fr);
        gap: 15px;
      }
      .product-image-container {
        height: 180px;
      }
    }
    @media (min-width: 768px) and (max-width: 991px) {
      #productsGrid {
        grid-template-columns: repeat(3, 1fr);
        gap: 18px;
      }
      .product-image-container {
        height: 220px;
      }
    }
    @media (min-width: 992px) {
      #productsGrid {
        grid-template-columns: repeat(4, 1fr);
        gap: 20px;
      }
      .product-image-container {
        height: 250px;
      }
    }
    .product-card,
    .product-card.card,
    .product-card .card,
    .card.product-card,
    .card {
      border-radius: 0 !important;
      background: transparent;
      border: none;
      overflow: hidden;
      position: relative;
    }
    .product-image-container {
      position: relative;
      width: 100%;
      overflow: hidden;
      aspect-ratio: 1/1;
    }
    .product-img {
      width: 100%;
      height: 100%;
      object-fit: cover;
      transition: opacity 0.3s ease;
    }
    .product-img-secondary {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      object-fit: cover;
      opacity: 0;
      transition: opacity 0.3s ease;
    }
    .product-image-container:hover .product-img {
      opacity: 0;
    }
    .product-image-container:hover .product-img-secondary {
      opacity: 1;
    }
    .product-info {
      padding: 1rem 0;
      text-align: center;
      background: transparent;
    }
    .product-title {
      font-family: 'Aboreto', cursive;
      font-size: 1rem;
      color: var(--darker-text);
      margin-bottom: 0.5rem;
      font-weight: 500;
      letter-spacing: 0.5px;
    }
    .product-category {
      color: var(--muted-green);
      font-size: 0.8rem;
      margin-bottom: 0.5rem;
      text-transform: uppercase;
      letter-spacing: 1px;
    }
    .product-price {
      font-weight: 500;
      margin-bottom: 1rem;
      display: flex;
      gap: 0.5rem;
      align-items: center;
      justify-content: center;
    }
    .product-price .regular-price {
      color: #666;
      text-decoration: line-through;
      font-size: 0.9rem;
    }
    .product-price .discounted-price {
      color: var(--offer-red);
      font-weight: 600;
      font-size: 1.1rem;
    }
    .product-price .strike-price {
      color: #666;
      text-decoration: line-through;
      font-size: 0.9rem;
    }
    .wishlist-icon {
      position: absolute;
      top: 10px;
      right: 10px;
      color: var(--darker-text);
      font-size: 1.1rem;
      cursor: pointer;
      transition: all 0.3s ease;
      z-index: 3;
      background: rgba(255, 255, 255, 0.8);
      border-radius: 50%;
      padding: 0.3rem;
    }
    .wishlist-icon:hover {
      color: #ff6b6b;
      transform: scale(1.1);
    }
    .new-badge {
      position: absolute;
      top: 10px;
      left: 10px;
      background-color: var(--muted-green);
      color: white;
      font-family: 'Jost', sans-serif;
      font-size: 0.65rem;
      padding: 0.3rem 0.6rem;
      text-transform: uppercase;
      z-index: 2;
    }
    .offer-badge {
      position: absolute;
      bottom: 10px;
      right: 10px;
      background-color: #603a10;
      color: white;
      font-family: 'Jost', sans-serif;
      font-size: 0.65rem;
      padding: 0.3rem 0.6rem;
      border-radius: 0;
      text-transform: uppercase;
      z-index: 2;
    }
    .product-card .btn {
      background-color: var(--darker-text);
      color: white;
      border: none;
      padding: 0.6rem 1rem;
      width: 100%;
      margin-top: 0.5rem;
      border-radius: 0;
      transition: all 0.3s ease;
      font-family: 'Jost', sans-serif;
      text-transform: uppercase;
      letter-spacing: 1px;
      font-size: 0.8rem;
    }
    .product-card .btn:hover:not(:disabled) {
      background-color: var(--muted-green);
      color: white;
    }
    .product-card .btn:disabled {
      background-color: var(--darker-text);
      color: white;
      opacity: 0.7;
      cursor: not-allowed;
    }
    .unlisted-overlay {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: rgba(255, 255, 255, 0.7);
      z-index: 1;
      display: flex;
      align-items: center;
      justify-content: center;
    }
    .unlisted-badge {
      background: #5b0a0a;
      color: white;
      padding: 5px 10px;
      border-radius: 0;
      font-weight: lighter;
      font-family: 'Jost', sans-serif;
      font-size: 0.9rem;
    }
    .unlisted-img {
      opacity: 0.7;
    }
    .out-of-stock-overlay {
      position: absolute;
      top: 15px;
      left: 15px;
      background-color: var(--muted-green);
      color: white;
      padding: 0.3rem 0.6rem;
      border-radius: 0;
      font-size: 0.65rem;
      font-weight: normal;
      text-transform: uppercase;
      z-index: 2;
      font-family: 'Jost', sans-serif;
    }
    .main-content-container {
      padding-left: 5.5rem;
      padding-right: 5.5rem;
      margin-top: 80px;
    }
    @media (max-width: 767px) {
      .main-content-container {
        padding-left: 0;
        padding-right: 0;
      }
    }
    @media (min-width: 768px) {
      .main-content-container {
        padding-left: 4rem;
        padding-right: 4rem;
      }
    }
    @media (min-width: 1200px) {
      .main-content-container {
        padding-left: 6rem;
        padding-right: 6rem;
        max-width: 1400px;
        margin-left: auto;
        margin-right: auto;
      }
    }
    .pagination {
      display: flex;
      justify-content: flex-end;
      gap: 0.5rem;
      margin-top: 1.5rem;
      align-items: center;
    }
    .page-btn {
      width: 36px;
      height: 36px;
      display: flex;
      align-items: center;
      justify-content: center;
      border-radius: 4px;
      border: none;
      background-color: #e0e0e0;
      cursor: pointer;
      transition: all 0.3s ease;
      color: var(--dark-text);
      text-decoration: none;
    }
    .page-btn:hover:not(.active):not(:disabled) {
      background-color: var(--muted-green);
      color: white;
    }
    .page-btn.active {
      background-color: var(--soft-beige);
      color: var(--darker-text);
    }
    .page-btn:disabled {
      opacity: 0.5;
      cursor: not-allowed;
    }
  </style>
</head>
<body>
  <%- include("../../views/partials/user/header") %>
  <div class="container-fluid py-4 main-content-container">
    <div class="row">
      <div class="col-12">
        <div class="d-flex flex-wrap justify-content-between align-items-center mb-4">
          <h4 class="mb-0 section-heading">New Arrivals</h4>
        </div>
        <div id="productsGrid">
          <% if (products && products.length > 0) { %>
            <% products.forEach(product => { %>
            <div class="col product-item" data-name="<%= product.productName.toLowerCase() %>" data-category="<%= product.category?.name?.toLowerCase() || '' %>">
              <div class="product-card card text-center h-100 position-relative overflow-hidden">
                <i class="far fa-heart wishlist-icon" onclick="event.stopPropagation(); toggleWishlist(this, '<%= product._id %>')"></i>
                <a href="/product-details?id=<%= product._id %>" class="text-decoration-none">
                    <% if (product.new) { %>
                      <span class="new-badge">New</span>
                    <% } %>
                  <div class="product-image-container">
                    <% if (product.isListed && product.offer) { %>
                  <span class="offer-badge">
                    <% if (product.offer.discountType === 'percentage') { %>
                      <%= product.offer.discountValue %>% OFF
                    <% } else { %>
                      â‚¹<%= product.offer.discountValue %> OFF
                    <% } %>
                  </span>
                <% } %>
                    <img src="/uploads/product/<%= product.productImage[0] %>"
                         class="product-img <%= !product.isListed ? 'unlisted-img' : (product.quantity <= 0 ? 'out-of-stock-img' : '') %>"
                         alt="<%= product.productName %>">
                    <% if (product.productImage[1]) { %>
                      <img src="/uploads/product/<%= product.productImage[1] %>"
                           class="product-img-secondary"
                           alt="<%= product.productName %> - Secondary View">
                    <% } %>
                  </div>
                  <% if (!product.isListed) { %>
                    <div class="unlisted-overlay">
                      <span class="unlisted-badge">Unlisted</span>
                    </div>
                  <% } %>
                  <% if (product.quantity <= 0 && product.isListed) { %>
                    <div class="out-of-stock-overlay">Out of Stock</div>
                  <% } %>
                  <div class="product-info">
                    <p class="product-title card-title <%= !product.isListed ? 'text-muted' : '' %>">
                      <%= product.productName %>
                    </p>
                    <% if (product.category?.name) { %>
                      <p class="product-category"><%= product.category.name %></p>
                    <% } %>
                    <p class="product-price">
                      <% if (product.offer) { %>
                        <% if (product.salePrice && product.salePrice < product.regularPrice) { %>
                          <span class="strike-price">â‚¹<%= product.salePrice.toLocaleString() %></span>
                        <% } else { %>
                          <span class="strike-price">â‚¹<%= product.regularPrice.toLocaleString() %></span>
                        <% } %>
                        <span class="discounted-price">
                          â‚¹<%= product.offer.discountType === 'percentage' 
                            ? (product.salePrice ? (product.salePrice - (product.salePrice * product.offer.discountValue / 100)).toFixed(2)
                              : (product.regularPrice - (product.regularPrice * product.offer.discountValue / 100)).toFixed(2))
                            : (product.salePrice ? (product.salePrice - product.offer.discountValue).toFixed(2)
                              : (product.regularPrice - product.offer.discountValue).toFixed(2)) %>
                        </span>
                      <% } else if (product.salePrice && product.salePrice < product.regularPrice) { %>
                        <span class="strike-price">â‚¹<%= product.regularPrice.toLocaleString() %></span>
                        <span class="discounted-price">â‚¹<%= product.salePrice.toLocaleString() %></span>
                      <% } else { %>
                        <span class="regular-price">â‚¹<%= product.regularPrice.toLocaleString() %></span>
                      <% } %>
                    </p>
                  </div>
                </a>
                <button class="btn w-100"
                        <%= !product.isListed || product.quantity <= 0 ? 'disabled' : '' %>
                        onclick="event.stopPropagation(); addToCart('<%= product._id %>', '<%= product.productName.replace(/'/g, "\\\\'") %>', '<%= product.regularPrice %>', '<%= product.salePrice %>', '<%= product.productImage[0] %>')">
                  <%= !product.isListed ? 'Not Available' : (product.quantity <= 0 ? 'Out of Stock' : 'Add to Cart') %>
                </button>
              </div>
            </div>
            <% }) %>
          <% } else { %>
            <div class="col-12 text-center">
              <p class="text-muted">No products available</p>
            </div>
          <% } %>
        </div>
        <div class="pagination">
          <% if (currentPage > 1) { %>
            <a href="?page=<%= currentPage - 1 %><%= selectedSort ? '&sort=' + selectedSort : '' %>"
               class="page-btn <%= currentPage === 1 ? 'disabled' : '' %>"><</a>
          <% } %>
          <% for (let i = 1; i <= totalPages; i++) { %>
            <a href="?page=<%= i %><%= selectedSort ? '&sort=' + selectedSort : '' %>"
               class="page-btn <%= currentPage === i ? 'active' : '' %>"><%= i %></a>
          <% } %>
          <% if (currentPage < totalPages) { %>
            <a href="?page=<%= currentPage + 1 %><%= selectedSort ? '&sort=' + selectedSort : '' %>"
               class="page-btn <%= currentPage === totalPages ? 'disabled' : '' %>">></a>
          <% } %>
        </div>
      </div>
    </div>
  </div>
  <%- include("../../views/partials/user/fooret.ejs") %>
  <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.8/dist/umd/popper.min.js"
    integrity="sha384-I7E8VVD/ismYTF4hNIPjVp/Zjvgyol6VFvRkX/vR+Vc4jQkC+hVqc2pM8ODewa9r"
    crossorigin="anonymous"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.min.js"
    integrity="sha384-BBtl+eGJRgqQAUMxJ7pMwbEyER4l1g+O15P+16Ep7Q9Q+zqX6gSbd85u4mG4QzX+"
    crossorigin="anonymous"></script>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/toastify-js"></script>
  <script>
    async function toggleWishlist(iconElement, productId) {
      try {
             const authCheck = await fetch('/check-auth');
        const authData = await authCheck.json();
        
        if (!authData.isAuthenticated) {
          Toastify({
            text: "Please login to add items to your wishlist",
            duration: 3000,
            gravity: "top",
            position: "right",
            backgroundColor: "#8a9b7d",
            stopOnFocus: true
          }).showToast();
          return;
        }
        const response = await fetch('/wishlist/add', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ productId })
        });
        const data = await response.json();
        if (data.success) {
          iconElement.classList.toggle('far');
          iconElement.classList.toggle('fas');
          iconElement.classList.toggle('text-danger');
          Toastify({
            text: iconElement.classList.contains('fas') ? "Added to Wishlist " : "Removed from Wishlist ",
            duration: 3000,
            gravity: "top",
            position: "right",
            backgroundColor: "#A9BA9D",
            stopOnFocus: true
          }).showToast();
        } else {
          Toastify({
            text: data.message || "Something went wrong",
            duration: 3000,
            gravity: "top",
            position: "right",
            backgroundColor: "#f44336"
          }).showToast();
        }
      } catch (err) {
        console.error('Wishlist error:', err);
        Toastify({
          text: "Server error. Try again later.",
          duration: 3000,
          gravity: "top",
          position: "right",
          backgroundColor: "#f44336"
        }).showToast();
      }
    }
    function addToCart(productId, productName, regularPrice, salePrice, image) {
      fetch('/check-auth')
        .then(response => response.json())
        .then(data => {
          if (!data.isAuthenticated) {
            Swal.fire({
              icon: 'info',
              title: 'Login Required',
              text: 'Please login or signup to add items to cart',
              showCancelButton: true,
              confirmButtonText: 'Login',
              cancelButtonText: 'Signup',
              confirmButtonColor: '#291d0e',
              cancelButtonColor: '#314216'
            }).then((result) => {
              if (result.isConfirmed) {
                window.location.href = '/login';
              } else if (result.dismiss === Swal.DismissReason.cancel) {
                window.location.href = '/signup';
              }
            });
            return;
          }
          fetch('/cart/add', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
              'Accept': 'application/json'
            },
            body: JSON.stringify({ productId: productId, quantity: 1 })
          })
            .then(response => response.ok ? response.json() : response.json().then(err => Promise.reject(err)))
            .then(data => {
              if (data.success) {
                Swal.fire({
                  icon: 'success',
                  title: 'Added to Cart',
                  text: data.message,
                  showConfirmButton: false,
                  timer: 1500
                });
              } else {
                throw new Error(data.message || 'Failed to add to cart');
              }
            })
            .catch(error => {
              Swal.fire({
                icon: 'error',
                title: 'Error',
                text: error.message || 'Failed to add item to cart',
                confirmButtonColor: '#291d0e'
              });
            });
        })
        .catch(error => {
          console.error('Auth check error:', error);
          Swal.fire({
            icon: 'error',
            title: 'Error',
            text: 'Failed to check authentication status',
            confirmButtonColor: '#291d0e'
          });
        });
    }
  </script>
</body>
</html>