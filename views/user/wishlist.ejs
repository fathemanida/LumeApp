<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>My Wishlist | LUME</title>
  <link href="https://fonts.googleapis.com/css2?family=Aboreto&family=Jost:wght@300;400;500;600;700&display=swap" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
  <link rel="icon" href="/images/image.png" type="image/png">
<link rel="icon" href="/images/image.png" type="image/png">

  <style>
  :root {
    --primary-color: #d4b78f;
    --primary-dark: #b39973;
    --text-dark: #333333;
    --text-light: #666666;
    --light-bg: #f9f5f0;
    --border-color: #e0d6c9;
    --success: #4caf50;
    --danger: #f44336;
    --white: #ffffff;
    --shadow-sm: 0 2px 8px rgba(0, 0, 0, 0.05);
    --main-font: 'Jost', sans-serif;
    --heading-font: 'Aboreto', cursive, sans-serif;
    --shadow-md: 0 4px 12px rgba(0, 0, 0, 0.08);
    --transition: all 0.3s ease;
    --offer-red: #e74c3c;
    --product-name-color: #2c2c2c;
  }
  
  * {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
  }
  
  body {
    font-family: 'Jost', sans-serif;
    color: var(--text-dark);
    background-color: var(--light-bg);
    line-height: 1.6;
  }
  
  /* Main Container */
  .wishlist-container {
    padding: 2rem 1rem 4rem;
    max-width: 1400px;
    margin: 0 auto;
    min-height: 60vh;
  }
  
  /* Wishlist Header */
  .wishlist-header {
    padding-top:48px;
    text-align: center;
    margin-bottom: 3rem;
    padding-bottom: 1.5rem;
    border-bottom: 1px solid var(--border-color);
  }
  
  .wishlist-title {
    font-family: var(--heading-font);
    color: var(--text-dark);
    font-size: 2.5rem;
    font-weight: 500;
    margin-bottom: 0.5rem;
    position: relative;
    display: inline-block;
    text-transform: uppercase;
  }
  
  .wishlist-title:after {
    content: '';
    position: absolute;
    bottom: -10px;
    left: 50%;
    transform: translateX(-50%);
    width: 80px;
    height: 2px;
    background-color: var(--primary-color);
  }
  
  .wishlist-subtitle {
    color: var(--text-light);
    font-size: 1.1rem;
    margin-top: 1rem;
  }
  
  /* Empty State */
  .wishlist-empty {
    text-align: center;
    padding: 4rem 1rem;
    background: var(--white);
    border-radius: 8px;
    box-shadow: var(--shadow-sm);
  }
  
  .wishlist-empty i {
    font-size: 4rem;
    color: var(--primary-color);
    margin-bottom: 1.5rem;
    opacity: 0.8;
  }
  
  .wishlist-empty h3 {
    font-size: 1.5rem;
    margin-bottom: 1rem;
    color: var(--text-dark);
  }
  
  .wishlist-empty p {
    color: var(--text-light);
    max-width: 500px;
    margin: 0 auto 2rem;
  }
  
  .wishlist-badge {
    background-color: var(--offer-red);
    color: white;
    font-size: 0.8rem;
    margin-left: 0.75rem;
    font-family: 'Jost', sans-serif;
    font-weight: 600;
    padding: 0.25rem 0.5rem;
    border-radius: 50px;
  }
  
  /* Product Grid */
  .wishlist-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
    gap: 1.5rem;
    margin-top: 2rem;
  }
  
  /* Product Card */
  .wishlist-item {
    background: var(--white);
    overflow: hidden;
    box-shadow: 0 1px 3px rgba(0,0,0,0.1);
    transition: var(--transition);
    border: 1px solid var(--border-color);
  }
  
  .wishlist-item:hover {
    transform: translateY(-5px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
  }
  
  .product-image-container {
    position: relative;
    padding-top: 100%;
    background: var(--white);
    overflow: hidden;
  }
  
  .product-image {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: contain;
    padding: 1.5rem;
    transition: transform 0.5s ease;
    mix-blend-mode: multiply;
  }
  
  .wishlist-item:hover .product-image {
    transform: scale(1.05);
  }
  
  .product-details {
    padding: 1.5rem;
    flex-grow: 1;
    display: flex;
    flex-direction: column;
  }
  
  #wishlist-product-name {
    font-size: 1.2rem;
    font-weight: 600;
    margin-bottom: 0.5rem;
    color: var(--product-name-color);
    font-family: var(--main-font);
    letter-spacing: 0.5px;
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
    transition: color 0.2s ease;
  }
  
  #wishlist-product-name a {
    color: inherit;
    text-decoration: none;
  }
  
  #wishlist-product-name a:hover {
    color: var(--primary-color);
  }
  
  .product-category {
    font-size: 0.85rem;
    color: var(--text-light);
    margin-bottom: 0.75rem;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    font-family: var(--main-font);
  }
  
  .product-price-container {
    margin: 0.5rem 0 0.75rem;
  }
  
  .sale-price {
    font-size: 1.1rem;
    font-weight: 700;
    color: var(--text-dark);
    font-family: 'Jost', sans-serif;
  }
  
  .regular-price {
    font-size: 0.9rem;
    color: var(--text-light);
    text-decoration: line-through;
    margin-left: 0.5rem;
    font-family: 'Jost', sans-serif;
  }
  
  .discount-badge {
    display: inline-block;
    background-color: #ffebee;
    color: var(--danger);
    font-size: 0.75rem;
    font-weight: 600;
    padding: 0.2rem 0.5rem;
    border-radius: 4px;
    margin-left: 0.5rem;
    font-family: 'Jost', sans-serif;
    vertical-align: middle;
  }
  
  .stock-status {
    font-size: 0.85rem;
    margin: 0.5rem 0 1rem;
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }
  
  .in-stock {
    color: var(--success);
    font-weight: 500;
  }
  
  .in-stock i {
    margin-right: 0.25rem;
  }
  
  .out-of-stock {
    color: var(--danger);
    font-weight: 500;
  }
  
  .product-actions {
    margin-top: auto;
    display: flex;
    gap: 0.75rem;
    padding-top: 1rem;
    border-top: 1px solid var(--border-color);
  }
  
  /* Action Buttons */
  .wishlist-actions {
    display: flex;
    gap: 0.75rem;
    width: 100%;
  }
  
  #add-to-cart-btn, #remove-from-wishlist-btn {
    flex: 1;
    padding: 0.5rem;
    font-size: 0.85rem;
    font-weight: 500;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    transition: all 0.2s ease;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
    border: none;
    cursor: pointer;
  }
  
  #add-to-cart-btn {
    background-color: var(--primary-color);
    color: white;
  }
  
  .btn-primary {
    background-color:#603a10;
    color: var(--white);
    flex: 1;
  }
  
  .btn-primary:hover {
    background-color: var(--primary-dark);
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(212, 185, 150, 0.3);
  }
  
  .btn-primary:active {
    transform: translateY(0);
  }
  
  .btn-danger {
    background-color: #740b0b;
    color: white;
  }
  
  .btn-danger:hover {
    background-color: var(--offer-red);
    color: white;
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(231, 76, 60, 0.2);
  }
  
  .btn-danger:active {
    transform: translateY(0);
  }
  
  .btn:disabled {
    opacity: 0.7;
    cursor: not-allowed;
    transform: none !important;
    box-shadow: none !important;
  }
  
  /* Loading State */
  .btn-loading {
    position: relative;
    color: transparent !important;
    pointer-events: none;
  }
  
  .btn-loading:after {
    content: '';
    position: absolute;
    width: 18px;
    height: 18px;
    top: 50%;
    left: 50%;
    margin: -9px 0 0 -9px;
    border: 2px solid rgba(255, 255, 255, 0.3);
    border-radius: 50%;
    border-top-color: white;
    animation: spin 0.8s ease-in-out infinite;
  }
  
  .btn-danger.btn-loading:after {
    border-top-color: var(--offer-red);
  }
  
  @keyframes spin {
    to { transform: rotate(360deg); }
  }
  
  /* Responsive Adjustments */
  @media (max-width: 768px) {
    .wishlist-grid {
      grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));
      gap: 1.5rem;
    }
    
    .product-details {
      padding: 1.25rem;
    }
    
    .product-name {
      font-size: 1rem;
    }
    
    .sale-price {
      font-size: 1.1rem;
    }
    
    .btn {
      padding: 0.6rem 1rem;
      font-size: 0.85rem;
    }
  }
  
  @media (max-width: 480px) {
    .wishlist-header {
      margin-bottom: 2rem;
    }
    
    .wishlist-title {
      font-size: 2rem;
    }
    
    .wishlist-grid {
      grid-template-columns: 1fr;
      gap: 1.25rem;
    }
    
    .product-actions {
      flex-direction: column;
    }
    
    .btn {
      width: 100%;
    }
  }
  
  .empty-wishlist {
    text-align: center;
    padding: clamp(3rem, 8vw, 4rem);
    background: white;
    border: 1px solid var(--border-color);
    border-radius: 8px;
    box-shadow: var(--shadow-sm);
  }
  
  .empty-wishlist-icon {
    font-size: clamp(3rem, 8vw, 4rem);
    color: var(--primary-color);
    margin-bottom: 1.5rem;
    opacity: 0.8;
  }
  
  .empty-wishlist-text {
    font-family: 'Aboreto', cursive;
    color: var(--text-dark);
    font-size: clamp(1.2rem, 3vw, 1.5rem);
    margin-bottom: 0.5rem;
    font-weight: 400;
  }
  
  .empty-wishlist-subtext {
    color: var(--text-light);
    margin-bottom: 1.5rem;
    font-size: clamp(0.9rem, 2.5vw, 1rem);
    max-width: 400px;
    margin-left: auto;
    margin-right: auto;
    line-height: 1.5;
  }
  
  .btn-continue-shopping {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.75rem 1.75rem;
    background:#603a10;
    color: var(--white);
    border: none;
    font-family: 'Jost', sans-serif;
    font-size: clamp(0.9rem, 2.5vw, 1rem);
    font-weight: 600;
    text-decoration: none;
    transition: var(--transition);
    text-transform: uppercase;
    letter-spacing: 0.5px;
  }
  
  .btn-continue-shopping:hover {
    background: var(--primary-dark);
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(212, 185, 150, 0.3);
  }
  
  /* Container layout fixes */
  .container {
    width: 100%;
    padding-right: 15px;
    padding-left: 15px;
    margin-right: auto;
    margin-left: auto;
  }
  
  .row {
    display: flex;
    flex-wrap: wrap;
    margin-right: -15px;
    margin-left: -15px;
  }
  
  .col-lg-3, .col-lg-9 {
    position: relative;
    width: 100%;
    padding-right: 15px;
    padding-left: 15px;
  }
  
  @media (min-width: 992px) {
    .col-lg-3 {
      flex: 0 0 25%;
      max-width: 25%;
    }
    .col-lg-9 {
      flex: 0 0 75%;
      max-width: 75%;
    }
  }
</style>
</head>
<body>
<%- include('../partials/user/header.ejs') %>
<%-include('../partials/user/breadcrumps.ejs')  %>

<div class="wishlist-container">

  <div class="container">
    <div class="row">
      <!-- Sidebar -->
      <div class="col-lg-3 d-none d-lg-block">
        <%- include('../partials/user/sidebar', { currentPage: 'wishlist' }) %>
      </div>
      
      <!-- Main Content -->
      <div class="col-lg-9">
        <div class="wishlist-header">
          <h2 class="wishlist-title">
            <i class="fas fa-heart me-2" style="color: var(--offer-red);"></i> My Wishlist
            <% if (wishlist && wishlist.items && wishlist.items.length > 0) { %>
              <span class="badge wishlist-badge"><%= wishlist.items.length %></span>
            <% } %>
          </h2>
          <p class="wishlist-subtitle">Your saved favorites</p>
        </div>
        
        <% if (wishlist && wishlist.items && wishlist.items.length > 0) { %>
          <div class="wishlist-grid">
            <% wishlist.items.forEach(item => { %>
              <div class="wishlist-item">
                <div class="product-image-container">
                  <img 
                    src="/uploads/product/<%= item.productId.productImage[0] %>" 
                    class="product-image" 
                    alt="<%= item.productId.productName %>"
                  >
                </div>
                
                <div class="product-details">
                  <h5 id="wishlist-product-name">
                    <a href="/product/<%= item.productId._id %>">
                      <%= item.productId.productName %>
                    </a>
                  </h5>
                  <% if (item.productId.category) { %>
                    <div class="product-category">
                      <%= item.productId.category.name || '' %>
                    </div>
                  <% } %>
                  
                  <div class="product-price-container">
                    <% if (item.productId.salePrice && item.productId.salePrice < item.productId.regularPrice) { %>
                      <span class="sale-price">₹<%= item.productId.salePrice.toLocaleString() %></span>
                      <span class="regular-price">₹<%= item.productId.regularPrice.toLocaleString() %></span>
                      <% const discount = Math.round(((item.productId.regularPrice - item.productId.salePrice) / item.productId.regularPrice) * 100); %>
                      <span class="discount-badge"><%= discount %>% OFF</span>
                    <% } else { %>
                      <span class="sale-price">₹<%= item.productId.regularPrice.toLocaleString() %></span>
                    <% } %>
                  </div>
                  
                  <div class="stock-status">
                    <% if (item.productId.quantity > 0) { %>
                      <i class="fas fa-check-circle"></i>
                      <span class="in-stock">In Stock</span>
                    <% } else { %>
                      <i class="fas fa-times-circle"></i>
                      <span class="out-of-stock">Out of Stock</span>
                    <% } %>
                  </div>
                  
                  <div class="product-actions">
                    <div class="wishlist-actions">
                      <button 
                        id="add-to-cart-btn"
                        onclick="addToCartFromWishlist('<%= item.productId._id %>', this)"
                        <%= item.productId.quantity <= 0 ? 'disabled' : '' %>
                      >
                        <i class="fas fa-shopping-cart"></i> Add to Cart
                      </button>
                      <button 
                        id="remove-from-wishlist-btn"
                        onclick="removeFromWishlist('<%= item.productId._id %>', this)"
                      >
                        <i class="far fa-trash-alt"></i> Remove
                      </button>
                    </div>
                  </div>
                </div>
              </div>
            <% }); %>
          </div>
        <% } else { %>
          <!-- Empty Wishlist -->
          <div class="empty-wishlist">
            <div class="mb-4">
              <i class="far fa-heart empty-wishlist-icon"></i>
            </div>
            <h3 class="empty-wishlist-text">Your wishlist is empty</h3>
            <p class="empty-wishlist-subtext">You haven't added any items to your wishlist yet. Start exploring our collection and save your favorite items here.</p>
            <a href="/shopAll" class="btn-continue-shopping">
              <i class="fas fa-arrow-left me-1"></i> Continue Shopping
            </a>
          </div>
        <% } %>
      </div>

    </div>
  </div>

</div>

<%- include('../partials/user/fooret.ejs') %>

<script src="https://cdn.jsdelivr.net/npm/toastify-js"></script>

<script>
// Add to Cart from Wishlist
async function addToCartFromWishlist(productId, button) {
  try {
    const addToCartBtn = button.closest('.add-to-cart-btn') || button;
    const originalContent = addToCartBtn.innerHTML;
    addToCartBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Adding...';
    addToCartBtn.disabled = true;
    
    const response = await fetch('/cart/add', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        productId: productId,
        quantity: 1,
        fromWishlist: true
      })
    });
    
    const data = await response.json();
    
    if (data.success) {
      // Show success message
      Toastify({
        text: data.message || 'Product added to cart successfully',
        duration: 3000,
        close: true,
        gravity: 'top',
        position: 'right',
        backgroundColor: '#4caf50',
        stopOnFocus: true,
        style: {
          fontFamily: "'Jost', sans-serif",
          borderRadius: "4px",
          boxShadow: "0 4px 12px rgba(76, 175, 80, 0.3)"
        }
      }).showToast();
      
      // Update cart count in header
      const cartCount = document.querySelector('.cart-count');
      if (cartCount) {
        // Only increment if it's a new item (not a quantity update)
        // The backend will tell us if it was a new item or just a quantity update
        if (!data.quantityUpdated) {
          const currentCount = parseInt(cartCount.textContent) || 0;
          cartCount.textContent = currentCount + 1;
          cartCount.style.display = 'flex';
        } else {
          // If it's just a quantity update, we don't need to change the count of unique items
          // But we can add a small animation to show the update was successful
          cartCount.classList.add('cart-updated');
          setTimeout(() => cartCount.classList.remove('cart-updated'), 500);
        }
      }
      
      // Remove the item from wishlist UI
      const wishlistItem = button.closest('.wishlist-item');
      if (wishlistItem) {
        wishlistItem.style.opacity = '0';
        setTimeout(() => {
          wishlistItem.remove();
          
          // Update wishlist count
          const wishlistCount = document.querySelector('.wishlist-count');
          if (wishlistCount) {
            const currentWishlistCount = parseInt(wishlistCount.textContent) || 0;
            const newCount = Math.max(0, currentWishlistCount - 1);
            wishlistCount.textContent = newCount;
            wishlistCount.style.display = newCount > 0 ? 'flex' : 'none';
          }
          
          // Reload if wishlist is empty
          if (document.querySelectorAll('.wishlist-item').length === 0) {
            setTimeout(() => {
              window.location.reload();
            }, 500);
          }
        }, 300);
      }
    } else {
      throw new Error(data.message || 'Failed to add product to cart');
    }
  } catch (error) {
    console.error('Error:', error);
    Toastify({
      text: error.message || 'Failed to add product to cart',
      duration: 3000,
      close: true,
      gravity: 'top',
      position: 'right',
      backgroundColor: '#f44336',
      stopOnFocus: true,
      style: {
        fontFamily: "'Jost', sans-serif",
        borderRadius: "4px",
        boxShadow: "0 4px 12px rgba(244, 67, 54, 0.3)"
      }
    }).showToast();
    
    if (error.message === 'Please login to continue') {
      setTimeout(() => {
        window.location.href = '/login';
      }, 1500);
    }
  } finally {
    if (button) {
      button.disabled = false;
      button.innerHTML = '<i class="fas fa-shopping-cart"></i> Add to Cart';
    }
  }
}

// Remove from Wishlist
async function removeFromWishlist(productId, button) {
  try {
    const removeBtn = button.closest('.remove-from-wishlist') || button;
    const originalContent = removeBtn.innerHTML;
    removeBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i>';
    removeBtn.disabled = true;
    
    const response = await fetch('/wishlist/remove', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({ productId })
    });
    
    const data = await response.json();
    
    if (data.success) {
      Toastify({
        text: data.message || 'Removed from wishlist',
        duration: 3000,
        close: true,
        gravity: 'top',
        position: 'right',
        backgroundColor: '#4caf50',
        stopOnFocus: true,
        style: {
          fontFamily: "'Jost', sans-serif",
          borderRadius: "4px",
          boxShadow: "0 4px 12px rgba(76, 175, 80, 0.3)"
        }
      }).showToast();
      
      // Update wishlist count
      const wishlistCount = document.querySelector('.wishlist-count');
      if (wishlistCount && data.wishlistCount !== undefined) {
        wishlistCount.textContent = data.wishlistCount;
        wishlistCount.style.display = data.wishlistCount > 0 ? 'flex' : 'none';
      }
      
      // Remove item from UI
      const itemElement = button.closest('.wishlist-item');
      if (itemElement) {
        itemElement.style.opacity = '0';
        setTimeout(() => {
          itemElement.remove();
          
          // Check if wishlist is empty
          if (document.querySelectorAll('.wishlist-item').length === 0) {
            setTimeout(() => {
              window.location.reload();
            }, 500);
          }
        }, 300);
      }
    } else {
      throw new Error(data.message || 'Failed to remove from wishlist');
    }
  } catch (error) {
    console.error('Error:', error);
    Toastify({
      text: error.message || 'Failed to remove item',
      duration: 3000,
      close: true,
      gravity: 'top',
      position: 'right',
      backgroundColor: '#f44336',
      stopOnFocus: true,
      style: {
        fontFamily: "'Jost', sans-serif",
        borderRadius: "4px",
        boxShadow: "0 4px 12px rgba(244, 67, 54, 0.3)"
      }
    }).showToast();
  } finally {
    if (button) {
      button.disabled = false;
      button.innerHTML = '<i class="far fa-trash-alt"></i> Remove';
    }
  }
}
</script>

</body>
</html>