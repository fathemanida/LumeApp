<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>My Wishlist - Lume</title>
    <link href="https://fonts.googleapis.com/css2?family=Aboreto&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css">
    <style>
    :root {
      --theme-title-font: 'Aboreto', sans-serif;
      --theme-body-font: 'Aboreto', sans-serif;
      --theme-black: #111;
      --theme-gray: #888;
      --theme-highlight: #95951581;
      --theme-border: #e0e0e0;
      --dark-brown: #3a2c1a;
      --olive-green: #334411;
      --light-bg: #f9f5f0;
    }

    /* Base Styles */
    html,
    body {
      height: 100%;
      margin: 0;
      padding: 0;
      background-color: #f0e9e0;
      font-family: 'Aboreto', sans-serif;
      color: var(--dark-brown);
    }


    /* Main Container */
    .main-container {
      display: flex;
      flex: 1;
      background-color: #f0e9e0;
      margin-top: 70px;
    }

    /* Sidebar */
    
    /* Content Area */
    .content-area {
      flex: 1;
      padding: 2rem 3rem;
      background-color: #f0e9e0;
    }

    /* Wishlist Page Header */
    .wishlist-page-header {
      background: white;
      padding: 3rem 0;
      margin-bottom: 2rem;
      border-bottom: 1px solid var(--theme-border);
    }

    .wishlist-page-header h1 {
      font-family: 'Aboreto', cursive;
      font-size: 2.5rem;
      font-weight: 600;
      color: var(--dark-brown);
      margin-bottom: 1rem;
    }

    .wishlist-page-header p {
      color: var(--theme-gray);
      font-size: 1.1rem;
    }

    /* Wishlist Items */
    .wishlist-item {
      border: 1px solid var(--theme-border);
      border-radius: 0;
      padding: 1.5rem;
      margin-bottom: 1.5rem;
      transition: all 0.3s ease;
      background: white;
      box-shadow: 0 2px 4px rgba(0,0,0,0.05);
      
    }

    .wishlist-item:hover {
      box-shadow: 0 4px 12px rgba(0,0,0,0.1);
      transform: translateY(-2px);
    }

    .wishlist-image {
      width: 180px;
      height: 180px;
      object-fit: cover;
      border-radius: 0;
      box-shadow: 0 2px 4px rgba(0,0,0,0.05);
    }

    .wishlist-details {
      padding: 0 2rem;
    }

    .wishlist-title {
      font-size: 1.4rem;
      font-weight: 600;
      margin-bottom: 1rem;
      color: var(--dark-brown);
    }

    .wishlist-price {
      font-size: 1.2rem;
      margin-bottom: 1rem;
      color: var(--dark-brown);
    }

    .wishlist-price strike {
      color: var(--theme-gray);
      margin-right: 0.5rem;
    }

    .wishlist-price .text-danger {
      font-weight: 600;
      color: #ff6b6b;
    }

    .size-selection {
      margin: 1rem 0;
    }

    .size-btn {
      padding: 0.5rem 1.2rem;
      border: 1px solid var(--theme-border);
      border-radius: 0;
      background: white;
      color: var(--dark-brown);
      cursor: pointer;
      transition: all 0.3s ease;
      font-size: 0.9rem;
      margin-right: 0.5rem;
      font-family: 'Aboreto', sans-serif;
    }

    .size-btn.active {
      background: var(--olive-green);
      color: white;
      border-color: var(--olive-green);
    }

    .size-btn:hover:not(.active) {
      background: var(--light-bg);
      border-color: var(--olive-green);
    }

    .wishlist-actions {
      display: flex;
      gap: 1rem;
      margin-top: 1.5rem;
    }

    .wishlist-actions .btn {
      padding: 0.6rem 1.5rem;
      font-weight: 500;
      border-radius: 0;
      transition: all 0.3s ease;
      font-family: 'Aboreto', sans-serif;
    }

    .wishlist-actions .btn-primary {
      background: var(--dark-brown);
      border-color: var(--dark-brown);
      color: white;
    }

    .wishlist-actions .btn-primary:hover {
      background: var(--olive-green);
      border-color: var(--olive-green);
      transform: translateY(-1px);
    }

    .wishlist-actions .btn-outline-danger {
      border-color: #ff6b6b;
      color: #ff6b6b;
      background: transparent;
    }

    .wishlist-actions .btn-outline-danger:hover {
      background: #ff6b6b;
      color: white;
      transform: translateY(-1px);
    }

    .empty-wishlist {
      text-align: center;
      padding: 4rem 2rem;
      background: white;
      border-radius: 0;
      box-shadow: 0 2px 4px rgba(0,0,0,0.05);
    }

    .empty-wishlist i {
      font-size: 5rem;
      color: var(--theme-gray);
      margin-bottom: 1.5rem;
    }

    .empty-wishlist h3 {
      color: var(--dark-brown);
      font-size: 1.8rem;
      margin-bottom: 1rem;
    }

    .empty-wishlist p {
      color: var(--theme-gray);
      font-size: 1.1rem;
      margin-bottom: 2rem;
    }

    .empty-wishlist .btn {
      padding: 0.8rem 2rem;
      font-size: 1.1rem;
      border-radius: 0;
      background: var(--dark-brown);
      border-color: var(--dark-brown);
      color: white;
      font-family: 'Aboreto', sans-serif;
    }

    .empty-wishlist .btn:hover {
      background: var(--olive-green);
      transform: translateY(-1px);
    }

    

    .border-secondary {
      border-color: rgba(255, 255, 255, 0.1) !important;
    }

    .text-light {
      color: rgba(255, 255, 255, 0.7) !important;
    }

    /* Responsive */
    @media (max-width: 768px) {
      .main-container {
        flex-direction: column;
      }
      
      .sidebar {
        width: 100%;
        padding: 1rem;
      }
      
      .content-area {
        padding: 1.5rem;
      }
      
      .wishlist-item {
        flex-direction: column;
        text-align: center;
      }

      .wishlist-image {
        width: 100%;
        height: auto;
        margin-bottom: 1.5rem;
      }

      .wishlist-details {
        padding: 0;
      }

      .wishlist-actions {
        justify-content: center;
      }

      .size-selection {
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
        gap: 0.5rem;
      }
    }

    /* Toastify Custom Styles */
    .custom-toast {
      background: white !important;
      color: var(--dark-brown) !important;
      border: 1px solid var(--theme-border) !important;
      border-radius: 0 !important;
      padding: 12px 20px !important;
      font-family: 'Aboreto', sans-serif !important;
    }

    .custom-toast.success {
      border-left: 4px solid var(--olive-green) !important;
    }

    .custom-toast.error {
      border-left: 4px solid #ff6b6b !important;
    }

    .custom-toast .toast-close {
      color: var(--dark-brown) !important;
      opacity: 0.7;
    }

    .custom-toast .toast-close:hover {
      opacity: 1;
    }
    </style>
</head>
<body>
<%-include('../partials/user/header.ejs') %>
    <% if (locals.user) { %>
        <div class="main-container">
<%-include('../partials/user/sidebar.ejs',{currentPage:'wishlist'})  %>


            <!-- Wishlist Content Area -->
            <div class="content-area">
                <div class="wishlist-page-header">
                    <div class="container">
                        <h1>My Wishlist</h1>
                        <p>Save your favorite items for later</p>
                    </div>
                </div>

                <!-- Wishlist items will be displayed here -->
                <div class="container py-4">
                    <% if (wishlist && wishlist.items && wishlist.items.length > 0) { %>
                        <div class="row">
                            <% wishlist.items.forEach(item => { %>
                                <div class="col-md-6 col-lg-4 mb-4">
                                    <div class="wishlist-item-card">
                                        <div class="wishlist-item-image">
                                            <img src="/uploads/product/<% item.product.productImage[0] %>" 
                                                 alt="<%= item.product.productName %>" class="img-fluid">
                                        </div>
                                        <div class="wishlist-item-details">
                                            <h5 class="wishlist-item-name"><%= item.product.productName %></h5>
                                            <p class="wishlist-price">
                                                <% if (item.product.salePrice && item.product.salePrice < item.product.regularPrice) { 
                                                     const discount = Math.round(((item.product.regularPrice - item.product.salePrice) / item.product.regularPrice) * 100); %>
                                                    <strike class="text-muted">₹<%= item.product.regularPrice.toLocaleString() %></strike>
                                                    <span class="text-danger ms-2 fw-bold">₹<%= item.product.salePrice.toLocaleString() %></span>
                                                    <span class="text-success ms-2">(<%= discount %>% OFF)</span>
                                                <% } else { %>
                                                    <span class="fw-bold">₹<%= item.product.regularPrice.toLocaleString() %></span>
                                                <% } %>
                                            </p>
                                            <div class="wishlist-actions">
                                                <button class="btn btn-primary btn-sm add-to-cart" data-product-id="<%= item.product._id %>">
                                                    <i class="fas fa-shopping-cart me-1"></i>Add to Cart
                                                </button>
                                                <button class="btn btn-outline-danger btn-sm remove-from-wishlist" data-product-id="<%= item.product._id %>">
                                                    <i class="fas fa-trash me-1"></i>Remove
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            <% }); %>
                        </div>
                    <% } else { %>
                        <div class="empty-wishlist text-center">
                            <i class="far fa-heart fa-5x mb-3 text-muted"></i>
                            <h3>Your wishlist is empty</h3>
                            <p class="text-muted">Save your favorite items for later</p>
                            <a href="/shop" class="btn btn-primary">
                                <i class="fas fa-shopping-bag me-2"></i>Continue Shopping
                            </a>
                        </div>
                    <% } %>
                </div>

            </div>
        </div>
    <% } else { %>
        <div class="content-area">
            <div class="wishlist-page-header">
                <div class="container">
                    <h1>My Wishlist</h1>
                    <p>Save your favorite items for later</p>
                </div>
            </div>
            <div class="container py-4">
                <div class="empty-wishlist">
                    <i class="far fa-heart"></i>
                    <h3>Please log in</h3>
                    <p class="text-muted">Log in to view or manage your wishlist</p>
                    <a href="/login" class="btn btn-primary">
                        <i class="fas fa-sign-in-alt me-2"></i>Login Now
                    </a>
                </div>
            </div>
        </div>
    <% } %>

<%-include('../partials/user/fooret.ejs')  %>

    <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/toastify-js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        // Sidebar button functionality
        document.querySelector('.logout-btn').addEventListener('click', function() {
            window.location.href = '/logout';
        });

        document.querySelector('.delete-btn').addEventListener('click', function() {
            if (confirm('Are you sure you want to delete your account? This action cannot be undone.')) {
                window.location.href = '/profile/delete';
            }
        });

        function selectSize(button) {
            const sizeButtons = button.parentElement.querySelectorAll('.size-btn');
            sizeButtons.forEach(btn => btn.classList.remove('active'));
            button.classList.add('active');
            const productId = button.dataset.productId;
            const size = button.dataset.size;
            button.closest('.wishlist-item').dataset.selectedSize = size;
        }

        async function addToCart(productId) {
            try {
                // First check if user is authenticated
                const authCheck = await fetch('/check-auth');
                const authData = await authCheck.json();
                
                if (!authData.isAuthenticated) {
                    Toastify({
                        text: "Please login to add items to your cart",
                        duration: 3000,
                        gravity: "top",
                        position: "right",
                        backgroundColor: "#8a9b7d",
                        stopOnFocus: true
                    }).showToast();
                    return;
                }

                const wishlistItem = document.querySelector(`.wishlist-item-card [data-product-id="${productId}"]`).closest('.wishlist-item-card');
                const selectedSize = wishlistItem ? wishlistItem.dataset.selectedSize : null;

                const response = await fetch('/cart/add', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        productId,
                        size: selectedSize,
                        quantity: 1
                    })
                });

                const data = await response.json();

                if (response.ok) {
                    // Remove from wishlist after successful add to cart
                    await removeFromWishlist(productId, false);
                    
                    // Show success message
                    Toastify({
                        text: "Added to cart and removed from wishlist",
                        duration: 3000,
                        gravity: "top",
                        position: "right",
                        className: "custom-toast success"
                    }).showToast();
                } else {
                    throw new Error(data.message || 'Failed to add to cart');
                }
            } catch (error) {
                console.error('Error adding to cart:', error);
                Toastify({
                    text: error.message || "Failed to add to cart. Please try again.",
                    duration: 3000,
                    gravity: "top",
                    position: "right",
                    className: "custom-toast error"
                }).showToast();
            }
        }

        async function removeFromWishlist(productId, showToast = true) {
            try {
                const response = await fetch('/wishlist/remove', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ productId })
                });

                const data = await response.json();

                if (response.ok) {
                    // Find the wishlist item card and remove it
                    const wishlistItem = document.querySelector(`.wishlist-item-card [data-product-id="${productId}"]`).closest('.wishlist-item-card').parentElement;
                    if (wishlistItem) {
                        wishlistItem.remove();
                        
                        // Check if there are no more items left
                        const remainingItems = document.querySelectorAll('.wishlist-item-card');
                        if (remainingItems.length === 0) {
                            location.reload();
                        }
                    }
                    
                    if (showToast) {
                        Toastify({
                            text: "Removed from wishlist",
                            duration: 3000,
                            gravity: "top",
                            position: "right",
                            className: "custom-toast success"
                        }).showToast();
                    }
                } else {
                    throw new Error(data.message || 'Failed to remove from wishlist');
                }
            } catch (error) {
                console.error('Error removing from wishlist:', error);
                if (showToast) {
                    Toastify({
                        text: error.message || "Failed to remove from wishlist",
                        duration: 3000,
                        gravity: "top",
                        position: "right",
                        className: "custom-toast error"
                    }).showToast();
                }
            }
        }

        // Event delegation for dynamically loaded buttons
        document.addEventListener('click', function(event) {
            // Handle Add to Cart button clicks
            const addToCartBtn = event.target.closest('.add-to-cart');
            if (addToCartBtn) {
                event.preventDefault();
                const productId = addToCartBtn.getAttribute('data-product-id');
                if (productId) {
                    addToCart(productId);
                }
                return;
            }

            // Handle Remove from Wishlist button clicks
            const removeFromWishlistBtn = event.target.closest('.remove-from-wishlist');
            if (removeFromWishlistBtn) {
                event.preventDefault();
                const productId = removeFromWishlistBtn.getAttribute('data-product-id');
                if (productId) {
                    removeFromWishlist(productId);
                }
            }
        });
    </script>
</body>
</html>