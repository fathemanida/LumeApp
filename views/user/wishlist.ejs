<%- include('../partials/user/header') %>

<div class="container py-4">
  <div class="row">
    <!-- Sidebar -->
    <div class="col-lg-3 d-none d-lg-block">
      <%- include('../partials/user/sidebar', { currentPage: 'wishlist' }) %>
    </div>
    
    <!-- Main Content -->
    <div class="col-lg-9">
      <div class="card border-0 shadow-sm mb-4">
        <div class="card-body">
          <h2 class="h4 mb-4">
            <i class="fas fa-heart text-danger me-2"></i> My Wishlist
            <span class="badge bg-secondary ms-2"><%= wishlist && wishlist.items ? wishlist.items.length : 0 %></span>
          </h2>
          
          <% if (wishlist && wishlist.items && wishlist.items.length > 0) { %>
            <div class="row g-4">
              <% wishlist.items.forEach(item => { %>
                <div class="col-12">
                  <div class="card border-0 shadow-sm h-100">
                    <div class="row g-0">
                      <!-- Product Image -->
                      <div class="col-md-2">
                        <img 
                          src="/uploads/product/<%= item.productId.productImage[0] %>" 
                          class="img-fluid rounded-start" 
                          alt="<%= item.productId.productName %>"
                          style="height: 150px; width: 100%; object-fit: cover;"
                        >
                      </div>
                      
                      <!-- Product Details -->
                      <div class="col-md-7">
                        <div class="card-body">
                          <h5 class="card-title mb-2">
                            <a href="/product/<%= item.productId._id %>" class="text-dark text-decoration-none">
                              <%= item.productId.productName %>
                            </a>
                          </h5>
                          
                          <!-- Price -->
                          <div class="mb-2">
                            <% if (item.productId.salePrice && item.productId.salePrice < item.productId.regularPrice) { %>
                              <span class="h5 text-danger fw-bold">₹<%= item.productId.salePrice.toLocaleString() %></span>
                              <small class="text-muted text-decoration-line-through ms-2">₹<%= item.productId.regularPrice.toLocaleString() %></small>
                              <% const discount = Math.round(((item.productId.regularPrice - item.productId.salePrice) / item.productId.regularPrice) * 100); %>
                              <span class="badge bg-success ms-2"><%= discount %>% OFF</span>
                            <% } else { %>
                              <span class="h5 fw-bold">₹<%= item.productId.regularPrice.toLocaleString() %></span>
                            <% } %>
                          </div>
                          
                          <!-- Stock Status -->
                          <% if (item.productId.quantity > 0) { %>
                            <p class="text-success mb-0"><i class="fas fa-check-circle"></i> In Stock</p>
                          <% } else { %>
                            <p class="text-danger mb-0"><i class="fas fa-times-circle"></i> Out of Stock</p>
                          <% } %>
                        </div>
                      </div>
                      
                      <!-- Actions -->
                      <div class="col-md-3">
                        <div class="card-body h-100 d-flex flex-column justify-content-between">
                          <div class="d-grid gap-2">
                            <% if (item.productId.quantity > 0) { %>
                              <button 
                                class="btn btn-dark btn-sm w-100 mb-2" 
                                onclick="addToCartFromWishlist('<%= item.productId._id %>', this)"
                              >
                                <i class="fas fa-shopping-cart me-2"></i>Add to Cart
                              </button>
                            <% } %>
                            
                            <button 
                              class="btn btn-outline-danger btn-sm w-100" 
                              onclick="removeFromWishlist('<%= item.productId._id %>')"
                            >
                              <i class="far fa-trash-alt me-2"></i>Remove
                            </button>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              <% }); %>
            </div>
          <% } else { %>
            <!-- Empty Wishlist -->
            <div class="text-center py-5">
              <div class="mb-4">
                <i class="far fa-heart fa-4x text-muted"></i>
              </div>
              <h4 class="h5 mb-3">Your wishlist is empty</h4>
              <p class="text-muted mb-4">You haven't added any items to your wishlist yet.</p>
              <a href="/shop" class="btn btn-primary">Continue Shopping</a>
            </div>
          <% } %>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/toastify-js"></script>

<script>
// Add to Cart from Wishlist
async function addToCartFromWishlist(productId, button) {
  try {
    // Show loading state
    const originalText = button.innerHTML;
    button.disabled = true;
    button.innerHTML = '<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Adding...';

    const response = await fetch('/add-to-cart', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        productId: productId,
        quantity: 1
      })
    });

    const data = await response.json();
    
    if (data.success) {
      // Show success message
      Toastify({
        text: data.message || 'Added to cart successfully',
        duration: 3000,
        gravity: 'top',
        position: 'right',
        backgroundColor: '#28a745',
        stopOnFocus: true
      }).showToast();

      // Update cart count in header
      const cartCountElement = document.querySelector('.cart-count');
      if (cartCountElement && data.cartCount !== undefined) {
        cartCountElement.textContent = data.cartCount;
        cartCountElement.style.display = 'flex';
      }
    } else {
      // Show error message
      Toastify({
        text: data.message || 'Failed to add to cart',
        duration: 3000,
        gravity: 'top',
        position: 'right',
        backgroundColor: '#dc3545',
        stopOnFocus: true
      }).showToast();
    }
  } catch (error) {
    console.error('Add to cart error:', error);
    Toastify({
      text: 'An error occurred. Please try again.',
      duration: 3000,
      gravity: 'top',
      position: 'right',
      backgroundColor: '#dc3545',
      stopOnFocus: true
    }).showToast();
  } finally {
    // Reset button state
    if (button) {
      button.disabled = false;
      button.innerHTML = '<i class="fas fa-shopping-cart me-2"></i>Add to Cart';
    }
  }
}

// Remove from Wishlist
async function removeFromWishlist(productId) {
  try {
    const response = await fetch('/wishlist/remove', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({ productId })
    });

    const data = await response.json();
    
    if (data.success) {
      // Remove the item from the UI
      const itemElement = document.querySelector(`[data-product-id="${productId}"]`);
      if (itemElement) {
        itemElement.remove();
      }

      // Update wishlist count in header
      const wishlistCountElement = document.querySelector('.wishlist-count');
      if (wishlistCountElement && data.wishlistCount !== undefined) {
        wishlistCountElement.textContent = data.wishlistCount;
        wishlistCountElement.style.display = data.wishlistCount > 0 ? 'flex' : 'none';
      }

      // Show success message
      Toastify({
        text: 'Removed from wishlist',
        duration: 3000,
        gravity: 'top',
        position: 'right',
        backgroundColor: '#28a745',
        stopOnFocus: true
      }).showToast();

      // If no items left, show empty state
      const wishlistItems = document.querySelectorAll('[data-product-id]');
      if (wishlistItems.length === 0) {
        window.location.reload(); // Reload to show empty state
      }
    } else {
      // Show error message
      Toastify({
        text: data.message || 'Failed to remove from wishlist',
        duration: 3000,
        gravity: 'top',
        position: 'right',
        backgroundColor: '#dc3545',
        stopOnFocus: true
      }).showToast();
    }
  } catch (error) {
    console.error('Remove from wishlist error:', error);
    Toastify({
      text: 'An error occurred. Please try again.',
      duration: 3000,
      gravity: 'top',
      position: 'right',
      backgroundColor: '#dc3545',
      stopOnFocus: true
    }).showToast();
  }
}
</script>

<%- include('../partials/user/footer') %>
    </style>
</head>
<body>
<%- include('../partials/user/header.ejs') %>
    <div class="container py-4 main-content-container">
      <%- include('../partials/user/sidebar.ejs', { currentPage: 'wishlist' }) %>

        <h2 class="wishlist-title">My Wishlist</h2>
        <% if (wishlist && wishlist.items && wishlist.items.length > 0) { %>
            <div class="row">
                <% wishlist.items.forEach(item => { %>
                    <div class="col-12 col-md-6 col-lg-4 mb-4">
                        <div class="wishlist-item">
                            <button class="btn-remove" onclick="removeFromWishlist('<%= item.productId._id %>')">
                                <i class="fas fa-times"></i>
                            </button>
                            <div class="row">
                                <div class="col-12 col-md-5 mb-3 mb-md-0">
                                    <img src="/uploads/product/<%= item.productId.productImage[0] %>" 
                                         alt="<%= item.productId.productName %>" 
                                         class="product-image w-100">
                                </div>
                                <div class="col-12 col-md-7">
                                    <h5 class="product-name"><%= item.productId.productName %></h5>
                                    <div class="product-price">
                                        <% 
                                            const product = item.productId;
                                            const basePrice = product.salePrice && product.salePrice < product.regularPrice ? 
                                                product.salePrice : product.regularPrice;
                                            const hasOffer = product.salePrice && product.salePrice < product.regularPrice;
                                        %>
                                        <% if (hasOffer) { %>
                                            <span class="sale-price">₹<%= product.salePrice.toLocaleString() %></span>
                                            <span class="regular-price">₹<%= product.regularPrice.toLocaleString() %></span>
                                        <% } else { %>
                                            <span>₹<%= product.regularPrice.toLocaleString() %></span>
                                        <% } %>
                                    </div>
                                    <div class="mt-3">
                                        <button class="btn-action" 
                                                onclick="addToCart('<%= item.productId._id %>')">
                                            <i class="fas fa-shopping-cart me-2"></i>Add to Cart
                                        </button>
                                        <button class="btn-action" 
                                                style="background-color: var(--muted-green)"
                                                onclick="window.location.href='/product-details/<%= item.productId._id %>'">
                                            <i class="fas fa-eye me-2"></i>View Details
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                <% }) %>
            </div>
        <% } else { %>
            <div class="empty-wishlist">
                <i class="far fa-heart empty-wishlist-icon"></i>
                <h3 class="empty-wishlist-text">Your wishlist is empty</h3>
                <p class="empty-wishlist-subtext">You haven't added any items to your wishlist yet.</p>
                <a href="/shopAll" class="btn-shop-now">Continue Shopping</a>
            </div>
        <% } %>
    </div>

    <%- include("../partials/user/fooret.ejs") %>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://cdn.jsdelivr.net/npm/toastify-js"></script>
    
    <script>
    // Function to remove item from wishlist
    async function removeFromWishlist(productId) {
        try {
            const response = await fetch('/wishlist/remove', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ productId })
            });

            const result = await response.json();
            
            if (result.success) {
                // Show success message
                Toastify({
                    text: "Removed from wishlist",
                    duration: 3000,
                    close: true,
                    gravity: "top",
                    position: 'right',
                    backgroundColor: "#4caf50",
                    stopOnFocus: true
                }).showToast();

                // Reload the page to update the wishlist
                setTimeout(() => {
                    window.location.reload();
                }, 500);
            } else {
                throw new Error(result.message || 'Failed to remove item');
            }
        } catch (error) {
            console.error('Error removing from wishlist:', error);
            Toastify({
                text: error.message || "Failed to remove item",
                duration: 3000,
                close: true,
                gravity: "top",
                position: 'right',
                backgroundColor: "#f44336",
                stopOnFocus: true
            }).showToast();
        }
    }

    // Function to add item to cart
    async function addToCart(productId) {
        try {
            const response = await fetch('/add-to-cart', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    productId: productId,
                    quantity: 1
                })
            });

            const result = await response.json();
            
            if (result.success) {
                // Update cart count in header if element exists
                const cartCountElement = document.querySelector('.cart-count');
                if (cartCountElement) {
                    cartCountElement.textContent = result.cartCount;
                }

                // Show success message
                Toastify({
                    text: "Added to cart successfully!",
                    duration: 3000,
                    close: true,
                    gravity: "top",
                    position: 'right',
                    backgroundColor: "#4caf50",
                    stopOnFocus: true
                }).showToast();

                // Optionally remove from wishlist after adding to cart
                // Uncomment the line below if you want to remove from wishlist after adding to cart
                // await removeFromWishlist(productId);
                
            } else {
                throw new Error(result.message || 'Failed to add to cart');
            }
        } catch (error) {
            console.error('Error adding to cart:', error);
            Toastify({
                text: error.message || "Failed to add to cart",
                duration: 3000,
                close: true,
                gravity: "top",
                position: 'right',
                backgroundColor: "#f44336",
                stopOnFocus: true
            }).showToast();

            // If not logged in, redirect to login
            if (error.message === 'Please login to continue') {
                setTimeout(() => {
                    window.location.href = '/login';
                }, 1500);
            }
        }
    }
    </script>
</body>
</html>
